"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var shared_1 = require("./shared");
var PBKDF2_ROUND_DEFAULT = 1000;
function getBinarySignature() {
    return "iocane/1".split("").map(function (char) { return char.charCodeAt(0); });
}
exports.getBinarySignature = getBinarySignature;
/**
 * Pack encrypted content components into the final encrypted form
 * @param encryptedComponents The encrypted components payload
 * @returns The final encrypted form
 */
function packEncryptedText(encryptedComponents) {
    var content = encryptedComponents.content, iv = encryptedComponents.iv, salt = encryptedComponents.salt, auth = encryptedComponents.auth, rounds = encryptedComponents.rounds, method = encryptedComponents.method;
    return [content, iv, salt, auth, rounds, method].join("$");
}
exports.packEncryptedText = packEncryptedText;
/**
 * Unpack encrypted content components from an encrypted string
 * @param encryptedContent The encrypted string
 * @returns The extracted components
 * @throws {Error} Throws if the number of components is incorrect
 */
function unpackEncryptedText(encryptedContent) {
    var _a = encryptedContent.split("$"), content = _a[0], iv = _a[1], salt = _a[2], auth = _a[3], roundsRaw = _a[4], methodRaw = _a[5];
    // iocane was originally part of Buttercup's core package and used defaults from that originally.
    // There will be 4 components for pre 0.15.0 archives, and 5 in newer archives. The 5th component
    // is the pbkdf2 round count, which is optional:
    var rounds = roundsRaw ? parseInt(roundsRaw, 10) : PBKDF2_ROUND_DEFAULT;
    // Originally only "cbc" was supported, but GCM was added in version 1
    var method = methodRaw || shared_1.ALGO_DEFAULT;
    return {
        content: content,
        iv: iv,
        salt: salt,
        auth: auth,
        rounds: rounds,
        method: method
    };
}
exports.unpackEncryptedText = unpackEncryptedText;
