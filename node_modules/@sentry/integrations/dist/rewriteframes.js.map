{"version":3,"file":"rewriteframes.js","sourceRoot":"","sources":["../src/rewriteframes.ts"],"names":[],"mappings":"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","sourcesContent":["import { Event, EventProcessor, Hub, Integration, StackFrame } from '@sentry/types';\nimport { basename, relative } from '@sentry/utils';\n\ntype StackFrameIteratee = (frame: StackFrame) => StackFrame;\n\n/** Rewrite event frames paths */\nexport class RewriteFrames implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = RewriteFrames.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'RewriteFrames';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _root?: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _iteratee: StackFrameIteratee = (frame: StackFrame) => {\n    if (!frame.filename) {\n      return frame;\n    }\n    // Check if the frame filename begins with `/` or a Windows-style prefix such as `C:\\`\n    const isWindowsFrame = /^[A-Z]:\\\\/.test(frame.filename);\n    const startsWithSlash = /^\\//.test(frame.filename);\n    if (frame.filename && (isWindowsFrame || startsWithSlash)) {\n      const filename = isWindowsFrame\n        ? frame.filename\n            .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n            .replace(/\\\\/g, '/') // replace all `\\\\` instances with `/`\n        : frame.filename;\n      const base = this._root ? relative(this._root, filename) : basename(filename);\n      frame.filename = `app:///${base}`;\n    }\n    return frame;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { root?: string; iteratee?: StackFrameIteratee } = {}) {\n    if (options.root) {\n      this._root = options.root;\n    }\n    if (options.iteratee) {\n      this._iteratee = options.iteratee;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(RewriteFrames);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  public process(event: Event): Event {\n    const frames = this._getFramesFromEvent(event);\n    if (frames) {\n      for (const i in frames) {\n        // tslint:disable-next-line\n        frames[i] = this._iteratee(frames[i]);\n      }\n    }\n    return event;\n  }\n\n  /** JSDoc */\n  private _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n    const exception = event.exception;\n\n    if (exception) {\n      try {\n        return exception.values && exception.values[0].stacktrace && exception.values[0].stacktrace.frames;\n      } catch (_oO) {\n        return undefined;\n      }\n    } else if (event.stacktrace) {\n      return event.stacktrace.frames;\n    }\n    return undefined;\n  }\n}\n"]}