{"version":3,"sources":["../../../src/engine-rn-web/tasks/task.rnv.start.js"],"names":["taskRnvStart","c","parentTask","originTask","platform","port","runtime","hosted","program","TASK_CONFIGURE","TASK_START","then","localhost","catch","logError","bundleAssets","isWeinreEnabled","REMOTE_DEBUGGER_ENABLED_PLATFORMS","includes","WEB","TIZEN","WEBOS","TIZEN_MOBILE","TIZEN_WATCH","description","fn","task","params","PARAMS","withBase","withConfigure","platforms","KAIOS","FIREFOX_OS","FIREFOX_TV","CHROMECAST"],"mappings":"uQAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;;AAEO,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAOC,CAAP,CAAUC,UAAV,CAAsBC,UAAtB;AAChBC,QADgB,CACHH,CADG,CAChBG,QADgB;AAEhBC,IAFgB,CAEPJ,CAAC,CAACK,OAFK,CAEhBD,IAFgB;AAGhBE,MAHgB,CAGLN,CAAC,CAACO,OAHG,CAGhBD,MAHgB;;AAKxB,oBAAQ,cAAR,WAAkCL,UAAlC,UAAqDG,IAArD,YAAoE,CAAC,CAACE,MAAtE,EALwB;;AAOnBL,UAPmB;AAQd,+BAAYD,CAAZ,CAAeQ,yBAAf,CAA+BC,qBAA/B,CAA2CP,UAA3C,CARc;;;AAWxB,GAAII,MAAJ,CAAY;AACR,+BAAeN,CAAf;AACKU,IADL,CACU,iBAAM,iCAAeV,CAAC,CAACK,OAAF,CAAUM,SAAzB,KAAsCP,IAAtC,KAAN,EADV;AAEKQ,KAFL,CAEWC,gBAFX;AAGH;AACKC,YAhBkB,CAgBH,0BAAcd,CAAd,CAAiBA,CAAC,CAACG,QAAnB,CAA6B,cAA7B,CAhBG;AAiBlBY,eAjBkB,CAiBAC,6CAAkCC,QAAlC,CAA2Cd,QAA3C,GAAwD,CAACW,YAAzD,EAAyE,CAACR,MAjB1E;;AAmBhBH,QAnBgB;AAoBfe,cApBe;AAqBfC,gBArBe;AAsBfC,gBAtBe;AAuBfC,uBAvBe;AAwBfC,sBAxBe;;AA0BT,iCAAiBtB,CAAjB,CAAoBe,eAApB,CA1BS;;AA4BZT,MA5BY;AA6BL;AACH,4CADG;AAEH,IAFG,CA7BK;;;AAkCT,sCAAiBN,CAAjB,CAlCS,wEAArB,C;;;;AAsCQ;AACXuB,WAAW,CAAE,yBADF;AAEXC,EAAE,CAAEzB,YAFO;AAGX0B,IAAI,CAAE,OAHK;AAIXC,MAAM,CAAEC,kBAAOC,QAAP,CAAgBD,kBAAOE,aAAP,EAAhB,CAJG;AAKXC,SAAS,CAAE;AACPZ,cADO;AAEPC,gBAFO;AAGPC,gBAHO;AAIPC,uBAJO;AAKPC,sBALO;AAMPS,gBANO;AAOPC,qBAPO;AAQPC,qBARO;AASPC,qBATO,CALA,C","sourcesContent":["import open from 'better-opn';\nimport { getConfigProp } from '../../core/common';\nimport { logErrorPlatform } from '../../core/platformManager';\nimport { logTask, logError } from '../../core/systemManager/logger';\nimport { WEB,\n    TIZEN,\n    WEBOS,\n    TIZEN_MOBILE,\n    TIZEN_WATCH,\n    KAIOS,\n    FIREFOX_OS,\n    FIREFOX_TV,\n    CHROMECAST,\n    TASK_START,\n    TASK_CONFIGURE,\n    REMOTE_DEBUGGER_ENABLED_PLATFORMS,\n    PARAMS } from '../../core/constants';\nimport { runWebpackServer, waitForWebpack } from '../../sdk-webpack';\nimport { executeTask } from '../../core/engineManager';\n\nexport const taskRnvStart = async (c, parentTask, originTask) => {\n    const { platform } = c;\n    const { port } = c.runtime;\n    const { hosted } = c.program;\n\n    logTask('taskRnvStart', `parent:${parentTask} port:${port} hosted:${!!hosted}`);\n\n    if (!parentTask) {\n        await executeTask(c, TASK_CONFIGURE, TASK_START, originTask);\n    }\n\n    if (hosted) {\n        waitForWebpack(c)\n            .then(() => open(`http://${c.runtime.localhost}:${port}/`))\n            .catch(logError);\n    }\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets');\n    const isWeinreEnabled = REMOTE_DEBUGGER_ENABLED_PLATFORMS.includes(platform) && !bundleAssets && !hosted;\n\n    switch (platform) {\n        case WEB:\n        case TIZEN:\n        case WEBOS:\n        case TIZEN_MOBILE:\n        case TIZEN_WATCH:\n            // c.runtime.keepSessionActive = true;\n            return runWebpackServer(c, isWeinreEnabled);\n        default:\n            if (hosted) {\n                return logError(\n                    'This platform does not support hosted mode',\n                    true\n                );\n            }\n            return logErrorPlatform(c);\n    }\n};\n\nexport default {\n    description: 'Starts bundler / server',\n    fn: taskRnvStart,\n    task: 'start',\n    params: PARAMS.withBase(PARAMS.withConfigure()),\n    platforms: [\n        WEB,\n        TIZEN,\n        WEBOS,\n        TIZEN_MOBILE,\n        TIZEN_WATCH,\n        KAIOS,\n        FIREFOX_OS,\n        FIREFOX_TV,\n        CHROMECAST,\n    ],\n};\n"],"file":"task.rnv.start.js"}