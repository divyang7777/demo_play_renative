{"version":3,"sources":["../../../src/engine-rn-web/tasks/task.rnv.run.js"],"names":["_configureHostedIfRequired","c","bundleAssets","platform","hostedShellHeaders","rnv","paths","path","join","dir","pattern","override","ip","address","runtime","port","String","taskRnvRun","parentTask","originTask","target","hosted","program","TASK_CONFIGURE","TASK_RUN","shouldOpenBrowser","TASK_START","WEB","TIZEN","TIZEN_MOBILE","TIZEN_WATCH","WEBOS","KAIOS","FIREFOX_OS","FIREFOX_TV","CHROMECAST","only","description","fn","task","params","PARAMS","withBase","withConfigure","withRun","platforms"],"mappings":"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","sourcesContent":["import ip from 'ip';\nimport path from 'path';\n\nimport { logErrorPlatform } from '../../core/platformManager';\nimport { logTask, logDebug } from '../../core/systemManager/logger';\nimport { WEB,\n    TIZEN,\n    WEBOS,\n    TIZEN_MOBILE,\n    TIZEN_WATCH,\n    KAIOS,\n    FIREFOX_OS,\n    FIREFOX_TV,\n    CHROMECAST,\n    TASK_RUN, TASK_START,\n    TASK_CONFIGURE,\n    PARAMS } from '../../core/constants';\nimport { runWebpackServer } from '../../sdk-webpack';\nimport { getConfigProp, getPlatformProjectDir } from '../../core/common';\nimport { runTizen } from '../../sdk-tizen';\nimport { runWebOS } from '../../sdk-webos';\nimport { runFirefoxProject } from '../../sdk-firefox';\nimport { runChromecast } from '../../sdk-webpack/chromecast';\nimport { writeCleanFile } from '../../core/systemManager/fileutils';\nimport { executeTask, executeOrSkipTask } from '../../core/engineManager';\n\nconst _configureHostedIfRequired = async (c) => {\n    logTask('_configureHostedIfRequired');\n\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets', false);\n    const hostedShellHeaders = getConfigProp(c, c.platform, 'hostedShellHeaders', '');\n\n    if (!bundleAssets) {\n        logDebug('Running hosted build');\n        const { rnv } = c.paths;\n        writeCleanFile(\n            path.join(rnv.dir, 'supportFiles', 'appShell', 'index.html'),\n            path.join(getPlatformProjectDir(c), 'index.html'),\n            [\n                {\n                    pattern: '{{DEV_SERVER}}',\n                    override: `http://${ip.address()}:${c.runtime.port}`\n                },\n                {\n                    pattern: '{{APPSHELL_HTML_HEADER}}',\n                    override: String(hostedShellHeaders || '')\n                },\n            ], null, c\n        );\n    }\n};\n\nexport const taskRnvRun = async (c, parentTask, originTask) => {\n    const { platform } = c;\n    const { port } = c.runtime;\n    const { target } = c.runtime;\n    const { hosted } = c.program;\n    logTask('taskRnvRun', `parent:${parentTask} port:${port} target:${target} hosted:${hosted}`);\n\n    await executeOrSkipTask(c, TASK_CONFIGURE, TASK_RUN, originTask);\n\n    if (hosted) {\n        c.runtime.shouldOpenBrowser = true;\n        // return _taskStart(c);\n        return executeTask(c, TASK_START, TASK_RUN, originTask);\n    }\n\n    switch (platform) {\n        case WEB:\n            c.runtime.shouldOpenBrowser = true;\n            return runWebpackServer(c);\n        case TIZEN:\n        case TIZEN_MOBILE:\n        case TIZEN_WATCH:\n            if (!c.program.only) {\n                await _configureHostedIfRequired(c);\n            }\n            return runTizen(c, target);\n        case WEBOS:\n            if (!c.program.only) {\n                await _configureHostedIfRequired(c);\n            }\n            return runWebOS(c);\n        case KAIOS:\n        case FIREFOX_OS:\n        case FIREFOX_TV:\n            return runFirefoxProject(c);\n        case CHROMECAST:\n            if (!c.program.only) {\n                await _configureHostedIfRequired(c);\n            }\n            return runChromecast(c, platform, target);\n        default:\n            return logErrorPlatform(c);\n    }\n};\n\nexport default {\n    description: 'Run your app in browser',\n    fn: taskRnvRun,\n    task: 'run',\n    params: PARAMS.withBase(PARAMS.withConfigure(PARAMS.withRun())),\n    platforms: [\n        WEB,\n        TIZEN,\n        WEBOS,\n        TIZEN_MOBILE,\n        TIZEN_WATCH,\n        KAIOS,\n        FIREFOX_OS,\n        FIREFOX_TV,\n        CHROMECAST,\n    ],\n};\n"],"file":"task.rnv.run.js"}