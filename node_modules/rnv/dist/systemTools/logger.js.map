{"version":3,"sources":["../../src/systemTools/logger.js"],"names":["_chalkCols","white","v","green","red","yellow","default","gray","grey","blue","magenta","_chalkMono","bold","chalk","_chalk","RNV","logWelcome","str","_defaultColor","_c","files","rnv","package","version","rnvVersion","printIntoBox","includes","getCurrentCommand","timeStart","toLocaleString","printBoxEnd","console","log","_messages","_currentProcess","_isInfoEnabled","_isMono","_highlightColor","configureLogger","c","process","command","subCommand","isInfoEnabled","Date","program","mono","_updateDefaultColors","logAndSave","msg","skipLog","push","PRIVATE_PARAMS","excludeDollar","argArr","argv","slice","hideNext","output","map","join","dollar","logToSummary","logRaw","args","apply","logSummary","header","logContent","length","forEach","m","timeString","timeEnd","printBoxStart","project","name","buildConfig","workspaceID","platform","runtime","engine","id","_meta","currentAppConfigId","scheme","config","defaultProjectConfigs","defaults","supportedPlatforms","plats","i","obj","mapping","defaultVal","isEjected","paths","platformTemplatesDirs","platformTemplates","dir","printArrIntoBox","template","envString","arch","versions","node","_msToTime","replace","seconds","s","ms","secs","mins","hrs","setCurrentJob","logTask","task","customChalk","ch","postMsg","logWarning","logInfo","logDebug","logComplete","isEnd","logEnd","logSuccess","logError","e","skipAnalytics","Analytics","captureException","message","stack","code","teardown","then","exit","logInitialize","logAppInfo","Promise","resolve","str2","intent","chalkIntend","endLine","intend","l","arr","prefix","stringArr","rnvStatus"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\n/* eslint-disable no-console */\nimport _chalk from 'chalk';\nimport { generateOptions } from './prompt';\nimport Analytics from './analytics';\n\nconst _chalkCols = {\n    white: v => v,\n    green: v => v,\n    red: v => v,\n    yellow: v => v,\n    default: v => v,\n    gray: v => v,\n    grey: v => v,\n    blue: v => v,\n    magenta: v => v\n};\nconst _chalkMono = {\n    ..._chalkCols,\n    bold: _chalkCols\n};\n\nlet chalk = _chalk;\n\nlet RNV = 'ReNative';\n\n\nexport const logWelcome = () => {\n    // prettier-ignore\n    let str = _defaultColor(`\n┌──────────────────────────────────────────────────────────────────────────────┐\n│                                                                              │\n│        ${chalk.red('██████╗')} ███████╗${chalk.red('███╗   ██╗')} █████╗ ████████╗██╗${chalk.red('██╗   ██╗')}███████╗       │\n│        ${chalk.red('██╔══██╗')}██╔════╝${chalk.red('████╗  ██║')}██╔══██╗╚══██╔══╝██║${chalk.red('██║   ██║')}██╔════╝       │\n│        ${chalk.red('██████╔╝')}█████╗  ${chalk.red('██╔██╗ ██║')}███████║   ██║   ██║${chalk.red('██║   ██║')}█████╗         │\n│        ${chalk.red('██╔══██╗')}██╔══╝  ${chalk.red('██║╚██╗██║')}██╔══██║   ██║   ██║${chalk.red('╚██╗ ██╔╝')}██╔══╝         │\n│        ${chalk.red('██║  ██║')}███████╗${chalk.red('██║ ╚████║')}██║  ██║   ██║   ██║${chalk.red(' ╚████╔╝ ')}███████╗       │\n│        ${chalk.red('╚═╝  ╚═╝')}╚══════╝${chalk.red('╚═╝  ╚═══╝')}╚═╝  ╚═╝   ╚═╝   ╚═╝${chalk.red('  ╚═══╝  ')}╚══════╝       │\n│                                                                              │\n`);\n\n    if (_c?.files?.rnv?.package?.version) {\n        _c.rnvVersion = _c.files.rnv.package.version;\n        str += printIntoBox(`      Version: ${chalk.green(_c.rnvVersion)}`, 1);\n        if (_c.rnvVersion.includes('alpha')) {\n            str += printIntoBox(\n                `      ${chalk.yellow(\n                    'WARNING: this is a prerelease version.'\n                )}`,\n                1\n            );\n            str += printIntoBox(\n                `      ${chalk.yellow(\n                    'Use \"npm install rnv\" for stable one.'\n                )}`,\n                1\n            );\n        }\n    }\n    str += printIntoBox(`      ${chalk.grey('https://renative.org')}`, 1);\n    str += printIntoBox(`      🚀 ${chalk.yellow('Firing up!...')}`, 1);\n    str += printIntoBox(`      ${getCurrentCommand()}`);\n    if (_c?.timeStart) {\n        str += printIntoBox(\n            `      Start Time: ${_c.timeStart.toLocaleString()}`\n        );\n    }\n    str += printIntoBox('');\n    str += printBoxEnd();\n    str += '\\n';\n\n    console.log(str);\n};\n\nlet _messages = [];\n// let _currentCommand;\nlet _currentProcess;\nlet _isInfoEnabled = false;\nlet _c;\nlet _isMono = false;\nlet _defaultColor;\nlet _highlightColor;\n\nexport const configureLogger = (\n    c,\n    process,\n    command,\n    subCommand,\n    isInfoEnabled\n) => {\n    _messages = [];\n    _c = c;\n    _c.timeStart = new Date();\n    _currentProcess = process;\n    // _currentCommand = command;\n    // _currentSubCommand = subCommand;\n    _isInfoEnabled = isInfoEnabled;\n    _isMono = c.program.mono;\n    if (_isMono) {\n        chalk = _chalkMono;\n    }\n    _updateDefaultColors();\n    RNV = getCurrentCommand();\n};\n\nconst _updateDefaultColors = () => {\n    _defaultColor = chalk.gray;\n    _highlightColor = chalk.green;\n};\n_updateDefaultColors();\n\nexport const logAndSave = (msg, skipLog) => {\n    if (_messages && !_messages.includes(msg)) _messages.push(msg);\n    if (!skipLog) console.log(`${msg}`);\n};\n\nconst PRIVATE_PARAMS = ['-k', '--key'];\n\nexport const getCurrentCommand = (excludeDollar = false) => {\n    if (!_c) return '_c is undefined';\n    const argArr = _c.process.argv.slice(2);\n    let hideNext = false;\n    const output = argArr\n        .map((v) => {\n            if (hideNext) {\n                hideNext = false;\n                return '********';\n            }\n            if (PRIVATE_PARAMS.includes(v)) {\n                hideNext = true;\n            }\n\n            return v;\n        })\n        .join(' ');\n    const dollar = excludeDollar ? '' : '$ ';\n    return `${dollar}rnv ${output}`;\n};\n\nexport const logToSummary = (v) => {\n    _messages.push(`\\n${v}`);\n};\n\nexport const logRaw = (...args) => {\n    console.log.apply(null, args);\n};\n\nexport const logSummary = (header = 'SUMMARY') => {\n    let logContent = printIntoBox('All good as 🦄 ');\n    if (_messages && _messages.length) {\n        logContent = '';\n        _messages.forEach((m) => {\n            logContent += `│ ${m}\\n`;\n        });\n    }\n\n    let timeString = '';\n    if (_c) {\n        _c.timeEnd = new Date();\n        timeString = `| ${_c.timeEnd.toLocaleString()}`;\n    }\n\n    let str = printBoxStart(`🚀  ${header} ${timeString}`, getCurrentCommand());\n    if (_c) {\n        str += printIntoBox(\n            `ReNative Version: ${_highlightColor(_c.rnvVersion)}`,\n            1\n        );\n        if (_c.files.project.package) {\n            str += printIntoBox(\n                `Project Name ($package.name): ${_highlightColor(\n                    _c.files.project.package.name\n                )}`,\n                1\n            );\n            str += printIntoBox(\n                `Project Version ($package.version): ${_highlightColor(\n                    _c.files.project.package.version\n                )}`,\n                1\n            );\n        }\n\n        if (_c.buildConfig?.workspaceID) {\n            str += printIntoBox(\n                `Workspace ($.workspaceID): ${_highlightColor(_c.buildConfig.workspaceID)}`,\n                1\n            );\n        }\n        if (_c?.platform) {\n            str += printIntoBox(`Platform (-p): ${_highlightColor(_c.platform)}`, 1);\n        }\n        if (_c?.runtime?.engine) {\n            str += printIntoBox(`Engine ($.platforms.${_c?.platform}.engine): ${\n                _highlightColor(_c.runtime.engine?.id)\n            }`, 1);\n        }\n        if (_c.buildConfig?._meta?.currentAppConfigId) {\n            str += printIntoBox(\n                `App Config (-c): ${_highlightColor(\n                    _c.buildConfig._meta?.currentAppConfigId\n                )}`,\n                1\n            );\n        }\n        if (_c.runtime?.scheme) {\n            str += printIntoBox(\n                `Build Scheme (-s): ${_highlightColor(_c.runtime?.scheme)}`,\n                1\n            );\n        }\n        if (_c.files.project.config) {\n            const defaultProjectConfigs = _c.files.project.config.defaults;\n            if (defaultProjectConfigs?.supportedPlatforms) {\n                const plats = [];\n                generateOptions(\n                    _c.buildConfig?.defaults?.supportedPlatforms,\n                    true,\n                    null,\n                    (i, obj, mapping, defaultVal) => {\n                        let isEjected = '';\n                        if (_c.paths.project.platformTemplatesDirs) {\n                            isEjected = _c.paths.project.platformTemplatesDirs[\n                                obj\n                            ]?.includes(_c.paths.rnv.platformTemplates.dir)\n                                ? ''\n                                : '(ejected)';\n                        }\n\n                        plats.push(`${defaultVal}${isEjected}`);\n                    }\n                );\n                str += printArrIntoBox(plats, 'Supported Platforms: ');\n            }\n            if (defaultProjectConfigs?.template) {\n                str += printIntoBox(\n                    `Master Template: ${_highlightColor(\n                        defaultProjectConfigs.template\n                    )}`,\n                    1\n                );\n            }\n        }\n        if (_c.process) {\n            const envString = `${_c.process.platform} | ${_c.process.arch} | node v${_c.process.versions?.node}`;\n            str += printIntoBox(`Env Info: ${chalk.gray(envString)}`, 1);\n        }\n\n        if (_c.timeEnd) {\n            str += printIntoBox(\n                `Executed Time: ${chalk.yellow(\n                    _msToTime(_c.timeEnd - _c.timeStart)\n                )}`,\n                1\n            );\n        }\n    }\n\n    str += printIntoBox('');\n    str += logContent.replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n');\n    str += printIntoBox('');\n    str += printBoxEnd();\n\n    console.log(str);\n};\n\nconst _msToTime = (seconds) => {\n    let s = seconds;\n    const ms = s % 1000;\n    s = (s - ms) / 1000;\n    const secs = s % 60;\n    s = (s - secs) / 60;\n    const mins = s % 60;\n    const hrs = (s - mins) / 60;\n\n    return `${hrs}h:${mins}m:${secs}s:${ms}ms`;\n};\n\nexport const setCurrentJob = () => {\n    // _currentCommand = job;\n};\n\nexport const logTask = (task, customChalk) => {\n    const ch = customChalk || chalk.green;\n    const postMsg = customChalk ? '' : ' - Starting!';\n    console.log(ch(`${RNV} - ${task}${postMsg}`));\n};\n\nexport const logWarning = (msg) => {\n    logAndSave(chalk.yellow(`⚠️  ${RNV} - WARNING: ${msg}`));\n};\n\nexport const logInfo = (msg) => {\n    console.log(chalk.magenta(`ℹ️  ${RNV} - NOTE: ${msg}`));\n};\n\nexport const logDebug = (...args) => {\n    if (_isInfoEnabled) console.log.apply(null, args);\n};\n\nexport const isInfoEnabled = () => _isInfoEnabled;\n\nexport const logComplete = (isEnd = false) => {\n    console.log(chalk.bold.white(`\\n ${RNV} - Done! 🚀`));\n    if (isEnd) logEnd(0);\n};\n\nexport const logSuccess = (msg) => {\n    logAndSave(`✅ ${chalk.magenta(msg)}`);\n};\n\nexport const logError = (e, isEnd = false, skipAnalytics = false) => {\n    if (!skipAnalytics) {\n        Analytics.captureException(e);\n    }\n\n    if (e && e.message) {\n        logAndSave(\n            chalk.red(`🛑  ${RNV} - ERRROR! ${e.message}\\n${e.stack}`),\n            isEnd\n        );\n    } else {\n        logAndSave(chalk.red(`🛑  ${RNV} - ERRROR! ${e}`), isEnd);\n    }\n\n    if (isEnd) logEnd(1);\n};\n\nexport const logEnd = (code) => {\n    logSummary();\n    if (_currentProcess) {\n        Analytics.teardown().then(() => {\n            _currentProcess.exit(code);\n        });\n    }\n};\n\nexport const logInitialize = () => {\n    logWelcome();\n};\n\nexport const logAppInfo = c => new Promise((resolve) => {\n    logInfo(`Current App Config: ${chalk.bold.white(\n        c.buildConfig.id\n    )}`);\n\n    resolve();\n});\n\nexport const printIntoBox = (str2, intent = 0) => {\n    let output = _defaultColor('│  ');\n    let chalkIntend = intent;\n    let endLine = '';\n    let intend;\n    if (_isMono) {\n        intend = 0;\n        chalkIntend = 0;\n    } else {\n        intend = str2 === '' ? 1 : 2;\n    }\n    for (let i = 0; i < chalkIntend + intend; i++) {\n        endLine += '          ';\n    }\n    endLine\n        += '                                                                               │\\n';\n    output += _defaultColor(str2);\n    const l = output.length - endLine.length;\n    output += _defaultColor(endLine.slice(l));\n    return output;\n};\n\nexport const printArrIntoBox = (arr, prefix = '') => {\n    let output = '';\n    let stringArr = '';\n    let i = 0;\n    arr.forEach((v) => {\n        const l = i === 0 ? 60 - _defaultColor(prefix).length : 60;\n        if (stringArr.length > l) {\n            if (i === 0 && prefix.length) {\n                output += printIntoBox(\n                    `${_defaultColor(prefix)}${_defaultColor(stringArr)}`,\n                    2\n                );\n            } else {\n                output += printIntoBox(_defaultColor(stringArr), 1);\n            }\n\n            stringArr = '';\n            i++;\n        }\n        stringArr += `${v}, `;\n        // stringArr[i] += `${c.platformDefaults[v].icon} ${chalk.white(v)}, `;\n    });\n    if (i === 0 && prefix.length) {\n        output += printIntoBox(\n            `${_defaultColor(prefix)}${_defaultColor(stringArr.slice(0, -2))}`,\n            2\n        );\n    } else {\n        output += printIntoBox(_defaultColor(stringArr.slice(0, -2)), 1);\n    }\n\n    return output;\n};\n\nexport const printBoxStart = (str, str2) => {\n    let output = _defaultColor(\n        '┌──────────────────────────────────────────────────────────────────────────────┐\\n'\n    );\n    output += printIntoBox(str);\n    output += printIntoBox(str2 || '');\n    output += _defaultColor(\n        '├──────────────────────────────────────────────────────────────────────────────┤\\n'\n    );\n    return output;\n};\n\nexport const rnvStatus = async () => Promise.resolve();\n\nexport const printBoxEnd = () => _defaultColor(\n    '└──────────────────────────────────────────────────────────────────────────────┘'\n);\n\nexport default {\n    logEnd,\n    logInfo,\n    logTask,\n    logError,\n    logDebug,\n    logAppInfo,\n    logWarning,\n    logSuccess,\n    logWelcome,\n    logComplete,\n    logInitialize\n};\n"],"file":"logger.js"}