{"version":3,"sources":["../src/common.js"],"names":["initializeBuilder","cmd","subCmd","process","program","c","command","subCommand","info","getTimestampPathsConfig","platform","timestampBuildFiles","pPath","path","join","paths","project","builds","dir","runtime","appId","getConfigProp","map","v","length","timestamp","generateChecksum","str","algorithm","encoding","crypto","createHash","update","digest","getSourceExts","p","sExt","PLATFORMS","sourceExts","factors","platforms","fallbacks","getSourceExtsAsString","sanitizeColor","val","key","chalk","white","rgb","rgbDecimal","hex","colorString","get","to","Math","round","isBuildSchemeSupported","scheme","buildConfig","buildSchemes","schemeDoesNotExist","opts","name","type","message","choices","keysAsArray","logMessage","selectedScheme","confirmActiveBundler","skipActiveServerCheck","warningMessage","port","confirm","Promise","reject","getAppFolder","getAppSubFolder","subFolder","IOS","TVOS","getAppTemplateFolder","platformTemplatesDirs","CLI_PROPS","defaultVal","split","ps","keyArr","baseKey","shift","subKey","resultPlatforms","undefined","getFlavouredProp","resultCli","includes","resultScheme","resultCommon","common","result","Config","getValueOrMergedObject","getAppId","id","idSuffix","getAppTitle","getAppVersion","files","package","version","getAppAuthor","author","getAppLicense","license","getEntryFile","entryFile","getGetJsBundleFile","getAppDescription","description","getAppVersionCode","versionCode","vc","forEach","Number","toString","logErrorPlatform","PLATFORM_RUNS","configureIfRequired","device","nc","appConfig","reset","resetHard","getBinaryPath","appFolder","signingConfig","productName","appName","ANDROID","ANDROID_TV","ANDROID_WEAR","WEB","MACOS","WINDOWS","TIZEN","TIZEN_MOBILE","WEBOS","isMonorepo","fs","existsSync","resolve","__dirname","_err","getMonorepoRoot","areNodeModulesInstalled","getBuildsFolder","customPath","pp","getIP","ip","address","cleanPlatformIfRequired","checkPortInUse","err","availablePort","parseInt","obj","val1","getBuildFilePath","filePath","sp","sp2","projectConfig","sp3","waitForEmulator","cli","callback","attempts","maxAttempts","CHECK_INTEVAL","maxErrorLength","spinner","start","interval","setInterval","silent","timeout","then","resp","clearInterval","succeed","fail","catch","waitForWebpack","engine","extendConfig","devServerHost","localhost","url","axios","res","status","importPackageFromProject","pkg","require","default","writeCleanFile","logTask","logWarning","logError","logSuccess","logDebug"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;;AAEO,GAAMA,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAOC,GAAP,CAAYC,MAAZ,CAAoBC,OAApB,CAA6BC,OAA7B;AACvBC,CADuB,CACnB,kCAAgBD,OAAhB,CAAyBD,OAAzB,CAAkCF,GAAlC,CAAuCC,MAAvC,CADmB;;AAG7B;AACIG,CADJ;AAEIA,CAAC,CAACF,OAFN;AAGIE,CAAC,CAACC,OAHN;AAIID,CAAC,CAACE,UAJN;AAKIH,OAAO,CAACI,IAAR,GAAiB,IALrB;;AAOA,4BAV6B;;AAYtBH,CAZsB,uEAA1B,C;;;AAeA,GAAMI,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACJ,CAAD,CAAIK,QAAJ,CAAiB;AACpD,GAAIC,CAAAA,mBAAJ;AACA,GAAMC,CAAAA,KAAK,CAAGC,cAAKC,IAAL;AACVT,CAAC,CAACU,KAAF,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,GADb;AAEPb,CAAC,CAACc,OAAF,CAAUC,KAFH,KAEYV,QAFZ,CAAd;;AAIA,GAAIA,QAAQ,GAAK,KAAjB,CAAwB;AACpBC,mBAAmB,CAAGU,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,qBAAd,CAAqC,EAArC,CAAb,CAAsDY,GAAtD,CAA2D,SAAAC,CAAC,QAAIV,eAAKC,IAAL,CAAUF,KAAV,CAAiBW,CAAjB,CAAJ,EAA5D,CAAtB;AACH;AACD,yBAAIZ,mBAAJ,eAAI,qBAAqBa,MAAzB,CAAiC;AAC7B,MAAO,CAAET,KAAK,CAAEJ,mBAAT,CAA8Bc,SAAS,CAAEpB,CAAC,CAACc,OAAF,CAAUM,SAAnD,CAAP;AACH;AACD,MAAO,KAAP;AACH,CAbM,C;;AAeA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,GAAD,CAAMC,SAAN,CAAiBC,QAAjB,QAA8BC;AACzDC,UADyD,CAC9CH,SAAS,EAAI,KADiC;AAEzDI,MAFyD,CAElDL,GAFkD,CAE7C,MAF6C;AAGzDM,MAHyD,CAGlDJ,QAAQ,EAAI,KAHsC,CAA9B,EAAzB,C;;AAKA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAC7B,CAAD,CAAI8B,CAAJ,CAAU;;;AAGnC,GAAMC,CAAAA,IAAI,eAAGC,qBAAUF,CAAV,CAAH,eAAG,aAAcG,UAA3B;AACA,GAAIF,IAAJ,CAAU;AACN,gDAAWA,IAAI,CAACG,OAAhB,kCAA4BH,IAAI,CAACI,SAAjC,kCAA+CJ,IAAI,CAACK,SAApD;AACH;AACD,MAAO,EAAP;AACH,CARM,C;;AAUA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACrC,CAAD,CAAI8B,CAAJ,CAAU;AAC3C,GAAMG,CAAAA,UAAU,CAAGJ,aAAa,CAAC7B,CAAD,CAAI8B,CAAJ,CAAhC;AACA,MAAOG,CAAAA,UAAU,CAACd,MAAX,MAAyBc,UAAU,CAACxB,IAAX,CAAgB,KAAhB,CAAzB,MAAsD,IAA7D;AACH,CAHM,C;;AAKA,GAAM6B,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,CAAMC,GAAN,CAAc;AACvC,GAAI,CAACD,GAAL,CAAU;AACN;AACuBE,eAAMC,KAAN,CAAYF,GAAZ,CADvB;;AAGA,MAAO;AACHG,GAAG,CAAE,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,CAAhB,CADF;AAEHC,UAAU,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAFT;AAGHC,GAAG,CAAE,SAHF,CAAP;;AAKH;;AAED,GAAMF,CAAAA,GAAG,CAAGG,qBAAYC,GAAZ,CAAgBJ,GAAhB,CAAoBJ,GAApB,CAAZ;AACA,GAAMM,CAAAA,GAAG,CAAGC,qBAAYE,EAAZ,CAAeH,GAAf,CAAmBF,GAAnB,CAAZ;;AAEA,MAAO;AACHA,GAAG,CAAHA,GADG;AAEHC,UAAU,CAAED,GAAG,CAAC1B,GAAJ,CAAQ,SAAAC,CAAC,QAAKA,CAAAA,CAAC,CAAG,CAAJ,CAAQ+B,IAAI,CAACC,KAAL,CAAYhC,CAAC,CAAG,GAAL,CAAY,EAAvB,EAA6B,EAArC,CAA0CA,CAA/C,EAAT,CAFT;AAGH2B,GAAG,CAAHA,GAHG,CAAP;;AAKH,CApBM,C;;AAsBA,GAAMM,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAAOnD,CAAP;AAClC,8CAAkCA,CAAC,CAACK,QAApC;;AAEQ+C,MAH0B,CAGfpD,CAAC,CAACD,OAHa,CAG1BqD,MAH0B;;AAKlC,GAAI,CAACpD,CAAC,CAACqD,WAAF,CAAclB,SAAd,CAAwBnC,CAAC,CAACK,QAA1B,CAAL,CAA0C;AACtCL,CAAC,CAACqD,WAAF,CAAclB,SAAd,CAAwBnC,CAAC,CAACK,QAA1B,EAAsC,EAAtC;AACH;;AAEOiD,YAT0B,CASTtD,CAAC,CAACqD,WAAF,CAAclB,SAAd,CAAwBnC,CAAC,CAACK,QAA1B,CATS,CAS1BiD,YAT0B;;AAW7BA,YAX6B;AAY9B;;AAEQtD,CAAC,CAACK,QAFV,sDAZ8B;;;AAiBvB,KAjBuB;;;AAoB5BkD,kBApB4B,CAoBPH,MAAM,EAAI,CAACE,YAAY,CAACF,MAAD,CApBhB;AAqB9BA,MAAM,GAAK,IAAX,EAAmBG,kBArBW;AAsB9B,GAAIA,kBAAkB,EAAIH,MAAtB,EAAgCA,MAAM,GAAK,IAA/C,CAAqD;AACjD,qBAAS,0CAAT;AACH;AACKI,IAzBwB,CAyBjB,4BAAgBF,YAAhB,CAzBiB;;AA2BG,2BAAe;AAC5CG,IAAI,CAAE,gBADsC;AAE5CC,IAAI,CAAE,MAFsC;AAG5CC,OAAO,CAAE,oCAHmC;AAI5CC,OAAO,CAAEJ,IAAI,CAACK,WAJ8B;AAK5CC,UAAU,CAAE,4BALgC,CAAf,CA3BH,+CA2BtBC,cA3BsB,uBA2BtBA,cA3BsB;;;AAmC9B/D,CAAC,CAACD,OAAF,CAAUqD,MAAV,CAAmBW,cAAnB,CAnC8B;AAoCvBA,cApCuB;;AAsC3BX,MAtC2B,yEAA/B,C;;;AAyCA,GAAMY,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAOhE,CAAP;AAC5BA,CAAC,CAACc,OAAF,CAAUmD,qBADkB,2DACY,IADZ;AAEN,2BAAe;AACrCP,IAAI,CAAE,SAD+B;AAErCC,OAAO,CAAE,6CAF4B;AAGrCO,cAAc,YAAalE,CAAC,CAACK,QAAf;AACVL,CAAC,CAACc,OAAF,CAAUqD,IADA,mBAHuB,CAAf,CAFM,+CAExBC,OAFwB,wBAExBA,OAFwB;;;;AAU5BA,OAV4B,2DAUZ,IAVY;AAWzBC,OAAO,CAACC,MAAR,CAAe,mBAAf,CAXyB,wEAA7B,C;;;AAcA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACvE,CAAD,CAAIK,QAAJ,QAAiBG,eAAKC,IAAL,CAAUT,CAAC,CAACU,KAAF,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,GAAjC,CAAyCb,CAAC,CAACc,OAAF,CAAUC,KAAnD,KAA4DV,QAA5D,CAAjB,EAArB,C;;AAEA,GAAMmE,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACxE,CAAD,CAAIK,QAAJ,CAAiB;AAC5C,GAAIoE,CAAAA,SAAS,CAAG,EAAhB;AACA,GAAIpE,QAAQ,GAAKqE,cAAjB,CAAsBD,SAAS,CAAG,QAAZ,CAAtB;AACK,GAAIpE,QAAQ,GAAKsE,eAAjB,CAAuBF,SAAS,CAAG,YAAZ;AAC5B,MAAOjE,eAAKC,IAAL,CAAU8D,YAAY,CAACvE,CAAD,CAAIK,QAAJ,CAAtB,CAAqCoE,SAArC,CAAP;AACH,CALM,C;;AAOA,GAAMG,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAC5E,CAAD,CAAIK,QAAJ,QAAiBG,eAAKC,IAAL;AACjDT,CAAC,CAACU,KAAF,CAAQC,OAAR,CAAgBkE,qBAAhB,CAAsCxE,QAAtC,CADiD,IACGA,QADH,CAAjB,EAA7B,C;;;AAIA,GAAMyE,CAAAA,SAAS,CAAG;AACrB,mBADqB;AAErB,kBAFqB;AAGrB,2BAHqB,CAAlB,C;;;;AAOA,GAAM9D,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAChB,CAAD,CAAIK,QAAJ,CAAcmC,GAAd,CAAmBuC,UAAnB,CAAkC;AAC3D,GAAI,CAAC/E,CAAC,CAACqD,WAAP,CAAoB;AAChB,qBAAS,4CAAT;AACA,MAAO,KAAP;AACH;AACD,GAAI,CAACb,GAAD,EAAQ,CAACA,GAAG,CAACwC,KAAjB,CAAwB;AACpB,qBAAS,6BAAT;AACA,MAAO,KAAP;AACH;AACD,GAAMlD,CAAAA,CAAC,wBAAG9B,CAAC,CAACqD,WAAF,CAAclB,SAAjB,eAAG,sBAA0B9B,QAA1B,CAAV;AACA,GAAM4E,CAAAA,EAAE,CAAGjF,CAAC,CAACc,OAAF,CAAUsC,MAArB;AACA,GAAM8B,CAAAA,MAAM,CAAG1C,GAAG,CAACwC,KAAJ,CAAU,GAAV,CAAf;AACA,GAAMG,CAAAA,OAAO,CAAGD,MAAM,CAACE,KAAP,EAAhB;AACA,GAAMC,CAAAA,MAAM,CAAGH,MAAM,CAACzE,IAAP,CAAY,GAAZ,CAAf;;AAEA,GAAI6E,CAAAA,eAAJ;AACA,GAAIlC,CAAAA,MAAJ;AACA,GAAItB,CAAJ,CAAO;AACHsB,MAAM,CAAGtB,CAAC,CAACwB,YAAF,CAAiBxB,CAAC,CAACwB,YAAF,CAAe2B,EAAf,CAAjB,CAAsCM,SAA/C;AACAD,eAAe,CAAGE,gBAAgB;AAC9BxF,CAD8B;AAE9BA,CAAC,CAACqD,WAAF,CAAclB,SAAd,CAAwB9B,QAAxB,CAF8B;AAG9B8E,OAH8B,CAAlC;;AAKH;;AAED/B,MAAM,CAAGA,MAAM,EAAI,EAAnB;AACA,GAAMqC,CAAAA,SAAS,CAAGX,SAAS,CAACY,QAAV,CAAmBP,OAAnB,EAA8BnF,CAAC,CAACD,OAAF,CAAUoF,OAAV,CAA9B,CAAmDI,SAArE;AACA,GAAMI,CAAAA,YAAY,CAAGvC,MAAM,CAAC+B,OAAD,CAA3B;AACA,GAAMS,CAAAA,YAAY,CAAGJ,gBAAgB,CAACxF,CAAD,CAAIA,CAAC,CAACqD,WAAF,CAAcwC,MAAlB,CAA0BV,OAA1B,CAArC;;AAEA,GAAIW,CAAAA,MAAM,CAAGC,gBAAOC,sBAAP;AACTP,SADS;AAETE,YAFS;AAGTL,eAHS;AAITM,YAJS,CAAb;;;AAOA,GAAIE,MAAM,GAAKP,SAAf,CAA0BO,MAAM,CAAGf,UAAT;AAC1B,sCAA0B1E,QAA1B,KAAsCmC,GAAtC,KAA6CsD,MAA7C;AACA,GAAI,MAAOA,CAAAA,MAAP,GAAkB,QAAlB,EAA8BT,MAAM,CAAClE,MAAzC,CAAiD;AAC7C,MAAO,oBAAK2E,MAAL,CAAaT,MAAb,CAAP;AACH;AACD,MAAOS,CAAAA,MAAP;AACH,CA5CM,C;;AA8CA,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACjG,CAAD,CAAIK,QAAJ,CAAiB;AACrC,GAAM6F,CAAAA,EAAE,CAAGlF,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,IAAd,CAAxB;AACA,GAAM8F,CAAAA,QAAQ,CAAGnF,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,UAAd,CAA9B;AACA,MAAO8F,CAAAA,QAAQ,IAAMD,EAAN,CAAWC,QAAX,CAAwBD,EAAvC;AACH,CAJM,C;;AAMA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACpG,CAAD,CAAIK,QAAJ,QAAiBW,CAAAA,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,OAAd,CAA9B,EAApB,C;;AAEA,GAAMgG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACrG,CAAD,CAAIK,QAAJ,kCAAiBW,CAAAA,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,SAAd,CAAb,0BAAyCL,CAAC,CAACsG,KAAF,CAAQ3F,OAAR,CAAgB4F,OAAzD,eAAyC,sBAAyBC,OAAlE,CAAjB,EAAtB,C;;AAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACzG,CAAD,CAAIK,QAAJ,mCAAiBW,CAAAA,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,QAAd,CAAb,2BAAwCL,CAAC,CAACsG,KAAF,CAAQ3F,OAAR,CAAgB4F,OAAxD,eAAwC,uBAAyBG,MAAjE,CAAjB,EAArB,C;;AAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAC3G,CAAD,CAAIK,QAAJ,mCAAiBW,CAAAA,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,SAAd,CAAb,2BAAyCL,CAAC,CAACsG,KAAF,CAAQ3F,OAAR,CAAgB4F,OAAzD,eAAyC,uBAAyBK,OAAlE,CAAjB,EAAtB,C;;AAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAC7G,CAAD,CAAIK,QAAJ,kFAAiBL,CAAC,CAACqD,WAAF,CAAclB,SAA/B,uCAAiB,uBAA0B9B,QAA1B,CAAjB,eAAiB,uBAAqCyG,SAAtD,EAArB,C;;AAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAC/G,CAAD,CAAIK,QAAJ,QAAiBW,CAAAA,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,iBAAd,CAA9B,EAA3B,C;;AAEA,GAAM2G,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAChH,CAAD,CAAIK,QAAJ,mCAAiBW,CAAAA,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,aAAd,CAAb;AAC3CL,CAAC,CAACsG,KAAF,CAAQ3F,OAAR,CAAgB4F,OAD2B,eAC3C,uBAAyBU,WADkB,CAAjB,EAA1B,C;;AAGA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAClH,CAAD,CAAIK,QAAJ,CAAiB;AAC9C,GAAM8G,CAAAA,WAAW,CAAGnG,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,aAAd,CAAjC;AACA,GAAI8G,WAAJ,CAAiB,MAAOA,CAAAA,WAAP;;AAEjB,GAAMX,CAAAA,OAAO,CAAGH,aAAa,CAACrG,CAAD,CAAIK,QAAJ,CAA7B;;AAEA,GAAI+G,CAAAA,EAAE,CAAG,EAAT;AACAZ,OAAO;AACFxB,KADL,CACW,GADX,EACgB,CADhB;AAEKA,KAFL,CAEW,GAFX;AAGKqC,OAHL,CAGa,SAACnG,CAAD,CAAO;AACZkG,EAAE,EAAIlG,CAAC,CAACC,MAAF,CAAW,CAAX,CAAeD,CAAf,KAAuBA,CAA7B;AACH,CALL;AAMA,MAAOoG,CAAAA,MAAM,CAACF,EAAD,CAAN,CAAWG,QAAX,EAAP;AACH,CAdM,C;;AAgBA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACxH,CAAD,CAAIK,QAAJ,CAAiB;AAC7C;AACiBoC,eAAMC,KAAN;AACTrC,QADS,CADjB;AAGkCoC,eAAMC,KAAN,CAAY1C,CAAC,CAACC,OAAd,CAHlC;AAII,IAJJ;;AAMH,CAPM,C;;AASA,GAAMwH,CAAAA,aAAa,CAAG,EAAtB,C;;AAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAO1H,CAAP,CAAUK,QAAV;AAC/B,2CAA+BA,QAA/B,EAD+B;;AAG3BoH,aAAa,CAACpH,QAAD,CAHc;;;AAM/BoH,aAAa,CAACpH,QAAD,CAAb,CAA0B,IAA1B;AACQsH,MAPuB,CAOZ3H,CAAC,CAACD,OAPU,CAOvB4H,MAPuB;AAQzBC,EARyB,CAQpB;AACP3H,OAAO,CAAE,WADF;AAEPF,OAAO,CAAE;AACL8H,SAAS,CAAE7H,CAAC,CAACkG,EADR;AAELvE,MAAM,CAAE,KAFH;AAGLtB,QAAQ,CAARA,QAHK;AAILsH,MAAM,CAANA,MAJK,CAFF,CARoB;;;;AAkB3B3H,CAAC,CAACD,OAAF,CAAU+H,KAlBiB;AAmBrB,sCAAmB9H,CAAnB,CAAsBK,QAAtB,CAnBqB;;;AAsB3BL,CAAC,CAACD,OAAF,CAAUgI,SAtBiB;AAuBrB,sCAAmB/H,CAAnB,CAvBqB;;AAyBzB,uCAAoBA,CAApB,CAAuBK,QAAvB,CAzByB;AA0BzB,iBAAIL,CAAJ,CAAO4H,EAAP,CA1ByB,yEAA5B,C;;;AA6BA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAChI,CAAD,CAAIK,QAAJ,CAAiB;AAC1C,GAAM4H,CAAAA,SAAS,CAAG1D,YAAY,CAACvE,CAAD,CAAIK,QAAJ,CAA9B;AACA,GAAM6F,CAAAA,EAAE,CAAGlF,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,IAAd,CAAxB;AACA,GAAM6H,CAAAA,aAAa,CAAGlH,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,eAAd,CAA+B,OAA/B,CAAnC;AACA,GAAMmG,CAAAA,OAAO,CAAGH,aAAa,CAACrG,CAAD,CAAIK,QAAJ,CAA7B;AACA,GAAM8H,CAAAA,WAAW,CAAG,kBAApB;AACA,GAAMC,CAAAA,OAAO,CAAGpH,aAAa,CAAChB,CAAD,CAAIK,QAAJ,CAAc,SAAd,CAA7B;;AAEA,OAAQA,QAAR;AACI,IAAKqE,eAAL;AACA,IAAKC,gBAAL;AACI,MAAUsD,CAAAA,SAAV;AACJ,IAAKI,mBAAL;AACA,IAAKC,sBAAL;AACA,IAAKC,wBAAL;AACI,MAAUN,CAAAA,SAAV,2BAA6CC,aAA7C,SAAkEA,aAAlE;AACJ,IAAKM,eAAL;AACI,MAAUP,CAAAA,SAAV;AACJ,IAAKQ,iBAAL;AACA,IAAKC,mBAAL;AACI,MAAUT,CAAAA,SAAV,mBAAqCE,WAArC,KAAoD3B,OAApD;AACJ,IAAKmC,iBAAL;AACA,IAAKC,wBAAL;AACI,MAAUX,CAAAA,SAAV,YAA8BG,OAA9B;AACJ,IAAKS,iBAAL;AACI,MAAUZ,CAAAA,SAAV,YAA8B/B,EAA9B,KAAoCM,OAApC;AACJ;AACI,MAAOyB,CAAAA,SAAP,CAnBR;;AAqBH,CA7BM,C;;AA+BA,GAAMa,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM;AAC5B,GAAI;AACAC,YAAGC,UAAH,CAAcxI,cAAKyI,OAAL,CAAaC,SAAb,CAAwB,qBAAxB,CAAd;AACA,MAAO,KAAP;AACH,CAAC,MAAOC,IAAP,CAAa;AACX,MAAO,MAAP;AACH;AACJ,CAPM,C;;AASA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM;AACjC,GAAIN,UAAU,EAAd,CAAkB;AACd,MAAOtI,eAAKyI,OAAL,CAAaC,SAAb,CAAwB,UAAxB,CAAP;AACH;AACJ,CAJM,C;;AAMA,GAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,SAAM,CAAC,CAAC,uBAAU,SAAV,CAAqB,KAArB,CAAR,EAAhC,C;;AAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACtJ,CAAD,CAAIK,QAAJ,CAAckJ,UAAd,CAA6B;AACxD,GAAMC,CAAAA,EAAE,CAAGD,UAAU,EAAIvJ,CAAC,CAACU,KAAF,CAAQmH,SAAR,CAAkBhH,GAA3C;;;;AAIA,GAAMiB,CAAAA,CAAC,CAAGtB,cAAKC,IAAL,CAAU+I,EAAV,WAAwBnJ,QAAxB,KAAoCL,CAAC,CAACc,OAAF,CAAUsC,MAA9C,CAAV;AACA,GAAI2F,YAAGC,UAAH,CAAclH,CAAd,CAAJ,CAAsB,MAAOA,CAAAA,CAAP;AACtB,MAAOtB,eAAKC,IAAL,CAAU+I,EAAV,WAAwBnJ,QAAxB,CAAP;AACH,CARM,C;;AAUA,GAAMoJ,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,SAAMC,aAAGC,OAAH,EAAN,EAAd,C;;AAEA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAO5J,CAAP,CAAUK,QAAV;AAC/BL,CAAC,CAACD,OAAF,CAAU+H,KADqB;AAE/B;AACkBrF,eAAMC,KAAN,CAAY,IAAZ,CADlB,wBAC0DD,eAAMC,KAAN;AAClDrC,QADkD,CAD1D,+BAF+B;;;AAOzB,sCAAmBL,CAAnB,CAAsBK,QAAtB,CAPyB,wEAAhC,C;;;;AAWA,GAAMwJ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAC7J,CAAD,CAAIK,QAAJ,CAAc8D,IAAd,QAAuB,IAAIE,CAAAA,OAAJ,CAAY,SAAC4E,OAAD,CAAU3E,MAAV,CAAqB;AAClF,wBAAWH,IAAX,CAAiB,SAAC2F,GAAD,CAAMC,aAAN,CAAwB;AACrC,GAAID,GAAJ,CAAS;AACLxF,MAAM,CAACwF,GAAD,CAAN;AACA;AACH;AACDb,OAAO,CAACe,QAAQ,CAAC7F,IAAD,CAAO,EAAP,CAAR,GAAuB6F,QAAQ,CAACD,aAAD,CAAgB,EAAhB,CAAhC,CAAP;AACH,CAND;AAOH,CARoD,CAAvB,EAAvB,C;;AAUA,GAAMvE,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACxF,CAAD,CAAIiK,GAAJ,CAASzH,GAAT,CAAiB;AAC7C,GAAI,CAACA,GAAD,EAAQ,CAACyH,GAAb,CAAkB,MAAO,KAAP;AAClB,GAAMC,CAAAA,IAAI,CAAGD,GAAG,CAAIzH,GAAJ,KAAWxC,CAAC,CAACc,OAAF,CAAUsC,MAArB,CAAhB;AACA,GAAI8G,IAAJ,CAAU,MAAOA,CAAAA,IAAP;AACV,MAAOD,CAAAA,GAAG,CAACzH,GAAD,CAAV;AACH,CALM,C;;AAOA,GAAM2H,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACnK,CAAD,CAAIK,QAAJ,CAAc+J,QAAd,CAA2B;;AAEvD,GAAIC,CAAAA,EAAE,CAAG7J,cAAKC,IAAL,CAAUmE,oBAAoB,CAAC5E,CAAD,CAAIK,QAAJ,CAA9B,CAA6C+J,QAA7C,CAAT;;AAEA,GAAME,CAAAA,GAAG,CAAG9J,cAAKC,IAAL;AACR6I,eAAe,CAACtJ,CAAD,CAAIK,QAAJ,CAAcL,CAAC,CAACU,KAAF,CAAQC,OAAR,CAAgB4J,aAAhB,CAA8B1J,GAA5C,CADP;AAERuJ,QAFQ,CAAZ;;AAIA,GAAIrB,YAAGC,UAAH,CAAcsB,GAAd,CAAJ,CAAwBD,EAAE,CAAGC,GAAL;;AAExB,GAAME,CAAAA,GAAG,CAAGhK,cAAKC,IAAL,CAAU6I,eAAe,CAACtJ,CAAD,CAAIK,QAAJ,CAAzB,CAAwC+J,QAAxC,CAAZ;AACA,GAAIrB,YAAGC,UAAH,CAAcwB,GAAd,CAAJ,CAAwBH,EAAE,CAAGG,GAAL;AACxB,MAAOH,CAAAA,EAAP;AACH,CAbM,C;;AAeA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAOzK,CAAP,CAAU0K,GAAV,CAAezK,OAAf,CAAwB0K,QAAxB;AACvBC,QADuB,CACZ,CADY;AAErBC,WAFqB,CAEP,EAFO;AAGrBC,aAHqB,CAGL,IAHK;AAInBC,cAJmB,CAIA/K,CAAC,CAACD,OAJF,CAInBgL,cAJmB;AAKrBC,OALqB,CAKX,iBAAI,iCAAJ,EAAuCC,KAAvC,EALW;;AAOpB,GAAI5G,CAAAA,OAAJ,CAAY,SAAC4E,OAAD,CAAU3E,MAAV,CAAqB;AACpC,GAAM4G,CAAAA,QAAQ,CAAGC,WAAW,CAAC,UAAM;AAC/B,kBAAQnL,CAAR,CAAW0K,GAAX,CAAgBzK,OAAhB,CAAyB;AACrBmL,MAAM,CAAE,IADa;AAErBC,OAAO,CAAE,KAFY;AAGrBN,cAAc,CAAdA,cAHqB,CAAzB;;AAKKO,IALL,CAKU,SAACC,IAAD,CAAU;AACZ,GAAIZ,QAAQ,CAACY,IAAD,CAAZ,CAAoB;AAChBC,aAAa,CAACN,QAAD,CAAb;AACAF,OAAO,CAACS,OAAR;AACA,MAAOxC,CAAAA,OAAO,CAAC,IAAD,CAAd;AACH;AACD2B,QAAQ;AACR,GAAIA,QAAQ,GAAKC,WAAjB,CAA8B;AAC1BW,aAAa,CAACN,QAAD,CAAb;AACAF,OAAO,CAACU,IAAR;AACI,2DADJ;;AAGA,MAAOpH,CAAAA,MAAM;AACT,2DADS,CAAb;;AAGH;AACJ,CArBL;AAsBKqH,KAtBL,CAsBW,UAAM;AACTf,QAAQ;AACR,GAAIA,QAAQ,CAAGC,WAAf,CAA4B;AACxBW,aAAa,CAACN,QAAD,CAAb;AACAF,OAAO,CAACU,IAAR;AACI,2DADJ;;AAGA,MAAOpH,CAAAA,MAAM;AACT,2DADS,CAAb;;AAGH;AACJ,CAjCL;AAkCH,CAnC2B,CAmCzBwG,aAnCyB,CAA5B;AAoCH,CArCM,CAPoB,wEAAxB,C;;;AA+CA,GAAMc,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAO5L,CAAP,CAAU6L,MAAV;AAC1B,2CAA+B7L,CAAC,CAACc,OAAF,CAAUqD,IAAzC,YAAwD0H,MAAxD;AACIjB,QAFsB,CAEX,CAFW;AAGpBC,WAHoB,CAGN,EAHM;AAIpBC,aAJoB,CAIJ,IAJI;;;AAOpBgB,YAPoB,CAOL9K,aAAa,CAAChB,CAAD,CAAIA,CAAC,CAACK,QAAN,CAAgB,eAAhB,CAAiC,EAAjC,CAPR;AAQpB0L,aARoB,CAQJ,6BAAkBD,YAAY,CAACC,aAA/B,CAA8C/L,CAAC,CAACc,OAAF,CAAUkL,SAAxD,CARI;AAStBC,GATsB,WASNF,aATM,KASW/L,CAAC,CAACc,OAAF,CAAUqD,IATrB;;AAW1B,GAAI0H,MAAM,GAAK,MAAf,CAAuBI,GAAG,WAAaF,aAAb,KAA8B/L,CAAC,CAACc,OAAF,CAAUqD,IAA3C,CAXG;;AAanB,GAAIE,CAAAA,OAAJ,CAAY,SAAC4E,OAAD,CAAU3E,MAAV,CAAqB;AACpC,GAAM4G,CAAAA,QAAQ,CAAGC,WAAW,CAAC,UAAM;AAC/Be;AACKnJ,GADL,CACSkJ,GADT;AAEKX,IAFL,CAEU,SAACa,GAAD,CAAS;AACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB;AACpBZ,aAAa,CAACN,QAAD,CAAb;;AAEA,MAAOjC,CAAAA,OAAO,CAAC,IAAD,CAAd;AACH;AACD2B,QAAQ;AACR,GAAIA,QAAQ,GAAKC,WAAjB,CAA8B;AAC1BW,aAAa,CAACN,QAAD,CAAb;;AAEA,MAAO5G,CAAAA,MAAM;AACT,8CADS,CAAb;;AAGH;AACJ,CAhBL;AAiBKqH,KAjBL,CAiBW,UAAM;AACTf,QAAQ;AACR,GAAIA,QAAQ,CAAGC,WAAf,CAA4B;AACxBW,aAAa,CAACN,QAAD,CAAb;;AAEA,MAAO5G,CAAAA,MAAM;AACT,8CADS,CAAb;;AAGH;AACJ,CA1BL;AA2BH,CA5B2B,CA4BzBwG,aA5ByB,CAA5B;AA6BH,CA9BM,CAbmB,wEAAvB,C;;AA6CA,GAAMuB,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAAC5I,IAAD,CAAU;;;AAG9C,GAAM6I,CAAAA,GAAG,CAAGC,OAAO,CAAC,uBAAU9I,IAAV,CAAD,CAAnB;AACA,GAAI6I,GAAG,CAACE,OAAR,CAAiB,MAAOF,CAAAA,GAAG,CAACE,OAAX;AACjB,MAAOF,CAAAA,GAAP;AACH,CANM,C;;AAQQ;AACXnC,gBAAgB,CAAhBA,gBADW;AAEXb,eAAe,CAAfA,eAFW;AAGXnG,sBAAsB,CAAtBA,sBAHW;AAIXoB,YAAY,CAAZA,YAJW;AAKXK,oBAAoB,CAApBA,oBALW;AAMXjF,iBAAiB,CAAjBA,iBANW;AAOX6H,gBAAgB,CAAhBA,gBAPW;AAQXE,mBAAmB,CAAnBA,mBARW;AASXzB,QAAQ,CAARA,QATW;AAUXG,WAAW,CAAXA,WAVW;AAWXC,aAAa,CAAbA,aAXW;AAYXa,iBAAiB,CAAjBA,iBAZW;AAaXuF,cAAc,CAAdA,yBAbW;AAcX5F,YAAY,CAAZA,YAdW;AAeXE,kBAAkB,CAAlBA,kBAfW;AAgBXC,iBAAiB,CAAjBA,iBAhBW;AAiBXP,YAAY,CAAZA,YAjBW;AAkBXE,aAAa,CAAbA,aAlBW;AAmBX3F,aAAa,CAAbA,aAnBW;AAoBXyI,KAAK,CAALA,KApBW;AAqBXG,uBAAuB,CAAvBA,uBArBW;AAsBXC,cAAc,CAAdA,cAtBW;AAuBXY,eAAe,CAAfA,eAvBW;AAwBXiC,OAAO,CAAE,iBAACnK,GAAD,CAAS;AACd;AACI,6EADJ;;AAGA,oBAAQA,GAAR;AACH,CA7BU;AA8BXoK,UAAU,CAAE,oBAACpK,GAAD,CAAS;AACjB;AACI,mFADJ;;AAGA,uBAAWA,GAAX;AACH,CAnCU;AAoCXqK,QAAQ,CAAE,kBAACrK,GAAD,CAAS;AACf;AACI,+EADJ;;AAGA,qBAASA,GAAT;AACH,CAzCU;AA0CXsK,UAAU,CAAE,oBAACtK,GAAD,CAAS;AACjB;AACI,+EADJ;;AAGA,uBAAWA,GAAX;AACH,CA/CU;AAgDXuK,QAAQ,CAAE,kBAACvK,GAAD,CAAS;AACf;AACI,+EADJ;;AAGA,qBAASA,GAAT;AACH,CArDU,C","sourcesContent":["/* eslint-disable import/no-cycle */\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\nimport detectPort from 'detect-port';\nimport ora from 'ora';\nimport ip from 'ip';\nimport axios from 'axios';\nimport lGet from 'lodash.get';\n// import resolve from 'resolve';\nimport colorString from 'color-string';\nimport crypto from 'crypto';\nimport { doResolve } from './resolve';\nimport { getValidLocalhost } from './utils';\nimport { createPlatformBuild, cleanPlatformBuild } from './platformTools';\nimport CLI from './cli';\nimport {\n    configureLogger,\n    logError,\n    logTask,\n    logWarning,\n    logInfo,\n    logInitialize,\n    logDebug,\n    logSuccess\n} from './systemTools/logger';\nimport {\n    IOS,\n    ANDROID,\n    ANDROID_TV,\n    ANDROID_WEAR,\n    WEB,\n    TIZEN,\n    TIZEN_MOBILE,\n    TVOS,\n    WEBOS,\n    MACOS,\n    WINDOWS,\n    PLATFORMS\n} from './constants';\nimport { execCLI } from './systemTools/exec';\nimport { createRnvConfig } from './configTools/configParser';\nimport { cleanPlaformAssets } from './projectTools/projectParser';\nimport { generateOptions, inquirerPrompt } from './systemTools/prompt';\nimport { writeCleanFile } from './systemTools/fileutils';\nimport Config from './config';\n\nexport const initializeBuilder = async (cmd, subCmd, process, program) => {\n    const c = createRnvConfig(program, process, cmd, subCmd);\n\n    configureLogger(\n        c,\n        c.process,\n        c.command,\n        c.subCommand,\n        program.info === true\n    );\n    logInitialize();\n\n    return c;\n};\n\nexport const getTimestampPathsConfig = (c, platform) => {\n    let timestampBuildFiles;\n    const pPath = path.join(\n        c.paths.project.builds.dir,\n        `${c.runtime.appId}_${platform}`\n    );\n    if (platform === 'web') {\n        timestampBuildFiles = getConfigProp(c, platform, 'timestampBuildFiles', []).map((v => path.join(pPath, v)));\n    }\n    if (timestampBuildFiles?.length) {\n        return { paths: timestampBuildFiles, timestamp: c.runtime.timestamp };\n    }\n    return null;\n};\n\nexport const generateChecksum = (str, algorithm, encoding) => crypto\n    .createHash(algorithm || 'md5')\n    .update(str, 'utf8')\n    .digest(encoding || 'hex');\n\nexport const getSourceExts = (c, p) => {\n    // IMPORTANT: do not replace \"p\" with c.platform as this has to\n    // be injected from above to generate multiple configs\n    const sExt = PLATFORMS[p]?.sourceExts;\n    if (sExt) {\n        return [...sExt.factors, ...sExt.platforms, ...sExt.fallbacks];\n    }\n    return [];\n};\n\nexport const getSourceExtsAsString = (c, p) => {\n    const sourceExts = getSourceExts(c, p);\n    return sourceExts.length ? `['${sourceExts.join(\"','\")}']` : '[]';\n};\n\nexport const sanitizeColor = (val, key) => {\n    if (!val) {\n        logWarning(\n            `You are missing ${chalk.white(key)} in your renative config. will use default #FFFFFF instead`\n        );\n        return {\n            rgb: [255, 255, 255, 1],\n            rgbDecimal: [1, 1, 1, 1],\n            hex: '#FFFFFF'\n        };\n    }\n\n    const rgb = colorString.get.rgb(val);\n    const hex = colorString.to.hex(rgb);\n\n    return {\n        rgb,\n        rgbDecimal: rgb.map(v => (v > 1 ? Math.round((v / 255) * 10) / 10 : v)),\n        hex\n    };\n};\n\nexport const isBuildSchemeSupported = async (c) => {\n    logTask(`isBuildSchemeSupported:${c.platform}`);\n\n    const { scheme } = c.program;\n\n    if (!c.buildConfig.platforms[c.platform]) {\n        c.buildConfig.platforms[c.platform] = {};\n    }\n\n    const { buildSchemes } = c.buildConfig.platforms[c.platform];\n\n    if (!buildSchemes) {\n        logWarning(\n            `Your appConfig for platform ${\n                c.platform\n            } has no buildSchemes. Will continue with defaults`\n        );\n        return false;\n    }\n\n    const schemeDoesNotExist = scheme && !buildSchemes[scheme];\n    if (scheme === true || schemeDoesNotExist) {\n        if (schemeDoesNotExist && scheme && scheme !== true) {\n            logError('Build scheme you picked does not exists.');\n        }\n        const opts = generateOptions(buildSchemes);\n\n        const { selectedScheme } = await inquirerPrompt({\n            name: 'selectedScheme',\n            type: 'list',\n            message: 'Pick one of available buildSchemes',\n            choices: opts.keysAsArray,\n            logMessage: 'You need to specify scheme'\n        });\n\n        c.program.scheme = selectedScheme;\n        return selectedScheme;\n    }\n    return scheme;\n};\n\nexport const confirmActiveBundler = async (c) => {\n    if (c.runtime.skipActiveServerCheck) return true;\n    const { confirm } = await inquirerPrompt({\n        type: 'confirm',\n        message: 'It will be used for this session. Continue?',\n        warningMessage: `Another ${c.platform} server at port ${\n            c.runtime.port\n        } already running`\n    });\n\n    if (confirm) return true;\n    return Promise.reject('Cancelled by user');\n};\n\nexport const getAppFolder = (c, platform) => path.join(c.paths.project.builds.dir, `${c.runtime.appId}_${platform}`);\n\nexport const getAppSubFolder = (c, platform) => {\n    let subFolder = '';\n    if (platform === IOS) subFolder = 'RNVApp';\n    else if (platform === TVOS) subFolder = 'RNVAppTVOS';\n    return path.join(getAppFolder(c, platform), subFolder);\n};\n\nexport const getAppTemplateFolder = (c, platform) => path.join(\n    c.paths.project.platformTemplatesDirs[platform], `${platform}`\n);\n\nexport const CLI_PROPS = [\n    'provisioningStyle',\n    'codeSignIdentity',\n    'provisionProfileSpecifier'\n];\n\n// We need to slowly move this to Config and refactor everything to use it from there\nexport const getConfigProp = (c, platform, key, defaultVal) => {\n    if (!c.buildConfig) {\n        logError('getConfigProp: c.buildConfig is undefined!');\n        return null;\n    }\n    if (!key || !key.split) {\n        logError('getConfigProp: invalid key!');\n        return null;\n    }\n    const p = c.buildConfig.platforms?.[platform];\n    const ps = c.runtime.scheme;\n    const keyArr = key.split('.');\n    const baseKey = keyArr.shift();\n    const subKey = keyArr.join('.');\n\n    let resultPlatforms;\n    let scheme;\n    if (p) {\n        scheme = p.buildSchemes ? p.buildSchemes[ps] : undefined;\n        resultPlatforms = getFlavouredProp(\n            c,\n            c.buildConfig.platforms[platform],\n            baseKey\n        );\n    }\n\n    scheme = scheme || {};\n    const resultCli = CLI_PROPS.includes(baseKey) ? c.program[baseKey] : undefined;\n    const resultScheme = scheme[baseKey];\n    const resultCommon = getFlavouredProp(c, c.buildConfig.common, baseKey);\n\n    let result = Config.getValueOrMergedObject(\n        resultCli,\n        resultScheme,\n        resultPlatforms,\n        resultCommon\n    );\n\n    if (result === undefined) result = defaultVal; // default the value only if it's not specified in any of the files. i.e. undefined\n    logDebug(`getConfigProp:${platform}:${key}:${result}`);\n    if (typeof result === 'object' && subKey.length) {\n        return lGet(result, subKey);\n    }\n    return result;\n};\n\nexport const getAppId = (c, platform) => {\n    const id = getConfigProp(c, platform, 'id');\n    const idSuffix = getConfigProp(c, platform, 'idSuffix');\n    return idSuffix ? `${id}${idSuffix}` : id;\n};\n\nexport const getAppTitle = (c, platform) => getConfigProp(c, platform, 'title');\n\nexport const getAppVersion = (c, platform) => getConfigProp(c, platform, 'version') || c.files.project.package?.version;\n\nexport const getAppAuthor = (c, platform) => getConfigProp(c, platform, 'author') || c.files.project.package?.author;\n\nexport const getAppLicense = (c, platform) => getConfigProp(c, platform, 'license') || c.files.project.package?.license;\n\nexport const getEntryFile = (c, platform) => c.buildConfig.platforms?.[platform]?.entryFile;\n\nexport const getGetJsBundleFile = (c, platform) => getConfigProp(c, platform, 'getJsBundleFile');\n\nexport const getAppDescription = (c, platform) => getConfigProp(c, platform, 'description')\n    || c.files.project.package?.description;\n\nexport const getAppVersionCode = (c, platform) => {\n    const versionCode = getConfigProp(c, platform, 'versionCode');\n    if (versionCode) return versionCode;\n\n    const version = getAppVersion(c, platform);\n\n    let vc = '';\n    version\n        .split('-')[0]\n        .split('.')\n        .forEach((v) => {\n            vc += v.length > 1 ? v : `0${v}`;\n        });\n    return Number(vc).toString();\n};\n\nexport const logErrorPlatform = (c, platform) => {\n    logError(\n        `Platform: ${chalk.white(\n            platform\n        )} doesn't support command: ${chalk.white(c.command)}`,\n        true // kill it if we're not supporting this\n    );\n};\n\nexport const PLATFORM_RUNS = {};\n\nexport const configureIfRequired = async (c, platform) => {\n    logTask(`configureIfRequired:${platform}`);\n\n    if (PLATFORM_RUNS[platform]) {\n        return;\n    }\n    PLATFORM_RUNS[platform] = true;\n    const { device } = c.program;\n    const nc = {\n        command: 'configure',\n        program: {\n            appConfig: c.id,\n            update: false,\n            platform,\n            device\n        }\n    };\n\n    if (c.program.reset) {\n        await cleanPlatformBuild(c, platform);\n    }\n\n    if (c.program.resetHard) {\n        await cleanPlaformAssets(c);\n    }\n    await createPlatformBuild(c, platform);\n    await CLI(c, nc);\n};\n\nexport const getBinaryPath = (c, platform) => {\n    const appFolder = getAppFolder(c, platform);\n    const id = getConfigProp(c, platform, 'id');\n    const signingConfig = getConfigProp(c, platform, 'signingConfig', 'debug');\n    const version = getAppVersion(c, platform);\n    const productName = 'ReNative - macos';\n    const appName = getConfigProp(c, platform, 'appName');\n\n    switch (platform) {\n        case IOS:\n        case TVOS:\n            return `${appFolder}/release/RNVApp.ipa`;\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            return `${appFolder}/app/build/outputs/apk/${signingConfig}/app-${signingConfig}.apk`;\n        case WEB:\n            return `${appFolder}/public`;\n        case MACOS:\n        case WINDOWS:\n            return `${appFolder}/build/release/${productName}-${version}`;\n        case TIZEN:\n        case TIZEN_MOBILE:\n            return `${appFolder}/output/${appName}.wgt`;\n        case WEBOS:\n            return `${appFolder}/output/${id}_${version}_all.ipk`;\n        default:\n            return appFolder;\n    }\n};\n\nexport const isMonorepo = () => {\n    try {\n        fs.existsSync(path.resolve(__dirname, '../../../lerna.json'));\n        return true;\n    } catch (_err) {\n        return false;\n    }\n};\n\nexport const getMonorepoRoot = () => {\n    if (isMonorepo()) {\n        return path.resolve(__dirname, '../../..');\n    }\n};\n\nexport const areNodeModulesInstalled = () => !!doResolve('resolve', false);\n\nexport const getBuildsFolder = (c, platform, customPath) => {\n    const pp = customPath || c.paths.appConfig.dir;\n    // if (!fs.existsSync(pp)) {\n    //     logWarning(`Path ${chalk.white(pp)} does not exist! creating one for you..`);\n    // }\n    const p = path.join(pp, `builds/${platform}@${c.runtime.scheme}`);\n    if (fs.existsSync(p)) return p;\n    return path.join(pp, `builds/${platform}`);\n};\n\nexport const getIP = () => ip.address();\n\nexport const cleanPlatformIfRequired = async (c, platform) => {\n    if (c.program.reset) {\n        logInfo(\n            `You passed ${chalk.white('-r')} argument. paltform ${chalk.white(\n                platform\n            )} will be cleaned up first!`\n        );\n        await cleanPlatformBuild(c, platform);\n    }\n};\n\nexport const checkPortInUse = (c, platform, port) => new Promise((resolve, reject) => {\n    detectPort(port, (err, availablePort) => {\n        if (err) {\n            reject(err);\n            return;\n        }\n        resolve(parseInt(port, 10) !== parseInt(availablePort, 10));\n    });\n});\n\nexport const getFlavouredProp = (c, obj, key) => {\n    if (!key || !obj) return null;\n    const val1 = obj[`${key}@${c.runtime.scheme}`];\n    if (val1) return val1;\n    return obj[key];\n};\n\nexport const getBuildFilePath = (c, platform, filePath) => {\n    // P1 => platformTemplates\n    let sp = path.join(getAppTemplateFolder(c, platform), filePath);\n    // P2 => appConfigs/base + @buildSchemes\n    const sp2 = path.join(\n        getBuildsFolder(c, platform, c.paths.project.projectConfig.dir),\n        filePath\n    );\n    if (fs.existsSync(sp2)) sp = sp2;\n    // P3 => appConfigs + @buildSchemes\n    const sp3 = path.join(getBuildsFolder(c, platform), filePath);\n    if (fs.existsSync(sp3)) sp = sp3;\n    return sp;\n};\n\nexport const waitForEmulator = async (c, cli, command, callback) => {\n    let attempts = 0;\n    const maxAttempts = 30;\n    const CHECK_INTEVAL = 2000;\n    const { maxErrorLength } = c.program;\n    const spinner = ora('Waiting for emulator to boot...').start();\n\n    return new Promise((resolve, reject) => {\n        const interval = setInterval(() => {\n            execCLI(c, cli, command, {\n                silent: true,\n                timeout: 10000,\n                maxErrorLength\n            })\n                .then((resp) => {\n                    if (callback(resp)) {\n                        clearInterval(interval);\n                        spinner.succeed();\n                        return resolve(true);\n                    }\n                    attempts++;\n                    if (attempts === maxAttempts) {\n                        clearInterval(interval);\n                        spinner.fail(\n                            \"Can't connect to the running emulator. Try restarting it.\"\n                        );\n                        return reject(\n                            \"Can't connect to the running emulator. Try restarting it.\"\n                        );\n                    }\n                })\n                .catch(() => {\n                    attempts++;\n                    if (attempts > maxAttempts) {\n                        clearInterval(interval);\n                        spinner.fail(\n                            \"Can't connect to the running emulator. Try restarting it.\"\n                        );\n                        return reject(\n                            \"Can't connect to the running emulator. Try restarting it.\"\n                        );\n                    }\n                });\n        }, CHECK_INTEVAL);\n    });\n};\n\nexport const waitForWebpack = async (c, engine) => {\n    logTask(`waitForWebpack|port:${c.runtime.port}|engine:${engine}`);\n    let attempts = 0;\n    const maxAttempts = 10;\n    const CHECK_INTEVAL = 2000;\n    // const spinner = ora('Waiting for webpack to finish...').start();\n\n    const extendConfig = getConfigProp(c, c.platform, 'webpackConfig', {});\n    const devServerHost = getValidLocalhost(extendConfig.devServerHost, c.runtime.localhost);\n    let url = `http://${devServerHost}:${c.runtime.port}/assets/bundle.js`;\n\n    if (engine === 'next') url = `http://${devServerHost}:${c.runtime.port}`;\n\n    return new Promise((resolve, reject) => {\n        const interval = setInterval(() => {\n            axios\n                .get(url)\n                .then((res) => {\n                    if (res.status === 200) {\n                        clearInterval(interval);\n                        // spinner.succeed();\n                        return resolve(true);\n                    }\n                    attempts++;\n                    if (attempts === maxAttempts) {\n                        clearInterval(interval);\n                        // spinner.fail('Can\\'t connect to webpack. Try restarting it.');\n                        return reject(\n                            \"Can't connect to webpack. Try restarting it.\"\n                        );\n                    }\n                })\n                .catch(() => {\n                    attempts++;\n                    if (attempts > maxAttempts) {\n                        clearInterval(interval);\n                        // spinner.fail('Can\\'t connect to webpack. Try restarting it.');\n                        return reject(\n                            \"Can't connect to webpack. Try restarting it.\"\n                        );\n                    }\n                });\n        }, CHECK_INTEVAL);\n    });\n};\nexport const importPackageFromProject = (name) => {\n    // const c = Config.getConfig();\n    // eslint-disable-next-line import/no-dynamic-require, global-require\n    const pkg = require(doResolve(name));\n    if (pkg.default) return pkg.default;\n    return pkg;\n};\n\nexport default {\n    getBuildFilePath,\n    getBuildsFolder,\n    isBuildSchemeSupported,\n    getAppFolder,\n    getAppTemplateFolder,\n    initializeBuilder,\n    logErrorPlatform,\n    configureIfRequired,\n    getAppId,\n    getAppTitle,\n    getAppVersion,\n    getAppVersionCode,\n    writeCleanFile,\n    getEntryFile,\n    getGetJsBundleFile,\n    getAppDescription,\n    getAppAuthor,\n    getAppLicense,\n    getConfigProp,\n    getIP,\n    cleanPlatformIfRequired,\n    checkPortInUse,\n    waitForEmulator,\n    logTask: (val) => {\n        logError(\n            'DEPRECATED: Common.logTask() has been removed. use Logger.logTask() instead'\n        );\n        logTask(val);\n    },\n    logWarning: (val) => {\n        logError(\n            'DEPRECATED: Common.logWarning() has been removed. use Logger.logWarning() instead'\n        );\n        logWarning(val);\n    },\n    logError: (val) => {\n        logError(\n            'DEPRECATED: Common.logError() has been removed. use Logger.logError() instead'\n        );\n        logError(val);\n    },\n    logSuccess: (val) => {\n        logError(\n            'DEPRECATED: Common.logError() has been removed. use Logger.logError() instead'\n        );\n        logSuccess(val);\n    },\n    logDebug: (val) => {\n        logError(\n            'DEPRECATED: Common.logDebug() has been removed. use Logger.logDebug() instead'\n        );\n        logDebug(val);\n    }\n};\n"],"file":"common.js"}