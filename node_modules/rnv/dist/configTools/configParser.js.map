{"version":3,"sources":["../../src/configTools/configParser.js"],"names":["base","path","resolve","homedir","require","readdirAsync","fs","readdir","IGNORE_FOLDERS","loadAppConfigIDfromDir","dir","appConfigsDir","chalk","grey","filePath","join","existsSync","renativeConf","JSON","parse","readFileSync","id","e","askUserAboutConfigs","c","basePath","program","ci","Error","inquirer","prompt","type","name","message","choices","value","Separator","choice","renameSync","fileContents","matchAppConfigID","appConfigID","appConfigsDirs","buildConfig","paths","project","i","filter","folder","statSync","isDirectory","appConfigDirContents","appConfigs","map","conf","ids","dirs","Promise","all","toLowerCase","includes","push","foundConfig","cfg","length","checkIsRenativeProject","reject","configExists","white","config","fixRenativeConfigsSync","rnCliConfig","rnv","projectTemplate","RN_CLI_CONFIG_NAME","babelConfig","RN_BABEL_CONFIG_NAME","_generateConfigPaths","pathObj","RENATIVE_CONFIG_NAME","configLocal","RENATIVE_CONFIG_LOCAL_NAME","configPrivate","RENATIVE_CONFIG_PRIVATE_NAME","versionCheck","runtime","isWrapper","versionCheckCompleted","rnvVersionRunner","files","package","version","rnvVersionProject","devDependencies","recCmd","actionNoUpdate","actionWithUpdate","actionUpgrade","warningMessage","red","chosenAction","skipPackageUpdate","loadFile","fileObj","key","toString","_findAndSwitchAppConfigDir","appId","forEach","v","altPath","_arrayMergeOverride","destinationArray","sourceArray","getEnginesPluginDelta","enginePlugins","missingEnginePlugins","supPlats","defaults","supportedPlatforms","pk","selectedEngine","plugins","ePlugins","Object","keys","pluginKey","generateBuildConfig","mergeOrder","defaultWorkspace","projectTemplates","pluginTemplates","workspace","appConfig","configBase","cleanPaths","existsPaths","exists","configs","extraPlugins","mergeFiles","engines","meta","_meta","generated","Date","getTime","mergedConfigs","existsFiles","out","merge","arrayMerge","builds","_refs","_loadConfigFiles","extendDir","result","extendAppId","extend","fontDirs","pluginDirs","projectConfig","fontsDirs","generateRuntimeConfig","assetConfig","common","platforms","platform","assets","generateLocalConfig","resetAppId","currentAppConfigId","_generatePlatformTemplatePaths","platformTemplatesDirs","platformTemplatesDir","pt","originalPath","SUPPORTED_PLATFORMS","_listAppConfigsFoldersSync","dirPath","configDirs","ignoreHiddenConfigs","readdirSync","appConfigDir","lstatSync","hidden","listAppConfigsFoldersSync","loadProjectTemplates","loadEngines","_loadWorkspacesSync","configWorkspaces","workspaces","setAppConfig","appDir","fontsDir","workspaceAppConfigsDir","getRealPath","updateConfig","appConfigId","isPureRnv","command","subCommand","pageSize","logMessage","parseRenativeConfigs","aid","GLOBAL_RNV_DIR","projectName","configureRnvGlobal","oldGlobalConfigPath","appConfigsPath","defaultTargets","undefined","defaultConfig","newConfig","stringify","createRnvConfig","process","cmd","subCmd","cli","buildHooks","dist","home","platformTemplates","platformTemplate","global","template","platformDefaults","PLATFORMS","__dirname","RENATIVE_CONFIG_ENGINES_NAME","RENATIVE_CONFIG_PLUGINS_NAME","RENATIVE_CONFIG_TEMPLATES_NAME","GLOBAL_RNV_CONFIG","RENATIVE_CONFIG_WORKSPACES_NAME","index","nodeModulesDir","srcDir","npmLinkPolyfill","pluginsDir","runtimeDir","RENATIVE_CONFIG_RUNTIME_NAME","RENATIVE_CONFIG_BUILD_NAME"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\nimport path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport merge from 'deepmerge';\nimport { promisify } from 'util';\nimport inquirer from 'inquirer';\nimport {\n    RENATIVE_CONFIG_NAME,\n    RENATIVE_CONFIG_PRIVATE_NAME,\n    RENATIVE_CONFIG_LOCAL_NAME,\n    RENATIVE_CONFIG_BUILD_NAME,\n    RENATIVE_CONFIG_RUNTIME_NAME,\n    RENATIVE_CONFIG_WORKSPACES_NAME,\n    RENATIVE_CONFIG_PLUGINS_NAME,\n    RENATIVE_CONFIG_TEMPLATES_NAME,\n    RENATIVE_CONFIG_ENGINES_NAME,\n    RN_CLI_CONFIG_NAME,\n    RN_BABEL_CONFIG_NAME,\n    PLATFORMS,\n    SUPPORTED_PLATFORMS\n} from '../constants';\nimport { rnvTemplateApply } from '../templateTools';\n\nimport {\n    copyFileSync,\n    mkdirSync,\n    writeFileSync,\n    readObjectSync,\n    getRealPath,\n    sanitizeDynamicRefs,\n    sanitizeDynamicProps,\n    mergeObjects,\n    fsWriteFileSync\n} from '../systemTools/fileutils';\nimport { getConfigProp } from '../common';\nimport { getEngineByPlatform } from '../engineTools';\nimport { getWorkspaceDirPath } from '../projectTools/workspace';\nimport {\n    logError,\n    logTask,\n    logWarning,\n    logDebug,\n    logInfo,\n    getCurrentCommand\n} from '../systemTools/logger';\nimport {\n    checkAndCreateGitignore,\n    upgradeProjectDependencies\n} from '../projectTools/projectParser';\nimport { inquirerPrompt } from '../systemTools/prompt';\nimport { loadPluginTemplates } from '../pluginTools';\n\nconst base = path.resolve('.');\nconst homedir = require('os').homedir();\n\nconst readdirAsync = promisify(fs.readdir);\n\nconst IGNORE_FOLDERS = ['.git'];\n\nconst loadAppConfigIDfromDir = (dir, appConfigsDir) => {\n    logTask(`loadAppConfigIDfromDir:${dir}:${appConfigsDir}`, chalk.grey);\n    const filePath = path.join(appConfigsDir, dir, 'renative.json');\n    if (fs.existsSync(filePath)) {\n        try {\n            const renativeConf = JSON.parse(fs.readFileSync(filePath));\n            return { dir, id: renativeConf.id };\n        } catch (e) {\n            logError(`File ${filePath} is MALFORMED:\\n${e}`);\n        }\n    }\n    return { dir, id: null };\n};\n\nconst askUserAboutConfigs = async (c, dir, id, basePath) => {\n    logWarning(\n        `AppConfig error - It seems you have a mismatch between appConfig folder name (${\n            dir\n        }) and the id defined in renative.json (${id}). They must match.`\n    );\n    if (c.program.ci === true) {\n        throw new Error(\n            'You cannot continue if you set --ci flag. please fix above error first'\n        );\n    }\n    const { choice } = await inquirer.prompt({\n        type: 'list',\n        name: 'choice',\n        message: 'You must choose what you want to keep',\n        choices: [\n            {\n                name: `Keep ID from renative.json (${id}) and rename the folder (${dir} -> ${id})`,\n                value: 'keepID'\n            },\n            {\n                name: `Keep folder name (${dir}) and rename the ID from renative.json (${id} -> ${dir})`,\n                value: 'keepFolder'\n            },\n            new inquirer.Separator(),\n            {\n                name: \"I'll do it manually\",\n                value: 'manually'\n            }\n        ]\n    });\n\n    if (choice === 'manually') {\n        throw new Error('Please do the changes and rerun the command');\n    }\n\n    if (choice === 'keepID') {\n        fs.renameSync(path.join(basePath, dir), path.join(basePath, id));\n    }\n\n    if (choice === 'keepFolder') {\n        const filePath = path.join(basePath, dir, 'renative.json');\n        const fileContents = JSON.parse(fs.readFileSync(filePath));\n        fileContents.id = dir;\n\n        writeFileSync(filePath, fileContents);\n    }\n};\n\n/* eslint-disable no-await-in-loop */\nconst matchAppConfigID = async (c, appConfigID) => {\n    logTask(`matchAppConfigID:${appConfigID}`, chalk.grey);\n\n    if (!appConfigID) return false;\n\n    const appConfigsDirs = c.buildConfig?.paths?.appConfigsDirs || [\n        c.paths.project?.appConfigsDir\n    ];\n    for (let i = 0; i < appConfigsDirs.length; i++) {\n        const appConfigsDir = appConfigsDirs[i];\n\n        const appConfigDirContents = await (await readdirAsync(\n            appConfigsDir\n        )).filter(folder => fs.statSync(path.join(appConfigsDir, folder)).isDirectory());\n\n        const appConfigs = appConfigDirContents\n            .map(dir => loadAppConfigIDfromDir(dir, appConfigsDir))\n            .filter(conf => conf.id !== null);\n        // find duplicates\n        const ids = [];\n        const dirs = [];\n        await Promise.all(\n            appConfigs.map(async (conf) => {\n                const id = conf.id.toLowerCase();\n                const dir = conf.dir.toLowerCase();\n                // find mismatches\n                if (id !== dir) {\n                    await askUserAboutConfigs(\n                        c,\n                        conf.dir,\n                        conf.id,\n                        appConfigsDir\n                    );\n                }\n                if (ids.includes(id)) {\n                    throw new Error(\n                        `AppConfig error - You have 2 duplicate app configs with ID ${\n                            id\n                        }. Keep in mind that ID is case insensitive.\nPlease edit one of them in /appConfigs/<folder>/renative.json`\n                    );\n                }\n                ids.push(id);\n                if (dirs.includes(dir)) {\n                    throw new Error(\n                        `AppConfig error - You have 2 duplicate app config folders named ${\n                            dir\n                        }. Keep in mind that folder names are case insensitive. Please rename one /appConfigs/<folder>`\n                    );\n                }\n                dirs.push(dir);\n            })\n        );\n\n        const foundConfig = appConfigs.filter(\n            cfg => cfg.id === appConfigID\n                || cfg.id.toLowerCase() === appConfigID\n                || cfg.dir === appConfigID\n                || cfg.dir.toLowerCase() === appConfigID\n        );\n        if (foundConfig.length) return foundConfig[0].id.toLowerCase();\n    }\n    return false;\n};\n\nexport const checkIsRenativeProject = c => new Promise((resolve, reject) => {\n    if (!c.paths.project.configExists) {\n        return reject(\n            `Looks like this directory is not ReNative project. Project config ${chalk.white(\n                c.paths.project.config\n            )} is missing!. You can create new project with ${chalk.white(\n                'rnv new'\n            )}`\n        );\n    }\n\n    return resolve();\n});\n\nexport const fixRenativeConfigsSync = async (c) => {\n    logTask('fixRenativeConfigsSync');\n\n    // Parse Project Config\n    // checkAndCreateProjectPackage(c, 'renative-app', 'ReNative App');\n\n    // Check gitignore\n    checkAndCreateGitignore(c);\n\n    // Check rn-cli-config\n    logDebug('configureProject:check rn-cli');\n    if (!fs.existsSync(c.paths.project.rnCliConfig)) {\n        logInfo(\n            `Looks like your rn-cli config file ${chalk.white(\n                c.paths.project.rnCliConfig\n            )} is missing! Let's create one for you.`\n        );\n        copyFileSync(\n            path.join(c.paths.rnv.projectTemplate.dir, RN_CLI_CONFIG_NAME),\n            c.paths.project.rnCliConfig\n        );\n    }\n\n    // Check babel-config\n    logDebug('configureProject:check babel config');\n    if (!fs.existsSync(c.paths.project.babelConfig)) {\n        logInfo(\n            `Looks like your babel config file ${chalk.white(\n                c.paths.project.babelConfig\n            )} is missing! Let's create one for you.`\n        );\n        copyFileSync(\n            path.join(c.paths.rnv.projectTemplate.dir, RN_BABEL_CONFIG_NAME),\n            c.paths.project.babelConfig\n        );\n    }\n\n    return true;\n};\n\nconst _generateConfigPaths = (pathObj, dir) => {\n    pathObj.dir = dir;\n    pathObj.config = path.join(dir, RENATIVE_CONFIG_NAME);\n    pathObj.configLocal = path.join(dir, RENATIVE_CONFIG_LOCAL_NAME);\n    pathObj.configPrivate = path.join(dir, RENATIVE_CONFIG_PRIVATE_NAME);\n};\n\nexport const versionCheck = async (c) => {\n    logTask('versionCheck');\n\n    if (c.runtime.isWrapper || c.runtime.versionCheckCompleted) {\n        return true;\n    }\n    c.runtime.rnvVersionRunner = c.files.rnv?.package?.version;\n    c.runtime.rnvVersionProject = c.files.project?.package?.devDependencies?.rnv;\n    logTask(\n        `versionCheck:rnvRunner:${c.runtime.rnvVersionRunner},rnvProject:${\n            c.runtime.rnvVersionProject\n        }`,\n        chalk.grey\n    );\n    if (c.runtime.rnvVersionRunner && c.runtime.rnvVersionProject) {\n        if (c.runtime.rnvVersionRunner !== c.runtime.rnvVersionProject) {\n            const recCmd = chalk.white(`$ npx ${getCurrentCommand(true)}`);\n            const actionNoUpdate = 'Continue and skip updating package.json';\n            const actionWithUpdate = 'Continue and update package.json';\n            const actionUpgrade = `Upgrade project to ${\n                c.runtime.rnvVersionRunner\n            }`;\n\n            const { chosenAction } = await inquirerPrompt({\n                message: 'What to do next?',\n                type: 'list',\n                name: 'chosenAction',\n                choices: [actionNoUpdate, actionWithUpdate, actionUpgrade],\n                warningMessage: `You are running $rnv v${chalk.red(\n                    c.runtime.rnvVersionRunner\n                )} against project built with rnv v${chalk.red(\n                    c.runtime.rnvVersionProject\n                )}. This might result in unexpected behaviour!\nIt is recommended that you run your rnv command with npx prefix: ${\n    recCmd\n} . or manually update your devDependencies.rnv version in your package.json.`\n            });\n\n            c.runtime.versionCheckCompleted = true;\n\n            c.runtime.skipPackageUpdate = chosenAction === actionNoUpdate;\n\n            if (chosenAction === actionUpgrade) {\n                upgradeProjectDependencies(c, c.runtime.rnvVersionRunner);\n            }\n        }\n    }\n    return true;\n};\n\nexport const loadFile = (fileObj, pathObj, key) => {\n    if (!fs.existsSync(pathObj[key])) {\n        pathObj[`${key}Exists`] = false;\n        logDebug(`WARNING: loadFile: Path ${pathObj[key]} does not exists!`);\n        return false;\n    }\n    pathObj[`${key}Exists`] = true;\n    try {\n        fileObj[key] = JSON.parse(fs.readFileSync(pathObj[key]).toString());\n        pathObj[`${key}Exists`] = true;\n        return true;\n    } catch (e) {\n        logError(`loadFile: ${pathObj[key]} :: ${e}`, true); // crash if there's an error in the config file\n        return false;\n    }\n};\n\nconst _findAndSwitchAppConfigDir = (c, appId) => {\n    logTask(`_findAndSwitchAppConfigDir:${appId}`);\n\n    c.paths.project.appConfigsDir = getRealPath(\n        c,\n        c.buildConfig.paths?.appConfigsDir,\n        'appConfigsDir',\n        c.paths.project.appConfigsDir\n    );\n    const appConfigsDirs = c.buildConfig.paths?.appConfigsDirs;\n    if (appConfigsDirs && appConfigsDirs.forEach && appId) {\n        appConfigsDirs.forEach((v) => {\n            const altPath = path.join(v, appId);\n            if (fs.existsSync(altPath)) {\n                logInfo(\n                    `Found config in following location: ${altPath}. Will use it`\n                );\n                c.paths.project.appConfigsDir = v;\n            }\n        });\n    }\n};\n\nconst _arrayMergeOverride = (destinationArray, sourceArray) => sourceArray;\n\n\nconst getEnginesPluginDelta = (c) => {\n    logDebug('getEnginesPluginDelta');\n\n    if (!c.buildConfig) return;\n\n\n    const enginePlugins = {};\n    const missingEnginePlugins = {};\n    const supPlats = c.files.project?.config?.defaults?.supportedPlatforms;\n    if (supPlats) {\n        supPlats.forEach((pk) => {\n            const selectedEngine = getEngineByPlatform(c, pk);\n            if (selectedEngine?.plugins) {\n                const ePlugins = Object.keys(selectedEngine.plugins);\n\n                if (ePlugins?.length) {\n                    ePlugins.forEach((pluginKey) => {\n                        if (!c.files?.project?.config?.[pluginKey]) {\n                            missingEnginePlugins[pluginKey] = selectedEngine.plugins[pluginKey];\n                        }\n                        enginePlugins[pluginKey] = selectedEngine.plugins[pluginKey];\n                    });\n                }\n            }\n        });\n    }\n    c.runtime.missingEnginePlugins = missingEnginePlugins;\n    return enginePlugins;\n};\n\nexport const generateBuildConfig = (c) => {\n    logDebug('generateBuildConfig');\n\n    const mergeOrder = [\n        c.paths.defaultWorkspace.config,\n        c.paths.rnv.projectTemplates.config,\n        c.paths.rnv.pluginTemplates.config,\n        // c.paths.rnv.platformTemplates.config,\n        c.paths.workspace.config,\n        c.paths.workspace.configPrivate,\n        c.paths.workspace.configLocal,\n        c.paths.workspace.project.config,\n        c.paths.workspace.project.configPrivate,\n        c.paths.workspace.project.configLocal,\n        c.paths.workspace.appConfig.configBase,\n        c.paths.workspace.appConfig.config,\n        c.paths.workspace.appConfig.configPrivate,\n        c.paths.workspace.appConfig.configLocal,\n        c.paths.project.config,\n        c.paths.project.configPrivate,\n        c.paths.project.configLocal,\n        c.paths.appConfig.configBase,\n        c.paths.appConfig.config,\n        c.paths.appConfig.configPrivate,\n        c.paths.appConfig.configLocal\n    ];\n    const cleanPaths = mergeOrder.filter(v => v);\n    const existsPaths = cleanPaths.filter((v) => {\n        const exists = fs.existsSync(v);\n        if (exists) {\n            logDebug(`Merged: ${v}`);\n            // console.log(chalk.green(v));\n        } else {\n            // console.log(chalk.red(v));\n        }\n        return exists;\n    });\n\n    let pluginTemplates = [];\n    if (c.files.rnv.pluginTemplates.configs) {\n        pluginTemplates = Object.keys(c.files.rnv.pluginTemplates.configs).map(\n            v => c.files.rnv.pluginTemplates.configs[v]\n        );\n    }\n\n    const extraPlugins = getEnginesPluginDelta(c);\n\n    const mergeFiles = [\n        c.files.defaultWorkspace.config,\n        c.files.rnv.projectTemplates.config,\n        { plugins: extraPlugins },\n        ...pluginTemplates,\n        c.files.rnv.engines.config,\n        c.files.workspace.config,\n        c.files.workspace.configPrivate,\n        c.files.workspace.configLocal,\n        c.files.workspace.project.config,\n        c.files.workspace.project.configPrivate,\n        c.files.workspace.project.configLocal,\n        c.files.workspace.appConfig.configBase,\n        c.files.workspace.appConfig.config,\n        c.files.workspace.appConfig.configPrivate,\n        c.files.workspace.appConfig.configLocal,\n        c.files.project.config,\n        c.files.project.configPrivate,\n        c.files.project.configLocal,\n        c.files.appConfig.configBase,\n        c.files.appConfig.config,\n        c.files.appConfig.configPrivate,\n        c.files.appConfig.configLocal\n    ];\n\n    const meta = [\n        {\n            _meta: {\n                generated: new Date().getTime(),\n                mergedConfigs: existsPaths\n            }\n        }\n    ];\n    const existsFiles = mergeFiles.filter(v => v);\n\n    logDebug(\n        `generateBuildConfig:mergeOrder.length:${\n            mergeOrder.length\n        },cleanPaths.length:${cleanPaths.length},existsPaths.length:${\n            existsPaths.length\n        },existsFiles.length:${existsFiles.length}`\n    );\n\n    let out = merge.all([...meta, ...existsFiles], {\n        arrayMerge: _arrayMergeOverride\n    });\n    out = merge({}, out);\n\n\n    logDebug(\n        `generateBuildConfig: will sanitize file at: ${\n            c.paths.project.builds.config\n        }`\n    );\n    c.buildConfig = sanitizeDynamicRefs(c, out);\n    c.buildConfig = sanitizeDynamicProps(c.buildConfig, c.buildConfig._refs, {}, c.runtime);\n\n    if (fs.existsSync(c.paths.project.builds.dir)) {\n        writeFileSync(c.paths.project.builds.config, c.buildConfig);\n    }\n    // DEPRECATED\n    // if (Config.isRenativeProject) {\n    //     const localMetroPath = path.join(c.paths.project.dir, 'metro.config.local.js');\n    //\n    //     if (c.platform) {\n    //         fsWriteFileSync(localMetroPath, `module.exports = ${getSourceExtsAsString(c)}`);\n    //     } else if (!fs.existsSync(localMetroPath)) {\n    //         fsWriteFileSync(localMetroPath, 'module.exports = []');\n    //     }\n    // }\n};\n\nconst _loadConfigFiles = (c, fileObj, pathObj, extendDir) => {\n    let result = false;\n    let extendAppId;\n    if (loadFile(fileObj, pathObj, 'config')) {\n        extendAppId = fileObj.config.extend || extendAppId;\n        result = true;\n    }\n\n    if (loadFile(fileObj, pathObj, 'configLocal')) {\n        extendAppId = fileObj.configLocal.extend || extendAppId;\n        result = true;\n    }\n\n    if (loadFile(fileObj, pathObj, 'configPrivate')) {\n        extendAppId = fileObj.configPrivate.extend || extendAppId;\n        result = true;\n    }\n    if (extendAppId && extendDir) {\n        pathObj.configBase = path.join(extendDir, extendAppId, 'renative.json');\n        pathObj.dirs = [path.join(extendDir, extendAppId), pathObj.dir];\n        pathObj.fontDirs = [\n            path.join(pathObj.dirs[0], 'fonts'),\n            path.join(pathObj.dirs[1], 'fonts')\n        ];\n        pathObj.pluginDirs = [\n            path.join(pathObj.dirs[0], 'plugins'),\n            path.join(pathObj.dirs[1], 'plugins')\n        ];\n        loadFile(fileObj, pathObj, 'configBase');\n    } else {\n        pathObj.fontDirs = c.paths.project.projectConfig.fontsDirs;\n    }\n\n    generateBuildConfig(c);\n    return result;\n};\n\nexport const generateRuntimeConfig = async (c) => {\n    logTask('generateRuntimeConfig');\n    // c.assetConfig = {\n    //     common: c.buildConfig.common,\n    //     runtime: c.buildConfig.runtime\n    // };\n    c.assetConfig = mergeObjects(c, c.assetConfig, c.buildConfig.runtime || {});\n    c.assetConfig = mergeObjects(\n        c,\n        c.assetConfig,\n        c.buildConfig.common?.runtime || {}\n    );\n    c.assetConfig = mergeObjects(\n        c,\n        c.assetConfig,\n        c.buildConfig.platforms?.[c.platform]?.runtime || {}\n    );\n    c.assetConfig = mergeObjects(\n        c,\n        c.assetConfig,\n        getConfigProp(c, c.platform, 'runtime') || {}\n    );\n\n    if (fs.existsSync(c.paths.project.assets.dir)) {\n        writeFileSync(c.paths.project.assets.config, c.assetConfig);\n    }\n    return true;\n};\n\nexport const generateLocalConfig = (c, resetAppId) => {\n    logTask(`generateLocalConfig:${resetAppId}:${c.paths.project.configLocal}`);\n    const configLocal = c.files.project.configLocal || {};\n    configLocal._meta = configLocal._meta || {};\n    if (resetAppId) {\n        delete configLocal._meta.currentAppConfigId;\n    } else {\n        configLocal._meta.currentAppConfigId = c.runtime.appId;\n    }\n    c.files.project.configLocal = configLocal;\n    writeFileSync(c.paths.project.configLocal, configLocal);\n};\n\nconst _generatePlatformTemplatePaths = (c) => {\n    if (!c.buildConfig.paths) {\n        logWarning(`You're missing paths object in your ${chalk.white(c.paths.project.config)}`);\n        c.buildConfig.paths = {};\n    }\n    if (c.buildConfig.platformTemplatesDirs) {\n        logWarning(`platformTemplatesDirs should be placed inside \"paths\" object in your ${\n            chalk.white(c.paths.project.config)\n        }`);\n    }\n    if (c.buildConfig.platformTemplatesDir) {\n        logWarning(`platformTemplatesDir should be placed inside \"paths\" object in your ${\n            chalk.white(c.paths.project.config)\n        }`);\n    }\n    const pt = c.buildConfig.paths.platformTemplatesDirs || c.buildConfig.platformTemplatesDirs || {};\n    const originalPath = c.buildConfig.paths.platformTemplatesDir || c.buildConfig.platformTemplatesDir || '$RNV_HOME/platformTemplates';\n    const result = {};\n    SUPPORTED_PLATFORMS.forEach((v) => {\n        if (!pt[v]) {\n            result[v] = getRealPath(\n                c,\n                originalPath,\n                'platformTemplatesDir',\n                originalPath\n            );\n        } else {\n            result[v] = getRealPath(\n                c,\n                pt[v],\n                'platformTemplatesDir',\n                originalPath\n            );\n        }\n    });\n    return result;\n};\n\nconst _listAppConfigsFoldersSync = (\n    dirPath,\n    configDirs,\n    ignoreHiddenConfigs\n) => {\n    logDebug(`_listAppConfigsFoldersSync:${dirPath}`);\n    if (!fs.existsSync(dirPath)) return;\n    fs.readdirSync(dirPath).forEach((dir) => {\n        const appConfigDir = path.join(dirPath, dir);\n        if (\n            !IGNORE_FOLDERS.includes(dir)\n            && fs.lstatSync(appConfigDir).isDirectory()\n        ) {\n            if (ignoreHiddenConfigs) {\n                const appConfig = path.join(appConfigDir, RENATIVE_CONFIG_NAME);\n                if (fs.existsSync(appConfig)) {\n                    try {\n                        const config = readObjectSync(appConfig);\n                        if (config?.hidden !== true) {\n                            configDirs.push(dir);\n                        }\n                    } catch (e) {\n                        logWarning(`_listAppConfigsFoldersSync: ${e}`);\n                    }\n                }\n            } else {\n                configDirs.push(dir);\n            }\n        }\n    });\n};\n\nexport const listAppConfigsFoldersSync = (c, ignoreHiddenConfigs) => {\n    logTask(`listAppConfigsFoldersSync:${ignoreHiddenConfigs}`);\n    const configDirs = [];\n    const appConfigsDirs = c.buildConfig?.paths?.appConfigsDirs;\n    if (appConfigsDirs && appConfigsDirs.forEach) {\n        appConfigsDirs.forEach((v) => {\n            _listAppConfigsFoldersSync(v, configDirs, ignoreHiddenConfigs);\n        });\n    } else {\n        _listAppConfigsFoldersSync(\n            c.paths.project.appConfigsDir,\n            configDirs,\n            ignoreHiddenConfigs\n        );\n    }\n\n    return configDirs;\n};\n\nexport const loadProjectTemplates = (c) => {\n    c.files.rnv.projectTemplates.config = readObjectSync(\n        c.paths.rnv.projectTemplates.config\n    );\n};\n\n// export const loadPlatformTemplates = (c) => {\n//     c.files.rnv.platformTemplates.config = readObjectSync(\n//         c.paths.rnv.platformTemplates.config\n//     );\n// };\n\nexport const loadEngines = (c) => {\n    c.files.rnv.engines.config = readObjectSync(\n        c.paths.rnv.engines.config\n    );\n};\n\nconst _loadWorkspacesSync = (c) => {\n    // CHECK WORKSPACES\n    if (fs.existsSync(c.paths.rnv.configWorkspaces)) {\n        logDebug(`${c.paths.rnv.configWorkspaces} file exists!`);\n        c.files.rnv.configWorkspaces = readObjectSync(\n            c.paths.rnv.configWorkspaces\n        );\n\n        if (!c.files.rnv.configWorkspaces) c.files.rnv.configWorkspaces = {};\n\n        if (!c.files.rnv.configWorkspaces?.workspaces) {\n            c.files.rnv.configWorkspaces.workspaces = {};\n        }\n        if (Object.keys(c.files.rnv.configWorkspaces.workspaces).length === 0) {\n            logWarning(\n                `No workspace found in ${\n                    c.paths.rnv.configWorkspaces\n                }. Creating default rnv one for you`\n            );\n            c.files.rnv.configWorkspaces.workspaces = {\n                rnv: {\n                    path: c.paths.workspace.dir\n                }\n            };\n            writeFileSync(\n                c.paths.rnv.configWorkspaces,\n                c.files.rnv.configWorkspaces\n            );\n        }\n    } else {\n        logWarning(\n            `Cannot find ${c.paths.rnv.configWorkspaces}. creating one..`\n        );\n        c.files.rnv.configWorkspaces = {\n            workspaces: {\n                rnv: {\n                    path: c.paths.workspace.dir\n                }\n            }\n        };\n        writeFileSync(\n            c.paths.rnv.configWorkspaces,\n            c.files.rnv.configWorkspaces\n        );\n    }\n};\n\nexport const setAppConfig = async (c, appId) => {\n    logTask(`setAppConfig:${appId}`);\n\n    if (!appId || appId === true || appId === true) return;\n\n    c.runtime.appId = appId;\n    c.runtime.appDir = path.join(\n        c.paths.project.builds.dir,\n        `${c.runtime.appId}_${c.platform}`\n    );\n\n    _findAndSwitchAppConfigDir(c, appId);\n\n    _generateConfigPaths(\n        c.paths.appConfig,\n        path.join(c.paths.project.appConfigsDir, appId)\n    );\n    c.paths.appConfig.fontsDir = path.join(c.paths.appConfig.dir, 'fonts');\n    _loadConfigFiles(\n        c,\n        c.files.appConfig,\n        c.paths.appConfig,\n        c.paths.project.appConfigsDir\n    );\n\n    const workspaceAppConfigsDir = getRealPath(\n        c,\n        c.buildConfig.workspaceAppConfigsDir\n    );\n    c.paths.workspace.project.appConfigsDir = workspaceAppConfigsDir\n        || path.join(c.paths.workspace.project.dir, 'appConfigs');\n\n    _generateConfigPaths(\n        c.paths.workspace.appConfig,\n        path.join(c.paths.workspace.project.appConfigsDir, appId)\n    );\n\n    _loadConfigFiles(\n        c,\n        c.files.workspace.appConfig,\n        c.paths.workspace.appConfig,\n        c.paths.workspace.project.appConfigsDir\n    );\n    generateBuildConfig(c);\n    generateLocalConfig(c);\n\n    // LOAD WORKSPACE /RENATIVE.*.JSON\n    _generateConfigPaths(\n        c.paths.workspace,\n        getRealPath(c, await getWorkspaceDirPath(c))\n    );\n    _loadConfigFiles(c, c.files.workspace, c.paths.workspace);\n};\n\nexport const updateConfig = async (c, appConfigId) => {\n    logTask(`updateConfig:${appConfigId}`);\n\n    await setAppConfig(c, appConfigId);\n\n    const isPureRnv = !c.command && !c.subCommand;\n\n    if (!fs.existsSync(c.paths.appConfig.dir) || isPureRnv) {\n        const configDirs = listAppConfigsFoldersSync(c, true);\n\n        if (!appConfigId) {\n            logWarning(\"It seems you don't have any appConfig active\");\n        } else if (appConfigId !== true && appConfigId !== true && !isPureRnv) {\n            logWarning(\n                `It seems you don't have appConfig named ${chalk.white(\n                    appConfigId\n                )} present in your config folder: ${chalk.white(\n                    c.paths.project.appConfigsDir\n                )} !`\n            );\n        }\n\n        if (configDirs.length) {\n            if (configDirs.length === 1) {\n                // we have only one, skip the question\n                logInfo(\n                    `Found only one app config available. Will use ${chalk.white(\n                        configDirs[0]\n                    )}`\n                );\n                await setAppConfig(c, configDirs[0]);\n                return true;\n            }\n\n            const { conf } = await inquirerPrompt({\n                name: 'conf',\n                type: 'list',\n                message: 'Which one would you like to pick?',\n                choices: configDirs,\n                pageSize: 50,\n                logMessage: 'ReNative found multiple existing appConfigs'\n            });\n\n            if (conf) {\n                await setAppConfig(c, conf);\n                return true;\n            }\n        }\n\n        const { conf } = await inquirerPrompt({\n            name: 'conf',\n            type: 'confirm',\n            message: 'Do you want ReNative to create new sample appConfig for you?',\n            warningMessage: `No app configs found for this project \\nMaybe you forgot to run ${chalk.white('rnv template apply')} ?`\n        });\n\n        if (conf) {\n            await rnvTemplateApply(c);\n            await setAppConfig(c);\n        }\n    }\n    return true;\n};\n\nexport const parseRenativeConfigs = async (c) => {\n    logTask('parseRenativeConfigs');\n    // LOAD ./package.json\n    loadFile(c.files.project, c.paths.project, 'package');\n\n    // LOAD ./RENATIVE.*.JSON\n    _loadConfigFiles(c, c.files.project, c.paths.project);\n    if (c.program.appConfigID !== true) {\n        const aid = await matchAppConfigID(\n            c,\n            c.program.appConfigID?.toLowerCase?.()\n        );\n        c.runtime.appId = aid\n            || c.runtime.appId\n            || c.files.project?.configLocal?._meta?.currentAppConfigId;\n    }\n    c.paths.project.builds.config = path.join(\n        c.paths.project.builds.dir,\n        `${c.runtime.appId}_${c.platform}.json`\n    );\n\n    // LOAD ./platformBuilds/RENATIVE.BUILLD.JSON\n    loadFile(c.files.project.builds, c.paths.project.builds, 'config');\n\n    // LOAD WORKSPACE /RENATIVE.*.JSON\n    _generateConfigPaths(\n        c.paths.workspace,\n        getRealPath(c, await getWorkspaceDirPath(c))\n    );\n    _loadConfigFiles(c, c.files.workspace, c.paths.workspace);\n\n    // LOAD DEFAULT WORKSPACE\n    _generateConfigPaths(c.paths.defaultWorkspace, c.paths.GLOBAL_RNV_DIR);\n    _loadConfigFiles(c, c.files.defaultWorkspace, c.paths.defaultWorkspace);\n\n    // LOAD PROJECT TEMPLATES\n    loadProjectTemplates(c);\n\n    // LOAD PLUGIN TEMPLATES\n    loadPluginTemplates(c);\n\n    // LOAD PLATFORM TEMPLATES\n    // loadPlatformTemplates(c);\n\n    // LOAD ENGINES\n    loadEngines(c);\n\n    if (!c.files.project.config) return;\n\n    // LOAD WORKSPACE /[PROJECT_NAME]/RENATIVE.*.JSON\n    _generateConfigPaths(\n        c.paths.workspace.project,\n        path.join(c.paths.workspace.dir, c.files.project.config.projectName)\n    );\n    _loadConfigFiles(c, c.files.workspace.project, c.paths.workspace.project);\n\n    c.paths.workspace.project.projectConfig.dir = path.join(\n        c.paths.workspace.project.dir,\n        'projectConfig'\n    );\n\n    _findAndSwitchAppConfigDir(c);\n\n    c.runtime.isWrapper = c.buildConfig.isWrapper;\n    c.paths.project.platformTemplatesDirs = _generatePlatformTemplatePaths(c);\n};\n\nexport const configureRnvGlobal = async (c) => {\n    logTask('configureRnvGlobal');\n\n    // Check globalConfig Dir\n    if (fs.existsSync(c.paths.workspace.dir)) {\n        logDebug(`${c.paths.workspace.dir} folder exists!`);\n    } else {\n        logInfo(\n            `${c.paths.workspace.dir} folder missing! Creating one for you...`\n        );\n        mkdirSync(c.paths.workspace.dir);\n    }\n\n    // Check globalConfig\n    if (fs.existsSync(c.paths.workspace.config)) {\n        logDebug(\n            `${c.paths.workspace.dir}/${RENATIVE_CONFIG_NAME} file exists!`\n        );\n    } else {\n        const oldGlobalConfigPath = path.join(\n            c.paths.workspace.dir,\n            'config.json'\n        );\n        if (fs.existsSync(oldGlobalConfigPath)) {\n            logWarning(\n                'Found old version of your config. will copy it to new renative.json config'\n            );\n            copyFileSync(oldGlobalConfigPath, c.paths.workspace.config);\n        } else {\n            logInfo(\n                `${\n                    c.paths.workspace.dir\n                }/${RENATIVE_CONFIG_NAME} file missing! Creating one for you...`\n            );\n            copyFileSync(\n                path.join(\n                    c.paths.rnv.dir,\n                    'supportFiles',\n                    'global-config-template.json'\n                ),\n                c.paths.workspace.config\n            );\n        }\n    }\n\n    if (fs.existsSync(c.paths.workspace.config)) {\n        c.files.workspace.config = JSON.parse(\n            fs.readFileSync(c.paths.workspace.config).toString()\n        );\n\n        if (c.files.workspace.config?.appConfigsPath) {\n            if (!fs.existsSync(c.files.workspace.config.appConfigsPath)) {\n                logWarning(\n                    `Looks like your custom global appConfig is pointing to ${chalk.white(\n                        c.files.workspace.config.appConfigsPath\n                    )} which doesn't exist! Make sure you create one in that location`\n                );\n            } else {\n                logInfo(\n                    `Found custom appConfing location pointing to ${chalk.white(\n                        c.files.workspace.config.appConfigsPath\n                    )}. ReNativewill now swith to that location!`\n                );\n                c.paths.project.appConfigsDir = c.files.workspace.config.appConfigsPath;\n            }\n        }\n\n        // Check config sanity\n        if (c.files.workspace.config.defaultTargets === undefined) {\n            logWarning(\n                `Looks like you're missing defaultTargets in your config ${chalk.white(\n                    c.paths.workspace.config\n                )}. Let's add them!`\n            );\n            const defaultConfig = JSON.parse(\n                fs\n                    .readFileSync(\n                        path.join(\n                            c.paths.rnv.dir,\n                            'supportFiles',\n                            'global-config-template.json'\n                        )\n                    )\n                    .toString()\n            );\n            const newConfig = {\n                ...c.files.workspace.config,\n                defaultTargets: defaultConfig.defaultTargets\n            };\n            fsWriteFileSync(\n                c.paths.workspace.config,\n                JSON.stringify(newConfig, null, 2)\n            );\n        }\n    }\n\n    return true;\n};\n\nexport const createRnvConfig = (program, process, cmd, subCmd) => {\n    const c = {\n        cli: {},\n        runtime: {},\n        paths: {\n            buildHooks: {\n                dist: {}\n            },\n            home: {},\n            rnv: {\n                pluginTemplates: {},\n                platformTemplates: {},\n                projectTemplates: {},\n                platformTemplate: {},\n                plugins: {},\n                engines: {},\n                projectTemplate: {}\n            },\n            global: {},\n            project: {\n                projectConfig: {},\n                builds: {},\n                assets: {},\n                platformTemplates: {}\n            },\n            template: {},\n            appConfig: {},\n            workspace: {\n                project: {\n                    projectConfig: {},\n                    builds: {},\n                    assets: {},\n                    platformTemplates: {}\n                },\n                appConfig: {}\n            },\n            defaultWorkspace: {\n                project: {\n                    projectConfig: {},\n                    builds: {},\n                    assets: {},\n                    platformTemplates: {}\n                },\n                appConfig: {}\n            }\n        },\n        files: {\n            rnv: {\n                pluginTemplates: {},\n                platformTemplates: {},\n                projectTemplates: {},\n                plugins: {},\n                engines: {},\n                projectTemplate: {}\n            },\n            project: {\n                projectConfig: {},\n                builds: {},\n                assets: {},\n                platformTemplates: {}\n            },\n            appConfig: {},\n            workspace: {\n                project: {\n                    projectConfig: {},\n                    builds: {},\n                    assets: {},\n                    platformTemplates: {}\n                },\n                appConfig: {}\n            },\n            defaultWorkspace: {\n                project: {\n                    projectConfig: {},\n                    builds: {},\n                    assets: {},\n                    platformTemplates: {}\n                },\n                appConfig: {}\n            }\n        }\n    };\n\n    c.program = program;\n    c.process = process;\n    c.command = cmd;\n    c.subCommand = subCmd;\n    c.platformDefaults = PLATFORMS;\n\n    c.paths.rnv.dir = path.join(__dirname, '../..');\n    // c.paths.rnv.nodeModulesDir = path.join(c.paths.rnv.dir, 'node_modules');\n    c.paths.rnv.platformTemplates.dir = path.join(\n        c.paths.rnv.dir,\n        'platformTemplates'\n    );\n    c.paths.rnv.engines.dir = path.join(\n        c.paths.rnv.dir,\n        'engines'\n    );\n    c.paths.rnv.pluginTemplates.dir = path.join(\n        c.paths.rnv.dir,\n        'pluginTemplates'\n    );\n    // c.paths.rnv.platformTemplates.config = path.join(\n    //     c.paths.rnv.platformTemplates.dir,\n    //     RENATIVE_CONFIG_PLATFORMS_NAME\n    // );\n    c.paths.rnv.engines.config = path.join(\n        c.paths.rnv.engines.dir,\n        RENATIVE_CONFIG_ENGINES_NAME\n    );\n    c.paths.rnv.pluginTemplates.config = path.join(\n        c.paths.rnv.pluginTemplates.dir,\n        RENATIVE_CONFIG_PLUGINS_NAME\n    );\n    c.paths.rnv.projectTemplates.dir = path.join(\n        c.paths.rnv.dir,\n        'projectTemplates'\n    );\n    c.paths.rnv.projectTemplates.config = path.join(\n        c.paths.rnv.projectTemplates.dir,\n        RENATIVE_CONFIG_TEMPLATES_NAME\n    );\n    c.paths.rnv.package = path.join(c.paths.rnv.dir, 'package.json');\n\n    c.paths.rnv.projectTemplate.dir = path.join(\n        c.paths.rnv.dir,\n        'projectTemplate'\n    );\n    c.files.rnv.package = JSON.parse(\n        fs.readFileSync(c.paths.rnv.package).toString()\n    );\n\n    c.platform = c.program.platform;\n    c.paths.home.dir = homedir;\n    c.paths.GLOBAL_RNV_DIR = path.join(c.paths.home.dir, '.rnv');\n    c.paths.GLOBAL_RNV_CONFIG = path.join(\n        c.paths.GLOBAL_RNV_DIR,\n        RENATIVE_CONFIG_NAME\n    );\n    c.paths.rnv.configWorkspaces = path.join(\n        c.paths.GLOBAL_RNV_DIR,\n        RENATIVE_CONFIG_WORKSPACES_NAME\n    );\n\n    if (!fs.existsSync(c.paths.GLOBAL_RNV_DIR)) {\n        mkdirSync(c.paths.GLOBAL_RNV_DIR);\n    }\n\n    _generateConfigPaths(c.paths.project, base);\n\n    c.paths.buildHooks.dir = path.join(c.paths.project.dir, 'buildHooks/src');\n    c.paths.buildHooks.dist.dir = path.join(\n        c.paths.project.dir,\n        'buildHooks/dist'\n    );\n    c.paths.buildHooks.index = path.join(c.paths.buildHooks.dir, 'index.js');\n    c.paths.buildHooks.dist.index = path.join(\n        c.paths.buildHooks.dist.dir,\n        'index.js'\n    );\n    c.paths.project.nodeModulesDir = path.join(\n        c.paths.project.dir,\n        'node_modules'\n    );\n    c.paths.project.srcDir = path.join(c.paths.project.dir, 'src');\n    c.paths.project.appConfigsDir = path.join(\n        c.paths.project.dir,\n        'appConfigs'\n    );\n    c.paths.project.package = path.join(c.paths.project.dir, 'package.json');\n    c.paths.project.rnCliConfig = path.join(\n        c.paths.project.dir,\n        RN_CLI_CONFIG_NAME\n    );\n    c.paths.project.babelConfig = path.join(\n        c.paths.project.dir,\n        RN_BABEL_CONFIG_NAME\n    );\n    c.paths.project.npmLinkPolyfill = path.join(\n        c.paths.project.dir,\n        'npm_link_polyfill.json'\n    );\n    c.paths.project.projectConfig.dir = path.join(\n        c.paths.project.dir,\n        'appConfigs',\n        'base'\n    );\n    c.paths.project.projectConfig.pluginsDir = path.join(\n        c.paths.project.projectConfig.dir,\n        'plugins'\n    );\n    c.paths.project.projectConfig.fontsDir = path.join(\n        c.paths.project.projectConfig.dir,\n        'fonts'\n    );\n    c.paths.project.projectConfig.fontsDirs = [\n        c.paths.project.projectConfig.fontsDir\n    ];\n    c.paths.project.assets.dir = path.join(\n        c.paths.project.dir,\n        'platformAssets'\n    );\n    c.paths.project.assets.runtimeDir = path.join(\n        c.paths.project.assets.dir,\n        'runtime'\n    );\n    c.paths.project.assets.config = path.join(\n        c.paths.project.assets.dir,\n        RENATIVE_CONFIG_RUNTIME_NAME\n    );\n    c.paths.project.builds.dir = path.join(\n        c.paths.project.dir,\n        'platformBuilds'\n    );\n    c.paths.project.builds.config = path.join(\n        c.paths.project.builds.dir,\n        RENATIVE_CONFIG_BUILD_NAME\n    );\n\n    _generateConfigPaths(c.paths.workspace, c.paths.GLOBAL_RNV_DIR);\n\n    // LOAD WORKSPACES\n    try {\n        _loadWorkspacesSync(c);\n    } catch (e) {\n        logError(e);\n    }\n\n    return c;\n};\n"],"file":"configParser.js"}