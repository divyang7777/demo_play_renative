{"version":3,"sources":["../../src/sdk-android/xmlValuesParser.js"],"names":["parseValuesStringsSync","c","appFolder","platform","stringsPath","strings","pluginConfigAndroid","resourceStrings","forEach","v","tag","name","child_value","path","join","parseValuesColorsSync","injects","pattern","override","hex","injectPluginXmlValuesSync","plugin","rStrings","ResourceStrings","children","obj","push"],"mappings":"kPAAA;AACA;;;;;;;;AAQA;;AAEO,GAAMA,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,CAAD,CAAO;AACzC,GAAMC,CAAAA,SAAS,CAAG,yBAAaD,CAAb,CAAgBA,CAAC,CAACE,QAAlB,CAAlB;AACA,GAAMC,CAAAA,WAAW,CAAG,qCAApB;AACA,GAAIC,CAAAA,OAAO,CAAG,eAAd;AACAA,OAAO,iCAAiC;AACpCJ,CADoC;AAEpCA,CAAC,CAACE,QAFkC,CAAjC,cAAP;;AAIAF,CAAC,CAACK,mBAAF,CAAsBC,eAAtB,CAAsCC,OAAtC,CAA8C,SAACC,CAAD,CAAO;AACjDJ,OAAO,QAAUI,CAAC,CAACC,GAAZ,YAAyBD,CAAC,CAACE,IAA3B,OAAoCF,CAAC,CAACG,WAAtC,MAAsDH,CAAC,CAACC,GAAxD,MAAP;AACH,CAFD;AAGAL,OAAO,EAAI,cAAX;AACA,6BAAcQ,cAAKC,IAAL,CAAUZ,SAAV,CAAqBE,WAArB,CAAd,CAAiDC,OAAjD;AACH,CAbM,C;;AAeA,GAAMU,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACd,CAAD,CAAO;AACxC,GAAMC,CAAAA,SAAS,CAAG,yBAAaD,CAAb,CAAgBA,CAAC,CAACE,QAAlB,CAAlB;AACA,GAAMC,CAAAA,WAAW,CAAG,oCAApB;;AAEA,GAAMY,CAAAA,OAAO,CAAG;AACZ;AACIC,OAAO,CAAE,sBADb;AAEIC,QAAQ,CAAE;AACN,0BAAcjB,CAAd,CAAiBA,CAAC,CAACE,QAAnB,CAA6B,iBAA7B,CADM;AAEN,iBAFM;AAGRgB,GALN,CADY,CAAhB;;;;AAUA,6BAAiBlB,CAAjB,CAAoBe,OAApB;;AAEA;AACI,6BAAiBf,CAAjB,CAAoBA,CAAC,CAACE,QAAtB,CAAgCC,WAAhC,CADJ;AAEIS,cAAKC,IAAL,CAAUZ,SAAV,CAAqBE,WAArB,CAFJ;AAGIY,OAHJ,CAGa,IAHb,CAGmBf,CAHnB;;AAKH,CArBM,C;;AAuBA,GAAMmB,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACnB,CAAD,CAAIoB,MAAJ,CAAe;AACpD,GAAMC,CAAAA,QAAQ,wBAAGD,MAAM,CAACE,eAAV,eAAG,sBAAwBC,QAAzC;AACA,GAAIF,QAAJ,CAAc;AACVA,QAAQ,CAACd,OAAT,CAAiB,SAACiB,GAAD,CAAS;AACtBxB,CAAC,CAACK,mBAAF,CAAsBC,eAAtB,CAAsCmB,IAAtC,CAA2CD,GAA3C;AACH,CAFD;AAGH;AACJ,CAPM,C","sourcesContent":["import path from 'path';\nimport {\n    getAppFolder,\n    getAppTitle,\n    getBuildFilePath,\n    getConfigProp,\n    sanitizeColor,\n    addSystemInjects\n} from '../core/common';\nimport { writeFileSync, writeCleanFile } from '../core/systemManager/fileutils';\n\nexport const parseValuesStringsSync = (c) => {\n    const appFolder = getAppFolder(c, c.platform);\n    const stringsPath = 'app/src/main/res/values/strings.xml';\n    let strings = '<resources>\\n';\n    strings += `  <string name=\"app_name\">${getAppTitle(\n        c,\n        c.platform\n    )}</string>\\n`;\n    c.pluginConfigAndroid.resourceStrings.forEach((v) => {\n        strings += `  <${v.tag} name=\"${v.name}\">${v.child_value}</${v.tag}>\\n`;\n    });\n    strings += '</resources>';\n    writeFileSync(path.join(appFolder, stringsPath), strings);\n};\n\nexport const parseValuesColorsSync = (c) => {\n    const appFolder = getAppFolder(c, c.platform);\n    const stringsPath = 'app/src/main/res/values/colors.xml';\n\n    const injects = [\n        {\n            pattern: '{{PLUGIN_COLORS_BG}}',\n            override: sanitizeColor(\n                getConfigProp(c, c.platform, 'backgroundColor'),\n                'backgroundColor'\n            ).hex\n        }\n    ];\n\n    addSystemInjects(c, injects);\n\n    writeCleanFile(\n        getBuildFilePath(c, c.platform, stringsPath),\n        path.join(appFolder, stringsPath),\n        injects, null, c\n    );\n};\n\nexport const injectPluginXmlValuesSync = (c, plugin) => {\n    const rStrings = plugin.ResourceStrings?.children;\n    if (rStrings) {\n        rStrings.forEach((obj) => {\n            c.pluginConfigAndroid.resourceStrings.push(obj);\n        });\n    }\n};\n"],"file":"xmlValuesParser.js"}