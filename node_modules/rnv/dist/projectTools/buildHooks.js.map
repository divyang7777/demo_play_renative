{"version":3,"sources":["../../src/projectTools/buildHooks.js"],"names":["rnvHooksRun","c","Promise","resolve","reject","buildHooks","then","program","exeMethod","catch","e","chalk","white","executePipe","key","pipesConfig","buildConfig","pipes","includes","pipe","buildPipes","Array","isArray","reduce","accumulatorPromise","next","fs","existsSync","paths","index","isBuildHooksReady","cmd","dir","dist","cwd","h","require","hooks","rnvHooksList","hookOpts","hooksAsString","asString","pipeOpts","rnvHooksPipes"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport { logToSummary, logTask, logRaw } from '../systemTools/logger';\nimport { generateOptions } from '../systemTools/prompt';\nimport { executeAsync } from '../systemTools/exec';\n\n// ##########################################\n// PUBLIC API\n// ##########################################\n\nconst rnvHooksRun = c => new Promise((resolve, reject) => {\n    logTask('rnvHooksRun');\n\n    buildHooks(c)\n        .then(() => {\n            if (!c.buildHooks) {\n                reject('Build hooks have not been compiled properly!');\n                return;\n            }\n            if (c.buildHooks[c.program?.exeMethod]) {\n                c.buildHooks[c.program?.exeMethod](c)\n                    .then(() => resolve())\n                    .catch(e => reject(e));\n            } else {\n                reject(\n                    `Method name ${chalk.white(\n                        c.program.exeMethod\n                    )} does not exists in your buildHooks!`\n                );\n            }\n        })\n        .catch(e => reject(e));\n});\n\nconst executePipe = async (c, key) => {\n    logTask(`executePipe:${key}`);\n\n    const pipesConfig = c.buildConfig?.pipes;\n    if (!pipesConfig || (pipesConfig && pipesConfig.includes(key))) {\n        await buildHooks(c);\n    }\n\n    const pipe = c.buildPipes ? c.buildPipes[key] : null;\n\n    if (Array.isArray(pipe)) {\n        await pipe.reduce(\n            (accumulatorPromise, next) => accumulatorPromise.then(() => next(c)),\n            Promise.resolve()\n        );\n    } else if (pipe) {\n        await pipe(c);\n    }\n};\n\n/* eslint-disable import/no-dynamic-require, global-require */\nconst buildHooks = async (c) => {\n    logTask('buildHooks');\n\n    if (fs.existsSync(c.paths.buildHooks.index)) {\n        if (c.isBuildHooksReady) {\n            return true;\n        }\n\n        const cmd = 'babel --no-babelrc --plugins @babel/plugin-proposal-optional-chaining,@babel/plugin-proposal-nullish-coalescing-operator';\n\n        try {\n            await executeAsync(\n                c,\n                `${cmd} ${c.paths.buildHooks.dir} -d ${c.paths.buildHooks.dist.dir} --presets=@babel/env`,\n                {\n                    cwd: c.paths.buildHooks.dir\n                }\n            );\n\n            const h = require(c.paths.buildHooks.dist.index);\n            c.buildHooks = h.hooks;\n            c.buildPipes = h.pipes;\n            c.isBuildHooksReady = true;\n            return true;\n        } catch (e) {\n            // logWarning(`BUILD_HOOK Failed with error: ${e}`);\n            // resolve();\n            // Fail Builds instead of warn when hook fails\n            return Promise.reject(`BUILD_HOOK Failed with error: ${e}`);\n        }\n    }\n    return true;\n};\n\nconst rnvHooksList = c => new Promise((resolve, reject) => {\n    logTask('rnvHooksList');\n\n    buildHooks(c)\n        .then(() => {\n            if (c.buildHooks) {\n                const hookOpts = generateOptions(c.buildHooks);\n                let hooksAsString = `\\n${'Hooks:'}\\n${hookOpts.asString}`;\n\n                if (c.buildPipes) {\n                    const pipeOpts = generateOptions(c.buildPipes);\n                    hooksAsString += `\\n${'Pipes:'}\\n${pipeOpts.asString}`;\n                }\n                logToSummary(hooksAsString);\n                resolve();\n            } else {\n                reject('Your buildHooks object is empty!');\n            }\n        })\n        .catch(e => reject(e));\n});\n\nconst rnvHooksPipes = c => new Promise((resolve, reject) => {\n    logTask('rnvHooksPipes');\n\n    buildHooks(c)\n        .then(() => {\n            const pipeOpts = generateOptions(c.buildPipes);\n            logRaw(`Pipes:\\n${pipeOpts.asString}`);\n        })\n        .catch(e => reject(e));\n});\n\nexport { buildHooks, rnvHooksList, rnvHooksRun, executePipe, rnvHooksPipes };\n"],"file":"buildHooks.js"}