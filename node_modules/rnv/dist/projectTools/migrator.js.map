{"version":3,"sources":["../../src/projectTools/migrator.js"],"names":["checkAndMigrateProject","c","prjDir","paths","project","dir","globalConfig","path","join","GLOBAL_RNV_DIR","projectConfigDir","config","configNew","package","plugins","permissions","appConfigs","metroConfig","metroConfigNew","RN_CLI_CONFIG_NAME","appConfigDirs","map","v","e","fs","existsSync","program","ci","Promise","reject","inquirer","prompt","name","type","message","confirm","reset","_migrateProject","_migrateProjectSoft","PATH_PROPS","oldKey","newKey","requiresSave","files","forEach","chalk","white","readFileSync","toString","android","platforms","androidtv","androidwear","ios","tvos","red","green","projectConfig","resolve","workspace","newConfig","projectName","defaults","defaultProjectConfigs","currentTemplate","template","templates","version","rnv","appConfigDir","defaultPorts","ports","crypto","pathsToDelete","concat","replace"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\nimport fs from 'fs';\nimport path from 'path';\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\n\nimport {\n    logWarning,\n    logTask,\n    logDebug,\n    logSuccess,\n    logError\n} from '../systemTools/logger';\nimport {\n    readObjectSync,\n    mergeObjects,\n    copyFileSync,\n    removeFilesSync,\n    writeFileSync,\n    copyFolderContentsRecursiveSync,\n    removeDirs,\n    fsWriteFileSync\n} from '../systemTools/fileutils';\nimport { listAppConfigsFoldersSync } from '../configTools/configParser';\nimport { rnvClean } from '../systemTools/cleaner';\nimport { RN_CLI_CONFIG_NAME } from '../constants';\nimport { configureNodeModules } from './projectParser';\nimport { inquirerPrompt } from '../systemTools/prompt';\n\nexport const checkAndMigrateProject = async (c) => {\n    logTask('checkAndMigrateProject');\n    const prjDir = c.paths.project.dir;\n\n    const paths = {\n        project: prjDir,\n        globalConfig: path.join(c.paths.GLOBAL_RNV_DIR, 'config.json'),\n        // privateProjectConfig: path.join(c.paths.workspace.project.dir, 'config.json'),\n        // privateProjectConfig2: path.join(c.paths.workspace.project.dir, 'config.private.json'),\n        // privateProjectConfigNew: path.join(c.paths.workspace.project.dir, 'renative.private.json'),\n        projectConfigDir: path.join(prjDir, 'projectConfig'),\n        config: path.join(prjDir, 'rnv-config.json'),\n        configNew: path.join(prjDir, 'renative.json'),\n        package: path.join(prjDir, 'package.json'),\n        plugins: path.join(prjDir, 'projectConfig/plugins.json'),\n        permissions: path.join(prjDir, 'projectConfig/permissions.json'),\n        appConfigs: path.join(prjDir, 'appConfigs'),\n        metroConfig: path.join(prjDir, 'rn-cli.config.js'),\n        metroConfigNew: path.join(prjDir, RN_CLI_CONFIG_NAME)\n    };\n\n    try {\n        paths.appConfigDirs = listAppConfigsFoldersSync(c).map(\n            v => `${prjDir}/appConfigs/${v}/config.json`\n        );\n    } catch (e) {\n        logWarning(e);\n    }\n\n    if (fs.existsSync(paths.config)) {\n        if (c.program.ci) {\n            return Promise.reject(\n                'Your project has been created with previous version of ReNative'\n            );\n        }\n        const { confirm } = await inquirer.prompt({\n            name: 'confirm',\n            type: 'confirm',\n            message:\n                'Your project has been created with previous version of ReNative. Do you want to migrate it to new format? Backing up project is recommended!'\n        });\n\n        if (confirm) {\n            c.program.reset = true;\n            await _migrateProject(c, paths);\n            await _migrateProjectSoft(c, paths);\n            await rnvClean(c);\n            await configureNodeModules(c);\n            return true;\n        }\n    } else {\n        await _migrateProjectSoft(c, paths);\n    }\n    return true;\n};\n\nconst PATH_PROPS = [\n    { oldKey: 'globalConfigFolder', newKey: 'globalConfigDir' },\n    { oldKey: 'appConfigsFolder', newKey: 'appConfigsDir' },\n    { oldKey: 'platformTemplatesFolder', newKey: 'platformTemplatesDir' },\n    { oldKey: 'entryFolder', newKey: 'entryDir' },\n    { oldKey: 'platformAssetsFolder', newKey: 'platformAssetsDir' },\n    { oldKey: 'platformBuildsFolder', newKey: 'platformBuildsDir' },\n    { oldKey: 'projectConfigFolder', newKey: 'projectConfigDir' }\n];\n\nconst _migrateProjectSoft = async (c, paths) => {\n    logTask('_migrateProjectSoft');\n    let files;\n    try {\n        let requiresSave = false;\n        files = {\n            configNew: fs.existsSync(paths.configNew)\n                ? readObjectSync(paths.configNew)\n                : null\n        };\n\n        if (files.configNew?.paths) {\n            PATH_PROPS.forEach((v) => {\n                if (files.configNew.paths[v.oldKey]) {\n                    logWarning(\n                        `You use old key ${chalk.white(\n                            v.oldKey\n                        )} instead of new one: ${chalk.white(\n                            v.newKey\n                        )}. ReNative will try to fix it for you!`\n                    );\n                    files.configNew.paths[v.newKey] = files.configNew.paths[v.oldKey];\n                    delete files.configNew.paths[v.oldKey];\n                    requiresSave = true;\n                }\n            });\n        }\n\n        if (fs.existsSync(paths.package)) {\n            // const packageString = fs.readFileSync(paths.package).toString();\n            // No longer necessary. covered in npmInstall\n            // if (!packageString.includes('jetify') && !packageString.includes('postinstall')) {\n            //     logWarning(`You're missing ${chalk.white('\"scripts\": { \"postinstall\": \"jetify\" }')} in your package.json. Your android build might fail!`);\n            // }\n        }\n\n        if (fs.existsSync(paths.metroConfig)) {\n            logWarning(\n                `Found deprecated metro config ${\n                    paths.metroConfig\n                } and it needs to be migrated to ${paths.metroConfigNew}. ReNative will try to fix it for you!`\n            );\n            const metroConfig = fs.readFileSync(paths.metroConfig).toString();\n            fsWriteFileSync(paths.metroConfigNew, metroConfig);\n            removeFilesSync([paths.metroConfig]);\n        }\n\n        if (files.configNew?.android) {\n            logWarning(\n                'Found legacy object \"android\" at root. ReNative will try to fix it for you!'\n            );\n            files.configNew.platforms = files.configNew.platforms || {};\n\n            files.configNew.platforms.android = mergeObjects(\n                c,\n                files.configNew.platforms.android || {},\n                files.configNew.android\n            );\n            if (files.configNew.platforms.androidtv) {\n                files.configNew.platforms.androidtv = mergeObjects(\n                    c,\n                    files.configNew.platforms.androidtv || {},\n                    files.configNew.android\n                );\n            }\n            if (files.configNew.platforms.androidwear) {\n                files.configNew.platforms.androidwear = mergeObjects(\n                    c,\n                    files.configNew.platforms.androidwear || {},\n                    files.configNew.android\n                );\n            }\n            delete files.configNew.android;\n            requiresSave = true;\n        }\n\n        if (files.configNew?.ios) {\n            logWarning(\n                'Found legacy object \"ios\" at root. ReNative will try to fix it for you!'\n            );\n            files.configNew.platforms = files.configNew.platforms || {};\n            files.configNew.platforms.ios = mergeObjects(\n                c,\n                files.configNew.platforms.ios || {},\n                files.configNew.ios\n            );\n            if (files.configNew.platforms.tvos) {\n                files.configNew.platforms.tvos = mergeObjects(\n                    c,\n                    files.configNew.platforms.tvos || {},\n                    files.configNew.ios\n                );\n            }\n            delete files.configNew.ios;\n            requiresSave = true;\n        }\n\n        if (fs.existsSync(paths.permissions)) {\n            logWarning(\n                `Found legacy object ${chalk.red(\n                    paths.permissions\n                )}. this should be migrated to ${chalk.green(\n                    './renative.json'\n                )}`\n            );\n        }\n\n        if (fs.existsSync(paths.plugins)) {\n            logWarning(\n                `Found legacy object ${chalk.red(\n                    paths.plugins\n                )}. this should be migrated to ${chalk.green(\n                    './renative.json'\n                )}`\n            );\n        }\n\n        if (requiresSave) writeFileSync(paths.configNew, files.configNew);\n\n        if (fs.existsSync(paths.projectConfigDir)) {\n            const { confirm } = await inquirerPrompt({\n                type: 'confirm',\n                message:\n                    'in RNV 0.28.12+ ./projectConfig has been migrated to ./appConfigs/base. confirm to migrate to new structure. (having a backup or clean git status is recommended)'\n            });\n\n            if (confirm) {\n                copyFolderContentsRecursiveSync(\n                    paths.projectConfigDir,\n                    c.paths.project.projectConfig.dir\n                );\n\n                await removeDirs([paths.projectConfigDir]);\n            } else {\n                logError(\n                    'Not migrating ./projectConfig will most likely result in errors'\n                );\n            }\n        }\n\n        // _migrateFile(paths.privateProjectConfig, paths.privateProjectConfigNew);\n        // _migrateFile(paths.privateProjectConfig2, paths.privateProjectConfigNew);\n    } catch (e) {\n        logError(`Migration not successfull. ${e}`);\n    }\n};\n\n// const _migrateFile = (oldPath, newPath) => {\n//     if (!fs.existsSync(newPath)) {\n//         if (fs.existsSync(oldPath)) {\n//             logWarning(\n//                 `Found old app config at ${chalk.white(\n//                     oldPath\n//                 )}. will copy to ${chalk.white(newPath)}`\n//             );\n//         }\n//         copyFileSync(oldPath, newPath);\n//     }\n// };\n\nconst _migrateProject = (c, paths) => new Promise((resolve) => {\n    logTask('MIGRATION STARTED');\n\n    if (!fs.existsSync(c.paths.workspace.config)) {\n        if (fs.existsSync(paths.globalConfig)) {\n            copyFileSync(paths.globalConfig, c.paths.workspace.config);\n        }\n    }\n\n    const files = {\n        config: readObjectSync(paths.config),\n        package: readObjectSync(paths.package),\n        plugins: readObjectSync(paths.plugins),\n        permissions: readObjectSync(paths.permissions)\n    };\n\n    logDebug(`paths to migrate: \\n ${paths}`);\n\n    const newConfig = {};\n\n    if (files.package) {\n        newConfig.projectName = files.package.name;\n    }\n\n    if (files.config) {\n        newConfig.defaults = {};\n\n        if (files.config.defaultProjectConfigs) {\n            newConfig.defaults = mergeObjects(\n                c,\n                newConfig.defaults,\n                files.config.defaultProjectConfigs\n            );\n        }\n        newConfig.currentTemplate = newConfig.defaults.template || 'renative-template-hello-world';\n\n        newConfig.templates = {};\n\n        if (newConfig.defaults.template) {\n            newConfig.templates[newConfig.defaults.template] = {\n                version: c.files.rnv.package.version\n            };\n        }\n\n        delete newConfig.defaults.template;\n\n        newConfig.paths = {};\n        PATH_PROPS.forEach((v) => {\n            if (files.config[v.oldKey]) {\n                newConfig.paths[v.newKey] = files.config[v.oldKey];\n            }\n        });\n        newConfig.paths.appConfigDirs = [newConfig.paths.appConfigDir];\n        delete newConfig.paths.appConfigDir;\n\n        if (files.config.defaultPorts) {\n            newConfig.defaults.ports = files.config.defaultPorts;\n        }\n\n        if (files.config.crypto) {\n            newConfig.crypto = files.config.crypto;\n        }\n    }\n\n    if (!newConfig.platforms) newConfig.platforms = {};\n\n    if (files.plugins) {\n        newConfig.plugins = files.plugins.plugins;\n\n        if (files.plugins.android) {\n            newConfig.platforms.android = files.plugins.android;\n        }\n        if (files.plugins.ios) {\n            newConfig.platforms.ios = files.plugins.ios;\n        }\n    }\n\n    if (files.permissions) {\n        newConfig.permissions = files.permissions.permissions;\n    }\n\n    const pathsToDelete = [\n        paths.config,\n        paths.plugins,\n        paths.permissions\n    ].concat(paths.appConfigDirs);\n\n    paths.appConfigDirs.forEach((v) => {\n        if (fs.existsSync(v)) {\n            copyFileSync(v, v.replace('/config.json', '/renative.json'));\n        }\n    });\n\n    writeFileSync(c.paths.project.config, newConfig);\n\n    logDebug(`Paths to delete, ${pathsToDelete.join('\\n')}`);\n\n    removeFilesSync(pathsToDelete);\n\n    logSuccess('Migration Complete!');\n\n    resolve();\n});\n"],"file":"migrator.js"}