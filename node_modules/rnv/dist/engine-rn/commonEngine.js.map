{"version":3,"sources":["../../src/engine-rn/commonEngine.js"],"names":["keepRNVRunning","getPlatformBuildDir","c","getPlatformOutputDir","dir","output","platform","getTemplateProjectDir","getTemplateRootDir","paths","project","platformTemplatesDirs","ejectPlatform","destFolder","sourcePlatformDir","path","join","getPlatformProjectDir","startBundlerIfRequired","parentTask","originTask","bundleAssets","isBundlerActive","isRunning","TASK_START","waitForBundler","resetCompleted","waitForBundlerIfRequired","Promise","configureMetroConfigs","cfPath","white","rnCliConfig","rnv","projectTemplate","RN_CLI_CONFIG_NAME","_isBundlerRunning","axios","get","runtime","localhost","port","data","includes","poll","fn","timeout","interval","endTime","Number","Date","spinner","start","checkCondition","resolve","reject","result","succeed","setTimeout","fail"],"mappings":"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","sourcesContent":["import path from 'path';\nimport axios from 'axios';\nimport ora from 'ora';\nimport { getConfigProp, confirmActiveBundler, getAppFolder, getTemplateDir } from '../core/common';\nimport { chalk, logTask, logInfo, logWarning } from '../core/systemManager/logger';\nimport { fsExistsSync, copyFileSync, copyFolderContentsRecursiveSync } from '../core/systemManager/fileutils';\nimport { TASK_START, RN_CLI_CONFIG_NAME } from '../core/constants';\nimport { executeTask } from '../core/engineManager';\n\nlet keepRNVRunning = false;\n\nexport const getPlatformBuildDir = c => getAppFolder(c);\n\nexport const getPlatformOutputDir = (c) => {\n    const dir = getPlatformBuildDir(c);\n    let output;\n    switch (c.platform) {\n        default:\n            output = dir;\n    }\n    return output;\n};\n\nexport const getTemplateProjectDir = (c) => {\n    const dir = getTemplateDir(c);\n    let output;\n    switch (c.platform) {\n        default:\n            output = dir;\n    }\n    return output;\n};\n\nexport const getTemplateRootDir = (c, platform) => {\n    const dir = c.paths.project.platformTemplatesDirs[platform];\n    return dir;\n};\n\nexport const ejectPlatform = (c, platform, destFolder) => {\n    const sourcePlatformDir = getTemplateRootDir(c, platform);\n    copyFolderContentsRecursiveSync(\n        path.join(sourcePlatformDir, platform),\n        destFolder\n    );\n    copyFolderContentsRecursiveSync(\n        path.join(sourcePlatformDir, '_shared'),\n        destFolder\n    );\n};\n\nexport const getPlatformProjectDir = (c) => {\n    const dir = getPlatformBuildDir(c);\n    let output;\n    switch (c.platform) {\n        default:\n            output = dir;\n    }\n    return output;\n};\n\nexport const startBundlerIfRequired = async (c, parentTask, originTask) => {\n    logTask('startBundlerIfRequired');\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets');\n    if (bundleAssets === true) return;\n\n    const isRunning = await isBundlerActive(c);\n    if (!isRunning) {\n        // _taskStart(c, parentTask, originTask);\n        await executeTask(c, TASK_START, parentTask, originTask);\n\n        keepRNVRunning = true;\n        await waitForBundler(c);\n    } else {\n        const resetCompleted = await confirmActiveBundler(c);\n        if (resetCompleted) {\n            await executeTask(c, TASK_START, parentTask, originTask);\n\n            keepRNVRunning = true;\n            await waitForBundler(c);\n        }\n    }\n};\n\nexport const waitForBundlerIfRequired = async (c) => {\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets');\n    if (bundleAssets === true) return;\n    // return a new promise that does...nothing, just to keep RNV running while the bundler is running\n    if (keepRNVRunning) return new Promise(() => {});\n    return true;\n};\n\nexport const configureMetroConfigs = async (c, platform) => {\n    logTask('configureMetroConfigs');\n\n    const cfPath = path.join(c.paths.project.dir, 'configs', `metro.config.${platform}.js`);\n    if (fsExistsSync(cfPath)) {\n        logWarning(`${chalk().white(cfPath)} is DEPRECATED. use withRnvMetro(config) directly in /.metro.config.js`);\n    }\n\n\n    // Check rn-cli-config\n    if (!fsExistsSync(c.paths.project.rnCliConfig)) {\n        logInfo(\n            `Your rn-cli config file ${chalk().white(\n                c.paths.project.rnCliConfig\n            )} is missing! INSTALLING...DONE`\n        );\n        copyFileSync(\n            path.join(c.paths.rnv.projectTemplate.dir, RN_CLI_CONFIG_NAME),\n            c.paths.project.rnCliConfig\n        );\n    }\n};\n\nconst _isBundlerRunning = async (c) => {\n    logTask('_isBundlerRunning');\n    try {\n        const { data } = await axios.get(\n            `http://${c.runtime.localhost}:${c.runtime.port}/${getConfigProp(\n                c,\n                c.platform,\n                'entryFile'\n            )}.js`\n        );\n        if (data.includes('import')) {\n            logTask('_isBundlerRunning', '(YES)');\n            return true;\n        }\n        logTask('_isBundlerRunning', '(NO)');\n        return false;\n    } catch (e) {\n        logTask('_isBundlerRunning', '(NO)');\n        return false;\n    }\n};\n\nexport const isBundlerActive = async (c) => {\n    logTask('isBundlerActive', `(http://${c.runtime.localhost}:${c.runtime.port})`);\n    try {\n        await axios.get(`http://${c.runtime.localhost}:${c.runtime.port}`);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nconst poll = (fn, timeout = 10000, interval = 1000) => {\n    const endTime = Number(new Date()) + timeout;\n\n    const spinner = ora('Waiting for bundler to finish...').start();\n    const checkCondition = async (resolve, reject) => {\n        try {\n            const result = await fn();\n            if (result) {\n                spinner.succeed();\n                resolve();\n            } else if (Number(new Date()) < endTime) {\n                setTimeout(checkCondition, interval, resolve, reject);\n            } else {\n                spinner.fail(\"Can't connect to bundler. Try restarting it.\");\n                reject(\"Can't connect to bundler. Try restarting it.\");\n            }\n        } catch (e) {\n            spinner.fail(\"Can't connect to bundler. Try restarting it.\");\n            reject(e);\n        }\n    };\n\n    return new Promise(checkCondition);\n};\n\nexport const waitForBundler = async c => poll(() => _isBundlerRunning(c));\n"],"file":"commonEngine.js"}