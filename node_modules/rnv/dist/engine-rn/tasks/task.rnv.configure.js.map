{"version":3,"sources":["../../../src/engine-rn/tasks/task.rnv.configure.js"],"names":["taskRnvConfigure","c","parentTask","originTask","platform","TASK_PLATFORM_CONFIGURE","TASK_CONFIGURE","program","only","IOS","TVOS","ANDROID","ANDROID_TV","ANDROID_WEAR","description","fn","task","params","PARAMS","withBase","withConfigure","platforms"],"mappings":"2QAAA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;;AAEO,GAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAOC,CAAP,CAAUC,UAAV,CAAsBC,UAAtB;AAC5B,oBAAQ,kBAAR,EAD4B;;AAGtB,wCAAsBF,CAAtB,CAAyBA,CAAC,CAACG,QAA3B,CAHsB;AAItB,+BAAYH,CAAZ,CAAeI,kCAAf,CAAwCC,yBAAxC,CAAwDH,UAAxD,CAJsB;;AAMxBF,CAAC,CAACM,OAAF,CAAUC,IAAV,EAAkB,CAAC,CAACN,UANI;AAOjB,IAPiB;;;AAUpBD,CAAC,CAACG,QAVkB;AAWnBK,cAXmB;AAYnBC,eAZmB;;;AAenBC,kBAfmB;AAgBnBC,qBAhBmB;AAiBnBC,uBAjBmB,wEAad,oCAAsBZ,CAAtB,CAbc,0CAcb,IAda;AAkBd,uCAAuBA,CAAvB,CAlBc;AAmBd,+BAAiBA,CAAjB,CAnBc;AAoBb,IApBa;;AAsBd,sCAAiBA,CAAjB,CAtBc;AAuBb,IAvBa,wEAAzB,C;;;;AA2BQ;AACXa,WAAW,CAAE,2BADF;AAEXC,EAAE,CAAEf,gBAFO;AAGXgB,IAAI,CAAE,WAHK;AAIXC,MAAM,CAAEC,kBAAOC,QAAP,CAAgBD,kBAAOE,aAAP,EAAhB,CAJG;AAKXC,SAAS,CAAE;AACPZ,cADO;AAEPC,eAFO;AAGPC,kBAHO;AAIPC,qBAJO;AAKPC,uBALO,CALA,C","sourcesContent":["import { logErrorPlatform } from '../../core/platformManager';\nimport { logTask } from '../../core/systemManager/logger';\nimport { jetifyIfRequired } from '../../core/systemManager/npmUtils';\nimport { IOS,\n    TVOS,\n    ANDROID,\n    ANDROID_TV,\n    ANDROID_WEAR,\n    TASK_PLATFORM_CONFIGURE,\n    TASK_CONFIGURE,\n    PARAMS } from '../../core/constants';\nimport { configureXcodeProject } from '../../sdk-xcode';\nimport { configureGradleProject } from '../../sdk-android';\nimport { configureMetroConfigs } from '../commonEngine';\nimport { executeTask } from '../../core/engineManager';\n\nexport const taskRnvConfigure = async (c, parentTask, originTask) => {\n    logTask('taskRnvConfigure');\n\n    await configureMetroConfigs(c, c.platform);\n    await executeTask(c, TASK_PLATFORM_CONFIGURE, TASK_CONFIGURE, originTask);\n\n    if (c.program.only && !!parentTask) {\n        return true;\n    }\n\n    switch (c.platform) {\n        case IOS:\n        case TVOS:\n            await configureXcodeProject(c);\n            return true;\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            await configureGradleProject(c);\n            await jetifyIfRequired(c);\n            return true;\n        default:\n            await logErrorPlatform(c);\n            return true;\n    }\n};\n\nexport default {\n    description: 'Configure current project',\n    fn: taskRnvConfigure,\n    task: 'configure',\n    params: PARAMS.withBase(PARAMS.withConfigure()),\n    platforms: [\n        IOS,\n        TVOS,\n        ANDROID,\n        ANDROID_TV,\n        ANDROID_WEAR,\n    ],\n};\n"],"file":"task.rnv.configure.js"}