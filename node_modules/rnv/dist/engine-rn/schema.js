Object.defineProperty(exports,"__esModule",{value:true});exports.SCHEMAS=exports.schemaRoot=exports.schemaPlatforms=exports.schemaCommon=void 0;var schemaCommon={
$id:'http://renative.org/schemas/common.json',
definitions:{
commonPlatformProps:{
engine:{
type:'string'},

buildSchemes:{
additionalProperties:true,
type:'object'},

entryFile:{
type:'string'},

excludedPlugins:{
type:'array',
items:{type:'string'}},

includedPlugins:{
type:'array',
items:{type:'string'}}}}};exports.schemaCommon=schemaCommon;





var schemaPlatforms={
$id:'http://renative.org/schemas/platforms.json',
definitions:{
android:{
additionalProperties:false,
type:'object',
properties:{

enableAndroidX:{
type:'boolean'},

enableHermes:{
type:'boolean'},

minSdkVersion:{
type:'integer'},

targetSdkVersion:{
type:'integer'},

compileSdkVersion:{
type:'integer'},

'gradle.properties':{
additionalProperties:true,
type:'object'},

AndroidManifest:{
additionalProperties:true,
type:'object'},

applyPlugin:{
type:'array'}}},



ios:{
additionalProperties:false,
type:'object',
properties:{
engine:{
type:'string'},

buildSchemes:{
additionalProperties:true,
type:'object'},

entryFile:{
type:'string'},

excludedPlugins:{
type:'array',
items:{type:'string'}},

includedPlugins:{
type:'array',
items:{type:'string'}},

deploymentTarget:{
type:'string'},

Podfile:{
additionalProperties:true,
type:'object'},

plist:{
additionalProperties:true,
type:'object'},

appleId:{
type:'string'}}},



tizen:{
additionalProperties:false,
type:'object',
properties:{
engine:{
type:'string'},

buildSchemes:{
additionalProperties:true,
type:'object'},

entryFile:{
type:'string'},

excludedPlugins:{
type:'array',
items:{type:'string'}},

includedPlugins:{
type:'array',
items:{type:'string'}}}},



webos:{
additionalProperties:false,
type:'object',
properties:{
engine:{
type:'string'},

buildSchemes:{
additionalProperties:true,
type:'object'},

entryFile:{
type:'string'},

excludedPlugins:{
type:'array',
items:{type:'string'}},

includedPlugins:{
type:'array',
items:{type:'string'}}}},



web:{
additionalProperties:false,
type:'object',
properties:{
engine:{
type:'string'},

buildSchemes:{
additionalProperties:true,
type:'object'},

entryFile:{
type:'string'},

excludedPlugins:{
type:'array',
items:{type:'string'}},

includedPlugins:{
type:'array',
items:{type:'string'}},

pagesDir:{
type:'string'},

webpackConfig:{
additionalProperties:true,
type:'object'}}},



firefox:{
additionalProperties:false,
type:'object',
properties:{
engine:{
type:'string'},

buildSchemes:{
additionalProperties:true,
type:'object'},

entryFile:{
type:'string'},

excludedPlugins:{
type:'array',
items:{type:'string'}},

includedPlugins:{
type:'array',
items:{type:'string'}}}},



macos:{
additionalProperties:false,
type:'object',
properties:{
engine:{
type:'string'},

buildSchemes:{
additionalProperties:true,
type:'object'},

entryFile:{
type:'string'},

excludedPlugins:{
type:'array',
items:{type:'string'}},

includedPlugins:{
type:'array',
items:{type:'string'}}}}}};exports.schemaPlatforms=schemaPlatforms;







var schemaRoot={
$id:'http://renative.org/schemas/renative.json',
type:'object',
additionalProperties:false,
properties:{
common:{
additionalProperties:false,
description:'Common config props used as default',
type:'object',
properties:{
id:{
type:'string'},

title:{
type:'string'},

description:{
type:'string'},

excludedPlugins:{
type:'array',
items:{type:'string'}},

includedPlugins:{
type:'array',
items:{type:'string'}},

buildSchemes:{
additionalProperties:true,
type:'object'}}},



platforms:{
additionalProperties:false,
type:'object',
properties:{
ios:{
$ref:'platforms.json#/definitions/ios'},

android:{
$ref:'platforms.json#/definitions/android'},

web:{
$ref:'platforms.json#/definitions/web'},

tvos:{
$ref:'platforms.json#/definitions/ios'},

androidtv:{
$ref:'platforms.json#/definitions/android'},

webos:{
$ref:'platforms.json#/definitions/webos'},

macos:{
$ref:'platforms.json#/definitions/macos'},

tizen:{
$ref:'platforms.json#/definitions/tizen'},

windows:{
$ref:'platforms.json#/definitions/macos'},

firefoxtv:{
$ref:'platforms.json#/definitions/firefox'},

firefoxos:{
$ref:'platforms.json#/definitions/firefox'},

tizenmobile:{
$ref:'platforms.json#/definitions/tizen'},

tizenwatch:{
$ref:'platforms.json#/definitions/tizen'},

androidwear:{
$ref:'platforms.json#/definitions/android'},

kaios:{
$ref:'platforms.json#/definitions/firefox'}}},



sdks:{
additionalProperties:true,
type:'object'},

env:{
additionalProperties:true,
type:'object'},

defaultTargets:{
additionalProperties:true,
type:'object'},

plugins:{
additionalProperties:true,
type:'object'},

projectName:{
type:'string'},

name:{
type:'string'},

extend:{
type:'string'},

projectTemplates:{
additionalProperties:true,
type:'object'},

permissions:{
additionalProperties:true,
type:'object'},

workspaceID:{
type:'string'},

version:{
type:'string'},

description:{
type:'string'},

id:{
type:'string'},

isWrapper:{
type:'boolean'},

enableAnalytics:{
type:'boolean'},

paths:{
additionalProperties:false,
type:'object',
properties:{
appConfigsDir:{
type:'string'},

entryDir:{
type:'string'},

platformAssetsDir:{
type:'string'},

platformBuildsDir:{
type:'string'},

projectConfigDir:{
type:'string'},

pluginTemplates:{
additionalProperties:true,
type:'object'}}},



tasks:{
additionalProperties:true,
type:'object'},

pipes:{
type:'array'},

defaults:{
additionalProperties:true,
type:'object'},

pluginTemplates:{
additionalProperties:true,
type:'object'},

templates:{
additionalProperties:true,
type:'object'},

currentTemplate:{
type:'string'},

crypto:{
additionalProperties:true,
type:'object'},

integrations:{
additionalProperties:true,
type:'object'},

publish:{
additionalProperties:true,
type:'object'},

runtime:{
additionalProperties:true,
type:'object'},

hidden:{
type:'boolean'}}};exports.schemaRoot=schemaRoot;




var SCHEMAS=[schemaRoot,schemaPlatforms,schemaCommon];exports.SCHEMAS=SCHEMAS;
//# sourceMappingURL=schema.js.map