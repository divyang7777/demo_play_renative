{"version":3,"sources":["../../../src/engine-core/tasks/task.rnv.workspace.list.js"],"names":["taskRnvWorkspaceList","c","parentTask","originTask","TASK_PROJECT_CONFIGURE","TASK_WORKSPACE_LIST","opts","files","rnv","configWorkspaces","workspaces","i","obj","mapping","defaultVal","isConnected","grey","bold","asString","description","fn","task","params","PARAMS","withBase","platforms","isGlobalScope"],"mappings":"+QAAA;AACA;;;;;AAKA;AACA;;AAEO,GAAMA,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAOC,CAAP,CAAUC,UAAV,CAAsBC,UAAtB;AAChC,oBAAQ,sBAAR,EADgC;;AAG1B,+BAAYF,CAAZ,CAAeG,iCAAf,CAAuCC,8BAAvC,CAA4DF,UAA5D,CAH0B;;AAK1BG,IAL0B,CAKnB;AACTL,CAAC,CAACM,KAAF,CAAQC,GAAR,CAAYC,gBADH,eACT,sBAA8BC,UADrB;AAET,IAFS;AAGT,IAHS;AAIT,SAACC,CAAD,CAAIC,GAAJ,CAASC,OAAT,CAAkBC,UAAlB,CAAiC;AAC7B,GAAMC,CAAAA,WAAW,CAAG,EAApB;AACA,WAAY,oBAAQC,IAAR,CAAaL,CAAC,CAAG,CAAjB,CAAZ,OAAqC,oBAAQM,IAAR;AACjCH,UADiC,CAArC;AAEIC,WAFJ;AAGH,CATQ,CALmB;;;AAiBhC,2CAA+BT,IAAI,CAACY,QAApC,EAjBgC,qEAA7B,C;;;AAoBQ;AACXC,WAAW,CAAE,uCADF;AAEXC,EAAE,CAAEpB,oBAFO;AAGXqB,IAAI,CAAEhB,8BAHK;AAIXiB,MAAM,CAAEC,kBAAOC,QAAP,EAJG;AAKXC,SAAS,CAAE,EALA;AAMXC,aAAa,CAAE,IANJ,C","sourcesContent":["import { generateOptions } from '../../cli/prompt';\nimport {\n    chalk,\n    logTask,\n    logToSummary,\n} from '../../core/systemManager/logger';\nimport { executeTask } from '../../core/engineManager';\nimport { TASK_WORKSPACE_LIST, TASK_PROJECT_CONFIGURE, PARAMS } from '../../core/constants';\n\nexport const taskRnvWorkspaceList = async (c, parentTask, originTask) => {\n    logTask('taskRnvWorkspaceList');\n\n    await executeTask(c, TASK_PROJECT_CONFIGURE, TASK_WORKSPACE_LIST, originTask);\n\n    const opts = generateOptions(\n        c.files.rnv.configWorkspaces?.workspaces,\n        true,\n        null,\n        (i, obj, mapping, defaultVal) => {\n            const isConnected = '';\n            return ` [${chalk().grey(i + 1)}]> ${chalk().bold(\n                defaultVal\n            )}${isConnected} \\n`;\n        }\n    );\n\n    logToSummary(`Workspaces:\\n\\n${opts.asString}`);\n};\n\nexport default {\n    description: 'Show list of all available workspaces',\n    fn: taskRnvWorkspaceList,\n    task: TASK_WORKSPACE_LIST,\n    params: PARAMS.withBase(),\n    platforms: [],\n    isGlobalScope: true\n};\n"],"file":"task.rnv.workspace.list.js"}