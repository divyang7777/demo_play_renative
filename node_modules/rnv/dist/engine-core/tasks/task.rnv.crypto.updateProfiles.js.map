{"version":3,"sources":["../../../src/engine-core/tasks/task.rnv.crypto.updateProfiles.js"],"names":["_updateProfile","c","v","Promise","resolve","reject","grey","then","catch","e","_updateProfiles","acList","reduce","previousPromise","taskRnvCryptoUpdateProfiles","parentTask","originTask","TASK_PROJECT_CONFIGURE","TASK_CRYPTO_UPDATE_PROFILES","platform","IOS","TVOS","description","fn","task","params","PARAMS","withBase","platforms","skipPlatforms"],"mappings":"sRAAA;AACA;AACA;AACA;AACA;;;AAGA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAIC,CAAJ,QAAU,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB;AAC9D,sCAA0BH,CAA1B,CAA+B,oBAAQI,IAAvC;AACA,4BAAcL,CAAd,CAAiBC,CAAjB;AACKK,IADL,CACU,iBAAMH,CAAAA,OAAO,EAAb,EADV;AAEKI,KAFL,CAEW,SAAAC,CAAC,QAAIJ,CAAAA,MAAM,CAACI,CAAD,CAAV,EAFZ;AAGH,CALgC,CAAV,EAAvB;;AAOA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACT,CAAD,CAAO;AAC3B,oBAAQ,iBAAR,CAA2B,oBAAQK,IAAnC;AACA,GAAMK,CAAAA,MAAM,CAAG,4CAA0BV,CAA1B,CAA6B,IAA7B,CAAf;;AAEA,MAAOU,CAAAA,MAAM,CAACC,MAAP;AACH,SAACC,eAAD,CAAkBX,CAAlB,QAAwBW,CAAAA,eAAe,CAACN,IAAhB,CAAqB,iBAAMP,CAAAA,cAAc,CAACC,CAAD,CAAIC,CAAJ,CAApB,EAArB,CAAxB,EADG;AAEHC,OAAO,CAACC,OAAR,EAFG,CAAP;;AAIH,CARD;;AAUO,GAAMU,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,CAAOb,CAAP,CAAUc,UAAV,CAAsBC,UAAtB;AACvC,oBAAQ,6BAAR,EADuC;;AAGjC,+BAAYf,CAAZ,CAAegB,iCAAf,CAAuCC,sCAAvC,CAAoEF,UAApE,CAHiC;;AAK/Bf,CAAC,CAACkB,QAL6B;AAM9BC,cAN8B;AAO9BC,eAP8B;AAQzBX,eAAe,CAACT,CAAD,CARU;;;AAWxB,IAXwB;;AAahCE,OAAO,CAACE,MAAR;AACyBJ,CAAC,CAACkB,QAD3B,kBAbgC,wEAApC,C;;;;AAkBQ;AACXG,WAAW,CAAE,EADF;AAEXC,EAAE,CAAET,2BAFO;AAGXU,IAAI,CAAEN,sCAHK;AAIXO,MAAM,CAAEC,kBAAOC,QAAP,EAJG;AAKXC,SAAS,CAAE,EALA;AAMXC,aAAa,CAAE,IANJ,C","sourcesContent":["import { chalk, logTask } from '../../core/systemManager/logger';\nimport { listAppConfigsFoldersSync } from '../../core/configManager/configParser';\nimport { IOS, TVOS, TASK_CRYPTO_UPDATE_PROFILES, TASK_PROJECT_CONFIGURE, PARAMS } from '../../core/constants';\nimport { updateProfile } from '../../sdk-xcode/fastlane';\nimport { executeTask } from '../../core/engineManager';\n\n\nconst _updateProfile = (c, v) => new Promise((resolve, reject) => {\n    logTask(`_updateProfile:${v}`, chalk().grey);\n    updateProfile(c, v)\n        .then(() => resolve())\n        .catch(e => reject(e));\n});\n\nconst _updateProfiles = (c) => {\n    logTask('_updateProfiles', chalk().grey);\n    const acList = listAppConfigsFoldersSync(c, true);\n\n    return acList.reduce(\n        (previousPromise, v) => previousPromise.then(() => _updateProfile(c, v)),\n        Promise.resolve()\n    );\n};\n\nexport const taskRnvCryptoUpdateProfiles = async (c, parentTask, originTask) => {\n    logTask('taskRnvCryptoUpdateProfiles');\n\n    await executeTask(c, TASK_PROJECT_CONFIGURE, TASK_CRYPTO_UPDATE_PROFILES, originTask);\n\n    switch (c.platform) {\n        case IOS:\n        case TVOS:\n            await _updateProfiles(c);\n            break;\n        default:\n            return true;\n    }\n    return Promise.reject(\n        `updateProfiles: Platform ${c.platform} not supported`\n    );\n};\n\nexport default {\n    description: '',\n    fn: taskRnvCryptoUpdateProfiles,\n    task: TASK_CRYPTO_UPDATE_PROFILES,\n    params: PARAMS.withBase(),\n    platforms: [],\n    skipPlatforms: true,\n};\n"],"file":"task.rnv.crypto.updateProfiles.js"}