var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.taskRnvPlatformConfigure=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _logger=require("../../core/systemManager/logger");
var _fileutils=require("../../core/systemManager/fileutils");
var _common=require("../../core/common");
var _schemeParser=require("../../core/configManager/schemeParser");
var _platformManager=require("../../core/platformManager");
var _packageParser=require("../../core/configManager/packageParser");
var _configParser=require("../../core/configManager/configParser");
var _engineManager=require("../../core/engineManager");
var _constants=require("../../core/constants");

var _sdkManager=require("../../core/sdkManager");

var taskRnvPlatformConfigure=function taskRnvPlatformConfigure(c,parentTask,originTask){var hasBuild;return _regenerator.default.async(function taskRnvPlatformConfigure$(_context){while(1){switch(_context.prev=_context.next){case 0:
(0,_logger.logTask)('taskRnvPlatformConfigure','');_context.next=3;return _regenerator.default.awrap(

(0,_engineManager.executeTask)(c,_constants.TASK_PROJECT_CONFIGURE,_constants.TASK_PLATFORM_CONFIGURE,originTask));case 3:_context.next=5;return _regenerator.default.awrap(

(0,_platformManager.isPlatformSupported)(c));case 5:_context.next=7;return _regenerator.default.awrap(
(0,_schemeParser.isBuildSchemeSupported)(c));case 7:_context.next=9;return _regenerator.default.awrap(
(0,_sdkManager.checkSdk)(c));case 9:_context.next=11;return _regenerator.default.awrap(
(0,_configParser.configureRuntimeDefaults)(c));case 11:if(!(

c.program.only&&!!parentTask)){_context.next=13;break;}return _context.abrupt("return",true);case 13:_context.next=15;return _regenerator.default.awrap(

(0,_engineManager.executeTask)(c,_constants.TASK_INSTALL,_constants.TASK_PLATFORM_CONFIGURE,originTask));case 15:

hasBuild=(0,_fileutils.fsExistsSync)(c.paths.project.builds.dir);
(0,_logger.logTask)('',"taskRnvPlatformConfigure hasBuildFolderPresent:"+hasBuild);if(!(

(c.program.reset||c.program.resetHard)&&!c.runtime.disableReset)){_context.next=21;break;}
(0,_logger.logInfo)("You passed "+
(0,_logger.chalk)().white(c.program.reset?'-r':'-R')+" argument. \""+(0,_logger.chalk)().white((0,_common.getAppFolder)(c,c.platform))+"\" CLEANING...DONE");_context.next=21;return _regenerator.default.awrap(

(0,_platformManager.cleanPlatformBuild)(c,c.platform));case 21:_context.next=23;return _regenerator.default.awrap(


(0,_platformManager.createPlatformBuild)(c,c.platform));case 23:_context.next=25;return _regenerator.default.awrap(
(0,_packageParser.injectPlatformDependencies)(c));case 25:return _context.abrupt("return",

true);case 26:case"end":return _context.stop();}}},null,null,null,Promise);};exports.taskRnvPlatformConfigure=taskRnvPlatformConfigure;var _default=


{
description:'',
fn:taskRnvPlatformConfigure,
task:'platform configure',
params:_constants.PARAMS.withBase(),
platforms:[]};exports.default=_default;
//# sourceMappingURL=task.rnv.platform.configure.js.map