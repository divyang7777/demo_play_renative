{"version":3,"sources":["../../../src/engine-core/tasks/task.rnv.workspace.add.js"],"names":["taskRnvWorkspaceAdd","c","parentTask","originTask","TASK_PROJECT_CONFIGURE","TASK_WORKSPACE_ADD","name","type","message","validate","i","workspace","workspacePath","path","join","confirm","workspaceID","split","pop","replace","workspaceIDInput","description","fn","task","params","PARAMS","withBase","platforms","isGlobalScope"],"mappings":"8QAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,GAAMA,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAOC,CAAP,CAAUC,UAAV,CAAsBC,UAAtB;AAC/B,oBAAQ,qBAAR,EAD+B;;AAGzB,+BAAYF,CAAZ,CAAeG,iCAAf,CAAuCC,6BAAvC,CAA2DF,UAA3D,CAHyB;;AAKH,2BAAe;AACvCG,IAAI,CAAE,WADiC;AAEvCC,IAAI,CAAE,OAFiC;AAGvCC,OAAO,CAAE,gCAH8B;AAIvCC,QAAQ,CAAE,kBAAAC,CAAC,QAAI,CAAC,CAACA,CAAF,EAAO,kBAAX,EAJ4B,CAAf,CALG,6CAKvBC,SALuB,uBAKvBA,SALuB;;;AAYzBC,aAZyB,CAYTC,cAAKC,IAAL,CAAUH,SAAV,CAZS;;AAc3B,4BAAaC,aAAb,CAd2B;AAeD,2BAAe;AACrCN,IAAI,CAAE,SAD+B;AAErCC,IAAI,CAAE,SAF+B;AAGrCC,OAAO,WAAYI,aAAZ,wDAH8B,CAAf,CAfC,+CAenBG,OAfmB,wBAenBA,OAfmB;;AAoBtBA,OApBsB;;;AAuB3BC,WAvB2B,CAuBbJ,aAAa;AAC1BK,KADa,CACP,GADO;AAEbC,GAFa;AAGbC,OAHa,CAGL,OAHK,CAGI,EAHJ,CAvBa;;AA4BI,2BAAe;AAC9Cb,IAAI,CAAE,kBADwC;AAE9CC,IAAI,CAAE,OAFwC;AAG9CC,OAAO,yBAA0BQ,WAA1B,IAHuC,CAAf,CA5BJ,+CA4BvBI,gBA5BuB,wBA4BvBA,gBA5BuB;;;AAkC/BJ,WAAW,CAAGI,gBAAgB,EAAIJ,WAAlC;AACA,+BAAgBf,CAAhB,CAAmBe,WAAnB,CAAgCJ,aAAhC,EAnC+B,sEAA5B,C;;;AAsCQ;AACXS,WAAW,CAAE,mBADF;AAEXC,EAAE,CAAEtB,mBAFO;AAGXuB,IAAI,CAAElB,6BAHK;AAIXmB,MAAM,CAAEC,kBAAOC,QAAP,EAJG;AAKXC,SAAS,CAAE,EALA;AAMXC,aAAa,CAAE,IANJ,C","sourcesContent":["import path from 'path';\nimport { inquirerPrompt } from '../../cli/prompt';\nimport { logTask } from '../../core/systemManager/logger';\nimport { createWorkspace } from '../../core/projectManager/workspace';\nimport { fsExistsSync } from '../../core/systemManager/fileutils';\nimport { executeTask } from '../../core/engineManager';\nimport { TASK_WORKSPACE_ADD, TASK_PROJECT_CONFIGURE, PARAMS } from '../../core/constants';\n\nexport const taskRnvWorkspaceAdd = async (c, parentTask, originTask) => {\n    logTask('taskRnvWorkspaceAdd');\n\n    await executeTask(c, TASK_PROJECT_CONFIGURE, TASK_WORKSPACE_ADD, originTask);\n\n    const { workspace } = await inquirerPrompt({\n        name: 'workspace',\n        type: 'input',\n        message: 'absolute path to new workspace',\n        validate: i => !!i || 'No path provided'\n    });\n\n    const workspacePath = path.join(workspace);\n\n    if (fsExistsSync(workspacePath)) {\n        const { confirm } = await inquirerPrompt({\n            name: 'confirm',\n            type: 'confirm',\n            message: `Folder ${workspacePath} already exists are you sure you want to override it?`\n        });\n        if (!confirm) return;\n    }\n\n    let workspaceID = workspacePath\n        .split('/')\n        .pop()\n        .replace(/@|\\./g, '');\n\n    const { workspaceIDInput } = await inquirerPrompt({\n        name: 'workspaceIDInput',\n        type: 'input',\n        message: `ID of the workspace (${workspaceID})`\n    });\n\n    workspaceID = workspaceIDInput || workspaceID;\n    createWorkspace(c, workspaceID, workspacePath);\n};\n\nexport default {\n    description: 'Add new workspace',\n    fn: taskRnvWorkspaceAdd,\n    task: TASK_WORKSPACE_ADD,\n    params: PARAMS.withBase(),\n    platforms: [],\n    isGlobalScope: true\n};\n"],"file":"task.rnv.workspace.add.js"}