Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.taskRnvHelp=void 0;var _logger=require("../../core/systemManager/logger");
var _constants=require("../../core/constants");
var _engineManager=require("../../core/engineManager");

var taskRnvHelp=function taskRnvHelp(c){
(0,_logger.logTask)('taskRnvHelp');


var optsString='';

_constants.PARAMS.withAll().forEach(function(param){
var cmd='';
if(param.shortcut){
cmd+="-"+param.shortcut+", ";
}
cmd+="--"+param.key;
if(param.value){
if(param.isRequired){
cmd+=" <"+param.value+">";
}else{
cmd+=" ["+param.value+"]";
}
}
optsString+=(0,_logger.chalk)().grey(cmd+", "+param.description+"\n");
});


var cmdsString='';
var tasksObj={};
var engines=(0,_engineManager.getRegisteredEngines)(c);

engines.forEach(function(engine){
var tasks=engine.getTasks();
tasks.forEach(function(t){
tasksObj[t.task]=true;
});
});
cmdsString=Object.keys(tasksObj).join(', ');


(0,_logger.logToSummary)("\n"+
(0,_logger.chalk)().bold.white('COMMANDS:')+"\n\n"+

cmdsString+"\n\n"+

(0,_logger.chalk)().bold.white('OPTIONS:')+"\n\n"+

optsString+"\n");

};exports.taskRnvHelp=taskRnvHelp;var _default=

{
description:'Display generic help',
fn:taskRnvHelp,
task:'help',
params:_constants.PARAMS.withBase(),
platforms:[],
isGlobalScope:true};exports.default=_default;
//# sourceMappingURL=task.rnv.help.js.map