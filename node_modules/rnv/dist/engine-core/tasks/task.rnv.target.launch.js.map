{"version":3,"sources":["../../../src/engine-core/tasks/task.rnv.target.launch.js"],"names":["taskRnvTargetLaunch","c","parentTask","originTask","TASK_WORKSPACE_CONFIGURE","TASK_TARGET_LAUNCH","platform","program","target","files","workspace","config","defaultTargets","ANDROID","ANDROID_TV","ANDROID_WEAR","IOS","TVOS","TIZEN","WEBOS","KAIOS","Promise","reject","white","bold","description","fn","task","params","PARAMS","withBase","platforms","isGlobalScope"],"mappings":"8QAAA;AACA;AACA;;;;;;;;;;;;AAYA;AACA;AACA;;;AAGA;AACA;AACA;;AAEO,GAAMA,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAOC,CAAP,CAAUC,UAAV,CAAsBC,UAAtB;AAC/B,oBAAQ,qBAAR,EAD+B;;AAGzB,yCAAoBF,CAApB,CAHyB;AAIzB,+BAAYA,CAAZ,CAAeG,mCAAf,CAAyCC,6BAAzC,CAA6DF,UAA7D,CAJyB;;AAMvBG,QANuB,CAMDL,CANC,CAMvBK,QANuB,CAMbC,OANa,CAMDN,CANC,CAMbM,OANa;AAOzBC,MAPyB,CAOhBD,OAAO,CAACC,MAAR,EAAkBP,CAAC,CAACQ,KAAF,CAAQC,SAAR,CAAkBC,MAAlB,CAAyBC,cAAzB,CAAwCN,QAAxC,CAPF;;AASvBA,QATuB;AAUtBO,kBAVsB;AAWtBC,qBAXsB;AAYtBC,uBAZsB;;AActBC,cAdsB;AAetBC,eAfsB;;AAiBtBC,gBAjBsB;;AAmBtBC,gBAnBsB;;AAqBtBC,gBArBsB,qDAahB,0CAAuBnB,CAAvB,CAA0BO,MAA1B,CAbgB,0CAgBhB,yCAAqBP,CAArB,CAAwBO,MAAxB,CAhBgB,0CAkBhB,mCAAqBP,CAArB,CAAwBO,MAAxB,CAlBgB,0CAoBhB,kCAAoBP,CAApB,CAAuBO,MAAvB,CApBgB;AAsBhB,qCAAqBP,CAArB,CAAwBO,MAAxB,CAtBgB;;AAwBhBa,OAAO,CAACC,MAAR;AACyC,oBAAQC,KAAR,CAAcC,IAAd;AACxClB,QADwC,CADzC,gFAxBgB,wEAA5B,C;;;;;;AAgCQ;AACXmB,WAAW,CAAE,0BADF;AAEXC,EAAE,CAAE1B,mBAFO;AAGX2B,IAAI,CAAE,eAHK;AAIXC,MAAM,CAAEC,kBAAOC,QAAP,EAJG;AAKXC,SAAS,CAAE,EALA;AAMXC,aAAa,CAAE,IANJ,C","sourcesContent":["import { isPlatformSupported } from '../../core/platformManager';\nimport { chalk, logTask } from '../../core/systemManager/logger';\nimport { IOS,\n    ANDROID,\n    TVOS,\n    TIZEN,\n    WEBOS,\n    ANDROID_TV,\n    ANDROID_WEAR,\n    KAIOS,\n    TASK_WORKSPACE_CONFIGURE,\n    TASK_TARGET_LAUNCH,\n    PARAMS } from '../../core/constants';\n\nimport { launchTizenSimulator } from '../../sdk-tizen';\nimport { launchWebOSimulator } from '../../sdk-webos';\nimport {\n    launchAndroidSimulator\n} from '../../sdk-android/deviceManager';\nimport { launchAppleSimulator } from '../../sdk-xcode/deviceManager';\nimport { launchKaiOSSimulator } from '../../sdk-firefox';\nimport { executeTask } from '../../core/engineManager';\n\nexport const taskRnvTargetLaunch = async (c, parentTask, originTask) => {\n    logTask('taskRnvTargetLaunch');\n\n    await isPlatformSupported(c);\n    await executeTask(c, TASK_WORKSPACE_CONFIGURE, TASK_TARGET_LAUNCH, originTask);\n\n    const { platform, program } = c;\n    const target = program.target || c.files.workspace.config.defaultTargets[platform];\n\n    switch (platform) {\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            return launchAndroidSimulator(c, target);\n        case IOS:\n        case TVOS:\n            return launchAppleSimulator(c, target);\n        case TIZEN:\n            return launchTizenSimulator(c, target);\n        case WEBOS:\n            return launchWebOSimulator(c, target);\n        case KAIOS:\n            return launchKaiOSSimulator(c, target);\n        default:\n            return Promise.reject(\n                `\"target launch\" command does not support ${chalk().white.bold(\n                    platform\n                )} platform yet. You will have to launch the emulator manually. Working on it!`\n            );\n    }\n};\n\nexport default {\n    description: 'Launch specific emulator',\n    fn: taskRnvTargetLaunch,\n    task: 'target launch',\n    params: PARAMS.withBase(),\n    platforms: [],\n    isGlobalScope: true\n};\n"],"file":"task.rnv.target.launch.js"}