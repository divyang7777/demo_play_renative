{"version":3,"sources":["../../../src/engine-core/tasks/task.rnv.clean.js"],"names":["taskRnvClean","c","skipQuestionParam","skipQuestion","program","ci","pathsToRemove","localFiles","immediateNodeModuleDir","path","join","paths","project","dir","pkgLock","push","yarnLock","packagesFolder","forEach","pth","pth2","pth3","pth4","pth5","buildDirs","builds","assets","local1","local2","local3","answers","modules","cache","nothingToClean","length","inquirer","prompt","name","type","message","red","confirm","confirmBuilds","confirmLocals","locals","confirmCache","Promise","resolve","description","fn","task","params","PARAMS","withBase","platforms","isGlobalScope"],"mappings":"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","sourcesContent":["import path from 'path';\nimport inquirer from 'inquirer';\n\nimport { removeDirs, fsExistsSync, fsReaddirSync } from '../../core/systemManager/fileutils';\nimport { chalk, logTask, logToSummary, logDebug } from '../../core/systemManager/logger';\nimport { executeAsync } from '../../core/systemManager/exec';\nimport { PARAMS } from '../../core/constants';\n\nexport const taskRnvClean = async (c, skipQuestionParam = false) => {\n    logTask('taskRnvClean');\n    const skipQuestion = c.program.ci ? true : skipQuestionParam;\n    const pathsToRemove = [];\n    const localFiles = [];\n    const immediateNodeModuleDir = path.join(\n        c.paths.project.dir,\n        'node_modules'\n    );\n\n\n    const pkgLock = path.join(c.paths.project.dir, 'package-lock.json');\n\n\n    if (fsExistsSync(immediateNodeModuleDir)) { pathsToRemove.push(immediateNodeModuleDir); }\n    if (fsExistsSync(pkgLock)) pathsToRemove.push(pkgLock);\n\n    const yarnLock = path.join(c.paths.project.dir, 'yarn.lock');\n    if (fsExistsSync(yarnLock)) {\n        pathsToRemove.push(yarnLock);\n    }\n\n    const packagesFolder = path.join(c.paths.project.dir, 'packages');\n    if (fsExistsSync(packagesFolder)) {\n        fsReaddirSync(packagesFolder).forEach((dir) => {\n            if (dir === '.DS_Store') {\n                const pth = path.join(packagesFolder, dir);\n\n                if (fsExistsSync(pth)) {\n                    pathsToRemove.push(pth);\n                }\n            } else {\n                const pth2 = path.join(packagesFolder, dir, 'node_modules');\n                if (fsExistsSync(pth2)) {\n                    pathsToRemove.push(pth2);\n                }\n\n                const pth3 = path.join(packagesFolder, dir, 'package-lock.json');\n                if (fsExistsSync(pth3)) {\n                    pathsToRemove.push(pth3);\n                }\n\n                const pth4 = path.join(packagesFolder, dir, 'yarn.lock');\n                if (fsExistsSync(pth4)) {\n                    pathsToRemove.push(pth4);\n                }\n\n                const pth5 = path.join(packagesFolder, dir, 'dist');\n                if (fsExistsSync(pth5)) {\n                    pathsToRemove.push(pth5);\n                }\n            }\n        });\n    }\n\n    const buildDirs = [];\n    if (fsExistsSync(c.paths.project.builds.dir)) { buildDirs.push(c.paths.project.builds.dir); }\n    if (fsExistsSync(c.paths.project.assets.dir)) { buildDirs.push(c.paths.project.assets.dir); }\n\n\n    const local1 = path.join(c.paths.project.dir, '.DS_Store');\n    if (fsExistsSync(local1)) localFiles.push(local1);\n    const local2 = path.join(c.paths.project.dir, 'renative.local.json');\n    if (fsExistsSync(local2)) localFiles.push(local2);\n    const local3 = path.join(c.paths.project.dir, 'metro.config.local.js');\n    if (fsExistsSync(local3)) localFiles.push(local3);\n\n    const answers = {\n        modules: false,\n        builds: false,\n        cache: false,\n        nothingToClean: !skipQuestion\n    };\n\n\n    if (pathsToRemove.length) {\n        if (!skipQuestion) {\n            const { confirm } = await inquirer.prompt({\n                name: 'confirm',\n                type: 'confirm',\n                message: `Do you want to remove node_module related files/folders? \\n${chalk().red(\n                    pathsToRemove.join('\\n')\n                )}`\n            });\n            answers.modules = confirm;\n            if (confirm) answers.nothingToClean = false;\n        } else {\n            answers.modules = true;\n        }\n    }\n\n    if (buildDirs.length) {\n        if (!skipQuestion) {\n            const { confirmBuilds } = await inquirer.prompt({\n                name: 'confirmBuilds',\n                type: 'confirm',\n                message: `Do you want to clean your platformBuilds and platformAssets? \\n${chalk().red(\n                    buildDirs.join('\\n')\n                )}`\n            });\n            answers.builds = confirmBuilds;\n            if (confirmBuilds) answers.nothingToClean = false;\n        } else {\n            answers.builds = true;\n        }\n    }\n\n    if (localFiles.length) {\n        if (!skipQuestion) {\n            const { confirmLocals } = await inquirer.prompt({\n                name: 'confirmLocals',\n                type: 'confirm',\n                message: `Do you want to clean local files? \\n${chalk().red(\n                    localFiles.join('\\n')\n                )}`\n            });\n            answers.locals = confirmLocals;\n            if (confirmLocals) answers.nothingToClean = false;\n        } else {\n            answers.locals = true;\n        }\n    }\n\n    if (!skipQuestion) {\n        const { confirmCache } = await inquirer.prompt({\n            name: 'confirmCache',\n            type: 'confirm',\n            message: 'Do you want to clean your npm/bundler cache?'\n        });\n        answers.cache = confirmCache;\n        if (confirmCache) answers.nothingToClean = false;\n    } else {\n        answers.cache = true;\n    }\n\n    if (answers.nothingToClean) {\n        logToSummary('Nothing to clean');\n        return Promise.resolve();\n    }\n\n    if (answers.modules) {\n        await removeDirs(pathsToRemove);\n    }\n    if (answers.builds) {\n        await removeDirs(buildDirs);\n    }\n    if (answers.locals) {\n        await removeDirs(localFiles);\n    }\n    if (answers.cache) {\n        try {\n            await executeAsync(c, 'watchman watch-del-all');\n        } catch (e) {\n            logDebug('watchman not installed. skipping');\n        }\n\n        await executeAsync(\n            c,\n            'rm -rf $TMPDIR/metro-* && rm -rf $TMPDIR/react-* && rm -rf $TMPDIR/haste-*'\n        );\n    }\n};\n\nexport default {\n    description: 'Automatically removes all node_modules and lock in your project and its dependencies',\n    fn: taskRnvClean,\n    task: 'clean',\n    params: PARAMS.withBase(),\n    platforms: [],\n    isGlobalScope: true\n};\n"],"file":"task.rnv.clean.js"}