{"version":3,"sources":["../../../src/engine-core/tasks/task.rnv.platform.setup.js"],"names":["taskRnvPlatformSetup","c","parentTask","originTask","TASK_PROJECT_CONFIGURE","TASK_PLATFORM_SETUP","currentPlatforms","files","project","config","defaults","supportedPlatforms","inquirer","prompt","name","type","pageSize","message","validate","val","length","default","choices","SUPPORTED_PLATFORMS","inputSupportedPlatforms","description","fn","task","params","PARAMS","withBase","platforms","skipPlatforms"],"mappings":"+QAAA;AACA;AACA;AACA;AACA;;;AAGO,GAAMA,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAOC,CAAP,CAAUC,UAAV,CAAsBC,UAAtB;AAChC,oBAAQ,sBAAR,EADgC;;AAG1B,+BAAYF,CAAZ,CAAeG,iCAAf,CAAuCC,8BAAvC,CAA4DF,UAA5D,CAH0B;;AAK1BG,gBAL0B,CAKP,wBAAAL,CAAC,CAACM,KAAF,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,QAAvB,qCAAiCC,kBAAjC,GAAuD,EALhD;;AAOUC,kBAASC,MAAT,CAAgB;AACtDC,IAAI,CAAE,yBADgD;AAEtDC,IAAI,CAAE,UAFgD;AAGtDC,QAAQ,CAAE,EAH4C;AAItDC,OAAO,CAAE,uCAJ6C;AAKtDC,QAAQ,CAAE,kBAAAC,GAAG,QAAI,CAAC,CAACA,GAAG,CAACC,MAAN,EAAgB,mCAApB,EALyC;AAMtDC,OAAO,CAAEf,gBAN6C;AAOtDgB,OAAO,CAAEC,8BAP6C,CAAhB,CAPV,6CAOxBC,uBAPwB,uBAOxBA,uBAPwB;;;AAiBhC,4CAAuBvB,CAAvB,CAA0BuB,uBAA1B,EAjBgC,qEAA7B,C;;;AAoBQ;AACXC,WAAW,CAAE,EADF;AAEXC,EAAE,CAAE1B,oBAFO;AAGX2B,IAAI,CAAEtB,8BAHK;AAIXuB,MAAM,CAAEC,kBAAOC,QAAP,EAJG;AAKXC,SAAS,CAAE,EALA;AAMXC,aAAa,CAAE,IANJ,C","sourcesContent":["import inquirer from 'inquirer';\nimport { SUPPORTED_PLATFORMS, TASK_PLATFORM_SETUP, TASK_PROJECT_CONFIGURE, PARAMS } from '../../core/constants';\nimport { updateProjectPlatforms } from '../../core/platformManager';\nimport { logTask } from '../../core/systemManager/logger';\nimport { executeTask } from '../../core/engineManager';\n\n\nexport const taskRnvPlatformSetup = async (c, parentTask, originTask) => {\n    logTask('taskRnvPlatformSetup');\n\n    await executeTask(c, TASK_PROJECT_CONFIGURE, TASK_PLATFORM_SETUP, originTask);\n\n    const currentPlatforms = c.files.project.config.defaults?.supportedPlatforms || [];\n\n    const { inputSupportedPlatforms } = await inquirer.prompt({\n        name: 'inputSupportedPlatforms',\n        type: 'checkbox',\n        pageSize: 20,\n        message: 'What platforms would you like to use?',\n        validate: val => !!val.length || 'Please select at least a platform',\n        default: currentPlatforms,\n        choices: SUPPORTED_PLATFORMS\n    });\n\n    updateProjectPlatforms(c, inputSupportedPlatforms);\n};\n\nexport default {\n    description: '',\n    fn: taskRnvPlatformSetup,\n    task: TASK_PLATFORM_SETUP,\n    params: PARAMS.withBase(),\n    platforms: [],\n    skipPlatforms: true,\n};\n"],"file":"task.rnv.platform.setup.js"}