{"version":3,"sources":["../../../src/engine-core/tasks/task.rnv.plugin.update.js"],"names":["taskRnvPluginUpdate","c","parentTask","originTask","TASK_PROJECT_CONFIGURE","TASK_PLUGIN_UPDATE","o","inquirer","prompt","name","type","message","confirm","plugins","buildConfig","Object","keys","forEach","key","files","project","config","json","paths","description","fn","task","params","PARAMS","withBase","platforms"],"mappings":"8QAAA;AACA;;;AAGA;;;;AAIA;AACA;AACA;;;AAGO,GAAMA,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAOC,CAAP,CAAUC,UAAV,CAAsBC,UAAtB;AAC/B,oBAAQ,qBAAR,EAD+B;;AAGzB,+BAAYF,CAAZ,CAAeG,iCAAf,CAAuCC,6BAAvC,CAA2DF,UAA3D,CAHyB;;AAKzBG,CALyB,CAKrB,iCAAcL,CAAd,CAAiB,IAAjB,CALqB;;;;AASLM,kBAASC,MAAT,CAAgB;AACtCC,IAAI,CAAE,SADgC;AAEtCC,IAAI,CAAE,SAFgC;AAGtCC,OAAO,CAAE,kDAH6B,CAAhB,CATK,6CASvBC,OATuB,uBASvBA,OATuB;;;AAe/B,GAAIA,OAAJ,CAAa;AACDC,OADC,CACWZ,CAAC,CAACa,WADb,CACDD,OADC;AAETE,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,OAArB,CAA6B,SAACC,GAAD,CAAS;;AAElCjB,CAAC,CAACkB,KAAF,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBR,OAAvB,CAA+BK,GAA/B,EAAsCZ,CAAC,CAACgB,IAAF,CAAOJ,GAAP,CAAtC;AACH,CAHD;;AAKA,6BAAcjB,CAAC,CAACsB,KAAF,CAAQH,OAAR,CAAgBC,MAA9B,CAAsCpB,CAAC,CAACkB,KAAF,CAAQC,OAAR,CAAgBC,MAAtD;;AAEA,uBAAW,+BAAX;AACH,CAzB8B,qEAA5B,C;;;AA4BQ;AACXG,WAAW,CAAE,0DADF;AAEXC,EAAE,CAAEzB,mBAFO;AAGX0B,IAAI,CAAE,eAHK;AAIXC,MAAM,CAAEC,kBAAOC,QAAP,EAJG;AAKXC,SAAS,CAAE,EALA,C","sourcesContent":["import inquirer from 'inquirer';\nimport {\n    writeFileSync\n} from '../../core/systemManager/fileutils';\nimport {\n    logSuccess,\n    logTask,\n} from '../../core/systemManager/logger';\nimport { getPluginList } from '../../core/pluginManager';\nimport { executeTask } from '../../core/engineManager';\nimport { TASK_PLUGIN_UPDATE, TASK_PROJECT_CONFIGURE, PARAMS } from '../../core/constants';\n\n\nexport const taskRnvPluginUpdate = async (c, parentTask, originTask) => {\n    logTask('taskRnvPluginUpdate');\n\n    await executeTask(c, TASK_PROJECT_CONFIGURE, TASK_PLUGIN_UPDATE, originTask);\n\n    const o = getPluginList(c, true);\n\n    // console.log(o.asString);\n\n    const { confirm } = await inquirer.prompt({\n        name: 'confirm',\n        type: 'confirm',\n        message: 'Above installed plugins will be updated with RNV'\n    });\n\n    if (confirm) {\n        const { plugins } = c.buildConfig;\n        Object.keys(plugins).forEach((key) => {\n            // c.buildConfig.plugins[key] = o.json[key];\n            c.files.project.config.plugins[key] = o.json[key];\n        });\n\n        writeFileSync(c.paths.project.config, c.files.project.config);\n\n        logSuccess('Plugins updated successfully!');\n    }\n};\n\nexport default {\n    description: 'Update specific plugin to latest supported version (rnv)',\n    fn: taskRnvPluginUpdate,\n    task: 'plugin update',\n    params: PARAMS.withBase(),\n    platforms: [],\n};\n"],"file":"task.rnv.plugin.update.js"}