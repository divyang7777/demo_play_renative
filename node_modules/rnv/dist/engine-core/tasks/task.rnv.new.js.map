{"version":3,"sources":["../../../src/engine-core/tasks/task.rnv.new.js"],"names":["highlight","green","_prepareProjectOverview","c","data","appTitle","inputAppTitle","defaultAppTitle","teamID","appID","inputAppID","replace","toLowerCase","version","inputVersion","defaultVersion","tempString","optionTemplates","selectedOption","selectedVersion","str","projectName","optionWorkspaces","gitEnabled","optionPlatforms","selectedOptions","gray","confirmString","taskRnvNew","args","program","paths","project","config","inquirer","prompt","name","type","message","confirmInRnvProject","Promise","reject","nodeModulesDir","confirmDeleteNodeModules","defaultTemplate","defaultProjectName","defaultWorkspace","SUPPORTED_PLATFORMS","inputProjectName","validate","value","inputProjectNameObj","dir","path","join","CURRENT_DIR","confirm","default","val","id","match","v","semver","valid","coerce","choices","keysAsArray","inputWorkspace","runtime","selectedWorkspace","customTemplate","push","inputTemplate","inputTemplateCustom","selectedInputTemplate","Object","keys","files","rnv","projectTemplates","inputTemplateVersion","cwd","includes","white","confirmAddTemplate","workspace","renativeTemplateConfig","supportedPlatforms","defaults","pageSize","length","inputSupportedPlatforms","renativeTemplateConfigExt","bootstrapQuestions","templateConfig","inquirerQuestions","inquirerObj","forEach","q","i","choicesObj","options","opt","title","results","k","objConfig","objResult","objValue","targetKey","configProp","key","Analytics","captureEvent","template","platforms","package","RENATIVE_CONFIG_NAME","packageName","templates","grey","workspaceID","appConfigsDir","entryDir","platformAssetsDir","platformBuildsDir","currentTemplate","isNew","isMonorepo","description","fn","task","params","PARAMS","withBase","isGlobalScope"],"mappings":"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","sourcesContent":["import path from 'path';\nimport inquirer from 'inquirer';\nimport semver from 'semver';\nimport lSet from 'lodash.set';\nimport { generateOptions } from '../../cli/prompt';\nimport { RENATIVE_CONFIG_NAME, SUPPORTED_PLATFORMS, CURRENT_DIR, PARAMS } from '../../core/constants';\nimport { getTemplateOptions } from '../../core/templateManager';\nimport { mkdirSync, writeFileSync, cleanFolder, fsExistsSync, writeObjectSync, readObjectSync, removeDirs } from '../../core/systemManager/fileutils';\nimport { executeAsync } from '../../core/systemManager/exec';\nimport {\n    chalk,\n    printIntoBox,\n    printBoxStart,\n    printBoxEnd,\n    printArrIntoBox,\n    logTask,\n    logSuccess,\n    logInfo,\n    logDebug,\n    logWarning\n} from '../../core/systemManager/logger';\nimport { getWorkspaceOptions } from '../../core/projectManager/workspace';\nimport { parseRenativeConfigs } from '../../core/configManager/configParser';\nimport { listAndSelectNpmVersion } from '../../core/systemManager/npmUtils';\nimport { configureGit } from '../../core/systemManager/gitUtils';\nimport Analytics from '../../core/systemManager/analytics';\n\nconst highlight = chalk().green;\n\nconst _prepareProjectOverview = (c, data) => {\n    data.appTitle = data.inputAppTitle || data.defaultAppTitle;\n    data.teamID = '';\n    data.appID = data.inputAppID\n        ? data.inputAppID.replace(/\\s+/g, '-').toLowerCase()\n        : data.appID;\n    data.version = data.inputVersion || data.defaultVersion;\n    const tempString = `${data.optionTemplates.selectedOption}@${data.optionTemplates.selectedVersion}`;\n\n    let str = printBoxStart('🚀  ReNative Project Generator');\n    str += printIntoBox('');\n    str += printIntoBox(\n        `Project Name (folder): ${highlight(data.projectName)}`,\n        1\n    );\n    str += printIntoBox(\n        `Workspace: ${highlight(data.optionWorkspaces.selectedOption)}`,\n        1\n    );\n    str += printIntoBox(`Project Title: ${highlight(data.appTitle)}`, 1);\n    str += printIntoBox(`Project Version: ${highlight(data.version)}`, 1);\n    str += printIntoBox(`App ID: ${highlight(data.appID)}`, 1);\n    str += printIntoBox(`Project Template: ${highlight(tempString)}`, 1);\n    str += printIntoBox(`Git Enabled: ${highlight(data.gitEnabled)}`, 1);\n    str += printIntoBox('');\n    str += printIntoBox('Project Platforms:');\n    str += printArrIntoBox(data.optionPlatforms.selectedOptions);\n    str += printIntoBox('');\n    str += printIntoBox('Project Structure:');\n    str += printIntoBox('');\n    str += printIntoBox(data.projectName);\n    str += chalk().gray(`│   ├── appConfigs            # Application flavour configuration files/assets │\n│   │   └── [APP_ID]          # Example application flavour                    │\n│   │       ├── assets        # Platform assets injected to ./platformAssets   │\n│   │       ├── builds        # Platform files injected to ./platformBuilds    │\n│   │       ├── fonts             # Folder for all custom fonts                │\n│   │       ├── plugins           # Multi-platform plugins injections          │\n│   │       └── renative.json # Application flavour config                     │\n│   ├── platformAssets        # Generated cross-platform assets                │\n│   ├── platformBuilds        # Generated platform app projects                │\n│   ├── src                   # Source code files                              │\n│   ├── index.*.js            # Entry files                                    │\n│   └── renative.json         # ReNative project configuration                 │\n`);\n    str += printIntoBox('');\n    str += printBoxEnd();\n    str += '\\n';\n\n    data.confirmString = str;\n};\n\n\nexport const taskRnvNew = async (c) => {\n    logTask('taskRnvNew');\n    const { args } = c.program;\n\n    if (fsExistsSync(c.paths.project.config)) {\n        logWarning(`You are in ReNative project. Found: ${c.paths.project.config}`);\n        const { confirmInRnvProject } = await inquirer.prompt({\n            name: 'confirmInRnvProject',\n            type: 'confirm',\n            message: 'Are you sure you want to continue?'\n        });\n        if (!confirmInRnvProject) {\n            return Promise.reject('Cancelled');\n        }\n    }\n\n    if (fsExistsSync(c.paths.project.nodeModulesDir)) {\n        logWarning(`Found node_modules directory at your location. If you continue it will be deleted: ${\n            c.paths.project.nodeModulesDir}`);\n        const { confirmDeleteNodeModules } = await inquirer.prompt({\n            name: 'confirmDeleteNodeModules',\n            type: 'confirm',\n            message: 'Are you sure you want to continue?'\n        });\n        if (confirmDeleteNodeModules) {\n            await removeDirs([c.paths.project.nodeModulesDir]);\n        }\n    }\n\n\n    let data = {\n        defaultVersion: '0.1.0',\n        defaultTemplate: 'renative-template-hello-world',\n        defaultProjectName: 'helloRenative',\n        defaultAppTitle: 'Hello Renative',\n        defaultWorkspace: 'rnv'\n    };\n    data.optionPlatforms = generateOptions(SUPPORTED_PLATFORMS, true);\n    data.optionTemplates = {};\n    data.optionWorkspaces = getWorkspaceOptions(c);\n\n    // ==================================================\n    // INPUT: Project Name\n    // ==================================================\n\n    let inputProjectName;\n\n    if (args[1] && args[1] !== '') {\n        inputProjectName = args[1];\n    } else {\n        const inputProjectNameObj = await inquirer.prompt({\n            name: 'inputProjectName',\n            type: 'input',\n            validate: value => !!value,\n            message:\n                \"What's your project Name? (no spaces, folder based on ID will be created in this directory)\"\n        });\n        inputProjectName = inputProjectNameObj?.inputProjectName;\n    }\n\n    data.projectName = inputProjectName;\n    c.paths.project.dir = path.join(\n        CURRENT_DIR,\n        data.projectName.replace(/(\\s+)/g, '_')\n    );\n    if (fsExistsSync(c.paths.project.dir)) {\n        const { confirm } = await inquirer.prompt({\n            type: 'confirm',\n            name: 'confirm',\n            message: `Folder ${c.paths.project.dir} already exists. RNV will override it. Continue?`\n        });\n\n        if (!confirm) {\n            return Promise.reject('Cancelled by user');\n        }\n        await cleanFolder(c.paths.project.dir);\n    }\n\n    mkdirSync(c.paths.project.dir);\n\n    // ==================================================\n    // INPUT: Project Title, ID, Version\n    // ==================================================\n    const {\n        inputAppTitle,\n        inputAppID,\n        inputVersion\n    } = await inquirer.prompt([\n        {\n            name: 'inputAppTitle',\n            type: 'input',\n            default: data.defaultAppTitle,\n            validate: val => !!val || 'Please enter a title',\n            message: \"What's your project Title?\"\n        },\n        {\n            name: 'inputAppID',\n            type: 'input',\n            default: () => {\n                data.appID = `com.mycompany.${inputProjectName\n                    .replace(/\\s+/g, '')\n                    .toLowerCase()}`;\n                return data.appID;\n            },\n            validate: id => !!id.match(/[a-z]+\\.[a-z0-9]+\\.[a-z0-9]+/)\n                || 'Please enter a valid appID (com.test.app)',\n            message: \"What's your App ID?\"\n        },\n        {\n            name: 'inputVersion',\n            type: 'input',\n            default: data.defaultVersion,\n            validate: v => !!semver.valid(semver.coerce(v))\n                || 'Please enter a valid semver version (1.0.0, 42.6.7.9.3-alpha, etc.)',\n            message: \"What's your Version?\"\n        }\n    ]);\n\n    // ==================================================\n    // INPUT: Workspace\n    // ==================================================\n    const {\n        inputWorkspace\n    } = await inquirer.prompt([\n        {\n            name: 'inputWorkspace',\n            type: 'list',\n            message: 'What workspace to use?',\n            default: data.defaultWorkspace,\n            choices: data.optionWorkspaces.keysAsArray\n        }\n    ]);\n    data.optionWorkspaces.selectedOption = inputWorkspace;\n\n    c.runtime.selectedWorkspace = inputWorkspace;\n    await parseRenativeConfigs(c);\n    data.optionTemplates = getTemplateOptions(c);\n\n    // ==================================================\n    // INPUT: Template\n    // ==================================================\n    const customTemplate = 'Custom Template ...';\n\n    data.optionTemplates.keysAsArray.push(customTemplate);\n\n    const { inputTemplate } = await inquirer.prompt({\n        name: 'inputTemplate',\n        type: 'list',\n        message: 'What template to use?',\n        default: data.defaultTemplate,\n        choices: data.optionTemplates.keysAsArray\n    });\n\n    let selectedInputTemplate;\n    if (inputTemplate === customTemplate) {\n        const { inputTemplateCustom } = await inquirer.prompt({\n            name: 'inputTemplateCustom',\n            type: 'input',\n            message: 'Type exact name of your template NPM package.',\n        });\n        selectedInputTemplate = inputTemplateCustom;\n    } else {\n        selectedInputTemplate = inputTemplate;\n    }\n\n    data.optionTemplates.selectedOption = selectedInputTemplate;\n\n\n    const inputTemplateVersion = await listAndSelectNpmVersion(c,\n        data.optionTemplates.selectedOption, Object.keys(c.files.rnv.projectTemplates.config.projectTemplates));\n\n    data.optionTemplates.selectedVersion = inputTemplateVersion;\n\n    await executeAsync(`npm i ${selectedInputTemplate}@${inputTemplateVersion} --no-save`, {\n        cwd: c.paths.project.dir\n    });\n\n    if (!data.optionTemplates.keysAsArray.includes(selectedInputTemplate)) {\n        const { confirmAddTemplate } = await inquirer.prompt({\n            name: 'confirmAddTemplate',\n            type: 'confirm',\n            message: `Would you like to add ${\n                chalk().white(selectedInputTemplate)} to your ${c.runtime.selectedWorkspace} workspace template list?`\n        });\n\n        if (confirmAddTemplate) {\n            if (!c.files.workspace.config?.projectTemplates) {\n                c.files.workspace.config.projectTemplates = {};\n            }\n            c.files.workspace.config.projectTemplates[selectedInputTemplate] = {};\n            writeObjectSync(c.paths.workspace.config, c.files.workspace.config);\n            await parseRenativeConfigs(c);\n\n            logInfo(`Updating ${c.paths.workspace.config}...DONE`);\n        }\n    }\n\n    const renativeTemplateConfig = readObjectSync(path.join(c.paths.project.dir, 'node_modules', selectedInputTemplate, 'renative.template.json'));\n\n    // ==================================================\n    // INPUT: Supported Platforms\n    // ==================================================\n\n    const supportedPlatforms = renativeTemplateConfig?.defaults?.supportedPlatforms || data.optionPlatforms.keysAsArray;\n\n    const { inputSupportedPlatforms } = await inquirer.prompt({\n        name: 'inputSupportedPlatforms',\n        type: 'checkbox',\n        pageSize: 20,\n        message: 'What platforms would you like to use?',\n        validate: val => !!val.length || 'Please select at least a platform',\n        default: supportedPlatforms,\n        choices: supportedPlatforms\n    });\n\n    // ==================================================\n    // INPUT: Custom Questions\n    // ==================================================\n    const renativeTemplateConfigExt = {};\n    const bootstrapQuestions = renativeTemplateConfig?.templateConfig?.bootstrapQuestions;\n\n    if (bootstrapQuestions?.length) {\n        const inquirerQuestions = [];\n        const inquirerObj = {};\n\n        bootstrapQuestions.forEach((q, i) => {\n            const choicesObj = {};\n            if (q.options) {\n                q.options.forEach((opt) => {\n                    choicesObj[opt.title] = opt;\n                });\n            }\n            inquirerObj[`q${i}`] = { ...q, choicesObj };\n            inquirerQuestions.push({\n                name: `q${i}`,\n                type: q.type,\n                message: q.title,\n                choices: Object.keys(choicesObj)\n            });\n        });\n\n\n        const results = await inquirer.prompt(inquirerQuestions);\n\n        Object.keys(results).forEach((k) => {\n            const objConfig = inquirerObj[k];\n            const objResult = results[k];\n            const objValue = objConfig.choicesObj[objResult];\n\n            const targetKey = objConfig?.configProp?.key;\n\n            if (targetKey) {\n                lSet(renativeTemplateConfigExt, targetKey, objValue);\n            }\n        });\n    }\n\n    // ==================================================\n    // INPUT: Git Enabled\n    // ==================================================\n\n    const { gitEnabled } = await inquirer.prompt({\n        name: 'gitEnabled',\n        type: 'confirm',\n        message: 'Do you want to set-up git in your new project?'\n    });\n\n    // ==================================================\n    // INPUT: Confirm Overview\n    // ==================================================\n\n    data = {\n        ...data,\n        inputProjectName,\n        inputAppTitle,\n        inputAppID,\n        inputVersion,\n        inputTemplate,\n        inputSupportedPlatforms,\n        inputWorkspace,\n        gitEnabled\n    };\n    data.optionPlatforms.selectedOptions = inputSupportedPlatforms;\n\n    _prepareProjectOverview(c, data);\n\n    const { confirm } = await inquirer.prompt({\n        type: 'confirm',\n        name: 'confirm',\n        message: `\\n${data.confirmString}\\nIs all this correct?`\n    });\n\n    if (!confirm) {\n        return;\n    }\n\n    // ==================================================\n    // Setup Project\n\n    try {\n        await Analytics.captureEvent({\n            type: 'newProject',\n            template: inputTemplate,\n            platforms: inputSupportedPlatforms\n        });\n    } catch (e) {\n        logDebug(e);\n    }\n\n    c.paths.project.package = path.join(c.paths.project.dir, 'package.json');\n    c.paths.project.config = path.join(\n        c.paths.project.dir,\n        RENATIVE_CONFIG_NAME\n    );\n\n    data.packageName = data.appTitle.replace(/\\s+/g, '-').toLowerCase();\n\n    const templates = {};\n\n    logTask(\n        `_generateProject:${data.optionTemplates.selectedOption}:${data.optionTemplates.selectedVersion}`,\n        chalk().grey\n    );\n\n    templates[data.optionTemplates.selectedOption] = {\n        version: data.optionTemplates.selectedVersion\n    };\n\n    const config = {\n        ...renativeTemplateConfig,\n        ...renativeTemplateConfigExt,\n        projectName: data.projectName,\n        workspaceID: data.optionWorkspaces.selectedOption,\n        paths: {\n            appConfigsDir: './appConfigs',\n            entryDir: './',\n            platformAssetsDir: './platformAssets',\n            platformBuildsDir: './platformBuilds',\n        },\n        defaults: {\n            title: data.appTitle,\n            id: data.appID,\n            supportedPlatforms: data.optionPlatforms.selectedOptions\n        },\n        templates,\n        currentTemplate: data.optionTemplates.selectedOption,\n        isNew: true,\n        isMonorepo: false\n    };\n    delete config.templateConfig;\n\n    writeFileSync(c.paths.project.config, config);\n\n    if (data.gitEnabled) {\n        await configureGit(c);\n    }\n\n    logSuccess(\n        `Your project is ready! navigate to project ${chalk().white(\n            `cd ${data.projectName}`\n        )} and run ${chalk().white(\n            'rnv run'\n        )} to see magic happen!`\n    );\n};\n\nexport default {\n    description: 'Create new ReNative project',\n    fn: taskRnvNew,\n    task: 'new',\n    params: PARAMS.withBase(),\n    platforms: [],\n    isGlobalScope: true\n};\n"],"file":"task.rnv.new.js"}