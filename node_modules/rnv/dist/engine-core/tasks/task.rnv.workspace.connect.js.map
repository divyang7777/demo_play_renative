{"version":3,"sources":["../../../src/engine-core/tasks/task.rnv.workspace.connect.js"],"names":["taskRnvWorkspaceConnect","c","parentTask","originTask","TASK_PROJECT_CONFIGURE","TASK_WORKSPACE_CONNECT","opts","Object","keys","files","rnv","configWorkspaces","workspaces","map","v","type","name","message","choices","selectedWS","description","fn","task","params","PARAMS","withBase","platforms","isGlobalScope"],"mappings":"kRAAA;AACA;AACA;AACA;AACA;;AAEO,GAAMA,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAOC,CAAP,CAAUC,UAAV,CAAsBC,UAAtB;AACnC,oBAAQ,yBAAR,EADmC;;AAG7B,+BAAYF,CAAZ,CAAeG,iCAAf,CAAuCC,iCAAvC,CAA+DF,UAA/D,CAH6B;;AAK7BG,IAL6B,CAKtBC,MAAM,CAACC,IAAP,wBAAYP,CAAC,CAACQ,KAAF,CAAQC,GAAR,CAAYC,gBAAxB,eAAY,sBAA8BC,UAA1C,EAAsDC,GAAtD;AACT,SAAAC,CAAC,mCAAOA,CAAAA,CAAP,KAAY;AACLb,CAAC,CAACQ,KAAF,CAAQC,GAAR,CAAYC,gBADP,eACL,uBAA8BC,UAA9B,CAAyCE,CAAzC,CADK,CAAZ,EADQ,CALsB;;;;AAWN,2BAAe;AACxCC,IAAI,CAAE,MADkC;AAExCC,IAAI,CAAE,YAFkC;AAGxCC,OAAO,CAAE,kBAH+B;AAIxCC,OAAO,CAAEZ,IAJ+B,CAAf,CAXM,6CAW3Ba,UAX2B,uBAW3BA,UAX2B;;;AAkBnC,mBAAOA,UAAP,EAlBmC,qEAAhC,C;;;AAqBQ;AACXC,WAAW,CAAE,yCADF;AAEXC,EAAE,CAAErB,uBAFO;AAGXsB,IAAI,CAAEjB,iCAHK;AAIXkB,MAAM,CAAEC,kBAAOC,QAAP,EAJG;AAKXC,SAAS,CAAE,EALA;AAMXC,aAAa,CAAE,IANJ,C","sourcesContent":["import { inquirerPrompt } from '../../cli/prompt';\nimport { logTask, logRaw } from '../../core/systemManager/logger';\nimport { getWorkspaceConnectionString } from '../../core/projectManager/workspace';\nimport { executeTask } from '../../core/engineManager';\nimport { TASK_WORKSPACE_CONNECT, TASK_PROJECT_CONFIGURE, PARAMS } from '../../core/constants';\n\nexport const taskRnvWorkspaceConnect = async (c, parentTask, originTask) => {\n    logTask('taskRnvWorkspaceConnect');\n\n    await executeTask(c, TASK_PROJECT_CONFIGURE, TASK_WORKSPACE_CONNECT, originTask);\n\n    const opts = Object.keys(c.files.rnv.configWorkspaces?.workspaces).map(\n        v => `${v} ${getWorkspaceConnectionString(\n                c.files.rnv.configWorkspaces?.workspaces[v]\n        )}`\n    );\n\n    const { selectedWS } = await inquirerPrompt({\n        type: 'list',\n        name: 'selectedWS',\n        message: 'Pick a workspace',\n        choices: opts\n    });\n\n    logRaw(selectedWS);\n};\n\nexport default {\n    description: 'Connect project with selected workspace',\n    fn: taskRnvWorkspaceConnect,\n    task: TASK_WORKSPACE_CONNECT,\n    params: PARAMS.withBase(),\n    platforms: [],\n    isGlobalScope: true\n};\n"],"file":"task.rnv.workspace.connect.js"}