{"version":3,"sources":["../../../src/engine-core/tasks/task.rnv.help.js"],"names":["taskRnvHelp","c","optsString","PARAMS","withAll","forEach","param","cmd","shortcut","key","value","isRequired","grey","description","cmdsString","tasksObj","engines","engine","tasks","getTasks","t","task","Object","keys","join","bold","white","fn","params","withBase","platforms","isGlobalScope"],"mappings":"oGAAA;AACA;AACA;;AAEO,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO;AAC9B,oBAAQ,aAAR;;;AAGA,GAAIC,CAAAA,UAAU,CAAG,EAAjB;;AAEAC,kBAAOC,OAAP,GAAiBC,OAAjB,CAAyB,SAACC,KAAD,CAAW;AAChC,GAAIC,CAAAA,GAAG,CAAG,EAAV;AACA,GAAID,KAAK,CAACE,QAAV,CAAoB;AAChBD,GAAG,MAAQD,KAAK,CAACE,QAAd,KAAH;AACH;AACDD,GAAG,OAASD,KAAK,CAACG,GAAlB;AACA,GAAIH,KAAK,CAACI,KAAV,CAAiB;AACb,GAAIJ,KAAK,CAACK,UAAV,CAAsB;AAClBJ,GAAG,OAASD,KAAK,CAACI,KAAf,IAAH;AACH,CAFD,IAEO;AACHH,GAAG,OAASD,KAAK,CAACI,KAAf,IAAH;AACH;AACJ;AACDR,UAAU,EAAI,oBAAQU,IAAR,CAAgBL,GAAhB,MAAwBD,KAAK,CAACO,WAA9B,MAAd;AACH,CAdD;;;AAiBA,GAAIC,CAAAA,UAAU,CAAG,EAAjB;AACA,GAAMC,CAAAA,QAAQ,CAAG,EAAjB;AACA,GAAMC,CAAAA,OAAO,CAAG,wCAAqBf,CAArB,CAAhB;;AAEAe,OAAO,CAACX,OAAR,CAAgB,SAACY,MAAD,CAAY;AACxB,GAAMC,CAAAA,KAAK,CAAGD,MAAM,CAACE,QAAP,EAAd;AACAD,KAAK,CAACb,OAAN,CAAc,SAACe,CAAD,CAAO;AACjBL,QAAQ,CAACK,CAAC,CAACC,IAAH,CAAR,CAAmB,IAAnB;AACH,CAFD;AAGH,CALD;AAMAP,UAAU,CAAGQ,MAAM,CAACC,IAAP,CAAYR,QAAZ,EAAsBS,IAAtB,CAA2B,IAA3B,CAAb;;;AAGA;AACF,oBAAQC,IAAR,CAAaC,KAAb,CAAmB,WAAnB,CADE;;AAGFZ,UAHE;;AAKF,oBAAQW,IAAR,CAAaC,KAAb,CAAmB,UAAnB,CALE;;AAOFxB,UAPE;;AASH,CA7CM,C;;AA+CQ;AACXW,WAAW,CAAE,sBADF;AAEXc,EAAE,CAAE3B,WAFO;AAGXqB,IAAI,CAAE,MAHK;AAIXO,MAAM,CAAEzB,kBAAO0B,QAAP,EAJG;AAKXC,SAAS,CAAE,EALA;AAMXC,aAAa,CAAE,IANJ,C","sourcesContent":["import { chalk, logToSummary, logTask } from '../../core/systemManager/logger';\nimport { PARAMS } from '../../core/constants';\nimport { getRegisteredEngines } from '../../core/engineManager';\n\nexport const taskRnvHelp = (c) => {\n    logTask('taskRnvHelp');\n\n    // PARAMS\n    let optsString = '';\n\n    PARAMS.withAll().forEach((param) => {\n        let cmd = '';\n        if (param.shortcut) {\n            cmd += `-${param.shortcut}, `;\n        }\n        cmd += `--${param.key}`;\n        if (param.value) {\n            if (param.isRequired) {\n                cmd += ` <${param.value}>`;\n            } else {\n                cmd += ` [${param.value}]`;\n            }\n        }\n        optsString += chalk().grey(`${cmd}, ${param.description}\\n`);\n    });\n\n    // TASKS\n    let cmdsString = '';\n    const tasksObj = {};\n    const engines = getRegisteredEngines(c);\n\n    engines.forEach((engine) => {\n        const tasks = engine.getTasks();\n        tasks.forEach((t) => {\n            tasksObj[t.task] = true;\n        });\n    });\n    cmdsString = Object.keys(tasksObj).join(', ');\n\n\n    logToSummary(`\n${chalk().bold.white('COMMANDS:')}\n\n${cmdsString}\n\n${chalk().bold.white('OPTIONS:')}\n\n${optsString}\n`);\n};\n\nexport default {\n    description: 'Display generic help',\n    fn: taskRnvHelp,\n    task: 'help',\n    params: PARAMS.withBase(),\n    platforms: [],\n    isGlobalScope: true\n};\n"],"file":"task.rnv.help.js"}