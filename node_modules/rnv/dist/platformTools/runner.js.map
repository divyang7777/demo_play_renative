{"version":3,"sources":["../../src/platformTools/runner.js"],"names":["keepRNVRunning","rnvStart","c","platform","port","runtime","hosted","program","Config","isWebHostEnabled","then","localhost","catch","logError","MACOS","WINDOWS","WEB","TIZEN","WEBOS","TIZEN_MOBILE","TIZEN_WATCH","startCmd","resetHard","reset","command","stdio","silent","runWeinre","rnvDebug","rnvRun","_rnvRunWithPlatform","rnvPackage","_rnvPackageWithPlatform","rnvBuild","_rnvBuildWithPlatform","rnvExport","_rnvExportWithPlatform","rnvDeploy","_rnvDeployWithPlatform","rnvLog","ANDROID","ANDROID_TV","ANDROID_WEAR","IOS","TVOS","_configureHostedIfRequired","paths","project","rnv","path","join","dir","appId","pattern","override","ip","address","_startBundlerIfRequired","bundleAssets","isRunning","waitForBundlerIfRequired","Promise","target","chalk","grey","shouldOpenBrowser","Analytics","captureEvent","type","KAIOS","FIREFOX_OS","FIREFOX_TV","CHROMECAST","WEB_NEXT","only","files","workspace","config","defaultTargets"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\n// @todo fix circular\nimport chalk from 'chalk';\nimport open from 'better-opn';\nimport ip from 'ip';\nimport path from 'path';\n\nimport {\n    isBuildSchemeSupported,\n    logErrorPlatform,\n    configureIfRequired,\n    cleanPlatformIfRequired,\n    getConfigProp,\n    waitForWebpack,\n    confirmActiveBundler\n} from '../common';\nimport { doResolve } from '../resolve';\nimport { isPlatformSupported } from './index';\nimport { logTask, logError, logDebug, logSummary } from '../systemTools/logger';\nimport {\n    IOS,\n    TVOS,\n    ANDROID,\n    WEB,\n    TIZEN,\n    WEBOS,\n    ANDROID_TV,\n    ANDROID_WEAR,\n    MACOS,\n    WINDOWS,\n    TIZEN_MOBILE,\n    TIZEN_WATCH,\n    KAIOS,\n    FIREFOX_OS,\n    FIREFOX_TV,\n    CHROMECAST,\n    WEB_NEXT\n} from '../constants';\nimport {\n    runXcodeProject,\n    exportXcodeProject,\n    buildXcodeProject,\n    packageBundleForXcode,\n    runAppleLog\n} from './apple';\nimport { buildWeb, runWeb, deployWeb, exportWeb } from './web';\nimport { runWebNext, buildWebNext, exportWebNext, deployWebNext } from './web/webNext';\nimport { runTizen, buildTizenProject } from './tizen';\nimport { runWebOS, buildWebOSProject } from './webos';\nimport { runFirefoxProject, buildFirefoxProject } from './firefox';\nimport { runChromecast } from './chromecast';\nimport {\n    runElectron,\n    buildElectron,\n    runElectronDevServer,\n    configureElectronProject,\n    exportElectron\n} from './electron';\nimport {\n    packageAndroid,\n    runAndroid,\n    configureGradleProject,\n    buildAndroid,\n    runAndroidLog\n} from './android';\nimport { copyFolderContentsRecursiveSync, writeCleanFile } from '../systemTools/fileutils';\nimport { executeAsync } from '../systemTools/exec';\nimport Config from '../config';\nimport Analytics from '../systemTools/analytics';\n\nimport { isBundlerActive, waitForBundler } from './bundler';\nimport { checkSdk } from './sdkManager';\n\nlet keepRNVRunning = false;\n\n// ##########################################\n// PUBLIC API\n// ##########################################\n\nexport const rnvStart = async (c) => {\n    const { platform } = c;\n    const { port } = c.runtime;\n    const { hosted } = c.program;\n\n    logTask(\n        `rnvStart:${platform}:${port}:${hosted}:${Config.isWebHostEnabled}`\n    );\n\n    if (Config.isWebHostEnabled && hosted) {\n        waitForWebpack(c)\n            .then(() => open(`http://${c.runtime.localhost}:${port}/`))\n            .catch(logError);\n    }\n\n    switch (platform) {\n        case MACOS:\n        case WINDOWS:\n            await configureIfRequired(c, platform);\n            return runElectronDevServer(c, platform, port);\n\n        case WEB:\n        case TIZEN:\n        case WEBOS:\n        case TIZEN_MOBILE:\n        case TIZEN_WATCH:\n            await configureIfRequired(c, platform);\n            return runWeb(c, platform, port);\n        default:\n            if (hosted) {\n                return logError(\n                    'This platform does not support hosted mode',\n                    true\n                );\n            }\n    }\n\n    let startCmd = `node ${doResolve(\n        'react-native'\n    )}/local-cli/cli.js start --port ${\n        c.runtime.port\n    } --config=configs/metro.config.${c.platform}.js`;\n\n    if (c.program.resetHard) {\n        startCmd += ' --reset-cache';\n    } else if (c.program.reset && c.command === 'start') {\n        startCmd += ' --reset-cache';\n    }\n    // logSummary('BUNDLER STARTED');\n    await executeAsync(c, startCmd, { stdio: 'inherit', silent: true });\n};\n\nconst runWeinre = c => executeAsync(c, 'npx weinre --boundHost -all-');\n\nexport const rnvDebug = async (c) => {\n    logTask(`rnvDebug:${c.platform}`);\n\n    await isPlatformSupported(c);\n    await isBuildSchemeSupported(c);\n    await runWeinre(c);\n};\n\nexport const rnvRun = async (c) => {\n    logTask(`rnvRun:${c.platform}`);\n\n    await isPlatformSupported(c);\n    await isBuildSchemeSupported(c);\n    await _rnvRunWithPlatform(c);\n};\n\nexport const rnvPackage = async (c) => {\n    logTask(`rnvPackage:${c.platform}`);\n\n    await isPlatformSupported(c);\n    await isBuildSchemeSupported(c);\n    await _rnvPackageWithPlatform(c);\n};\n\nexport const rnvBuild = async (c) => {\n    logTask(`rnvBuild:${c.platform}`);\n\n    await isPlatformSupported(c);\n    await isBuildSchemeSupported(c);\n    await _rnvBuildWithPlatform(c);\n};\n\nexport const rnvExport = async (c) => {\n    logTask(`rnvExport:${c.platform}`);\n\n    await isPlatformSupported(c);\n    await isBuildSchemeSupported(c);\n    await _rnvExportWithPlatform(c);\n};\n\nexport const rnvDeploy = async (c) => {\n    logTask(`rnvDeploy:${c.platform}`);\n\n    await isPlatformSupported(c);\n    await isBuildSchemeSupported(c);\n    await _rnvDeployWithPlatform(c);\n};\n\nexport const rnvLog = async (c) => {\n    switch (c.platform) {\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            await runAndroidLog(c);\n            return;\n        case IOS:\n        case TVOS:\n            await runAppleLog(c);\n            return;\n        default:\n            logErrorPlatform(c, c.platform);\n    }\n};\n\n// ##########################################\n// PRIVATE\n// ##########################################\n\nconst _configureHostedIfRequired = async (c) => {\n    logTask(`_configureHostedIfRequired:${c.platform}`);\n    if (Config.isWebHostEnabled) {\n        logDebug('Running hosted build');\n        const { project, rnv } = c.paths;\n        copyFolderContentsRecursiveSync(\n            path.join(rnv.dir, 'supportFiles', 'appShell'),\n            path.join(\n                project.dir,\n                'platformBuilds',\n                `${c.runtime.appId}_${c.platform}`,\n                'public'\n            )\n        );\n        writeCleanFile(\n            path.join(rnv.dir, 'supportFiles', 'appShell', 'index.html'),\n            path.join(\n                project.dir,\n                'platformBuilds',\n                `${c.runtime.appId}_${c.platform}`,\n                'public',\n                'index.html'\n            ),\n            [\n                {\n                    pattern: '{{DEV_SERVER}}',\n                    override: `http://${ip.address()}:${c.runtime.port}`\n                }\n            ], null, c\n        );\n    }\n};\n\nconst _startBundlerIfRequired = async (c) => {\n    logTask(`_startBundlerIfRequired:${c.platform}`);\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets');\n    if (bundleAssets === true) return;\n\n    const isRunning = await isBundlerActive(c);\n    if (!isRunning) {\n        rnvStart(c);\n        keepRNVRunning = true;\n        await waitForBundler(c);\n    } else {\n        await confirmActiveBundler(c);\n    }\n};\n\nconst waitForBundlerIfRequired = async (c) => {\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets');\n    if (bundleAssets === true) return;\n    // return a new promise that does...nothing, just to keep RNV running while the bundler is running\n    if (keepRNVRunning) return new Promise(() => {});\n    return true;\n};\n\nconst _rnvRunWithPlatform = async (c) => {\n    logTask(`_rnvRunWithPlatform:${c.platform}`);\n    const { platform } = c;\n    const { port } = c.runtime;\n    const { target } = c.runtime;\n    const { hosted } = c.program;\n\n    logTask(\n        `_rnvRunWithPlatform:${platform}:${port}:${target}:${hosted}`,\n        chalk.grey\n    );\n\n    if (Config.isWebHostEnabled && hosted) {\n        c.runtime.shouldOpenBrowser = true;\n        return rnvStart(c);\n    }\n\n    Analytics.captureEvent({\n        type: 'runProject',\n        platform\n    });\n\n    await checkSdk(c);\n\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets', false);\n\n    switch (platform) {\n        case IOS:\n        case TVOS:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await _startBundlerIfRequired(c);\n                await runXcodeProject(c);\n                if (!bundleAssets) {\n                    logSummary('BUNDLER STARTED');\n                }\n                return waitForBundlerIfRequired(c);\n            }\n            return runXcodeProject(c);\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await _startBundlerIfRequired(c);\n                if (\n                    getConfigProp(c, platform, 'bundleAssets') === true\n                    || platform === ANDROID_WEAR\n                ) {\n                    await packageAndroid(c, platform);\n                }\n                await runAndroid(c, platform, target);\n                if (!bundleAssets) {\n                    logSummary('BUNDLER STARTED');\n                }\n                return waitForBundlerIfRequired(c);\n            }\n            return runAndroid(c, platform, target);\n        case MACOS:\n        case WINDOWS:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n            }\n            return runElectron(c, platform, port);\n        case WEB:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n            }\n            c.runtime.shouldOpenBrowser = true;\n            return runWeb(c, platform, port, true);\n        case TIZEN:\n        case TIZEN_MOBILE:\n        case TIZEN_WATCH:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await _configureHostedIfRequired(c);\n            }\n            return runTizen(c, platform, target);\n        case WEBOS:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await _configureHostedIfRequired(c);\n            }\n            return runWebOS(c, platform, target);\n        case KAIOS:\n        case FIREFOX_OS:\n        case FIREFOX_TV:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n            }\n            return runFirefoxProject(c, platform);\n        case CHROMECAST:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await _configureHostedIfRequired(c);\n            }\n            return runChromecast(c, platform, target);\n        case WEB_NEXT:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n            }\n            c.runtime.shouldOpenBrowser = true;\n            return runWebNext(c, platform, port, true);\n        default:\n            return logErrorPlatform(c, platform);\n    }\n};\n\nconst _rnvPackageWithPlatform = async (c) => {\n    logTask(`_rnvPackageWithPlatform:${c.platform}`);\n    const { platform } = c;\n\n    const target = c.program.target || c.files.workspace.config.defaultTargets[platform];\n\n    await checkSdk(c);\n\n    switch (platform) {\n        case IOS:\n        case TVOS:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n            }\n            return packageBundleForXcode(c, platform);\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await configureGradleProject(c, platform);\n            }\n            return packageAndroid(\n                c,\n                platform,\n                target,\n                platform === ANDROID_WEAR\n            );\n        default:\n            logErrorPlatform(c, platform);\n            return false;\n    }\n};\n\nconst _rnvExportWithPlatform = async (c) => {\n    logTask(`_rnvExportWithPlatform:${c.platform}`);\n    const { platform } = c;\n\n    await checkSdk(c);\n\n    switch (platform) {\n        case WEB:\n            if (!c.program.only) {\n                await rnvBuild(c);\n            }\n            return exportWeb(c, platform);\n        case WEB_NEXT:\n            if (!c.program.only) {\n                await rnvBuild(c);\n            }\n            return exportWebNext(c);\n        case IOS:\n        case TVOS:\n            if (!c.program.only) {\n                await _rnvPackageWithPlatform(c, platform);\n            }\n            return exportXcodeProject(c, platform);\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            return _rnvBuildWithPlatform(c);\n        case MACOS:\n        case WINDOWS:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await configureElectronProject(c, platform);\n                await buildElectron(c, platform);\n            }\n            return exportElectron(c, platform);\n        default:\n            logErrorPlatform(c, platform);\n    }\n};\n\nconst _rnvDeployWithPlatform = async (c) => {\n    logTask(`_rnvDeployWithPlatform:${c.platform}`);\n    const { platform } = c;\n\n    switch (platform) {\n        case WEB:\n            if (!c.program.only) {\n                await rnvBuild(c);\n            }\n            return deployWeb(c, platform);\n        case WEB_NEXT:\n            if (!c.program.only) {\n                await buildWebNext(c);\n            }\n            return deployWebNext(c, platform);\n        case CHROMECAST:\n            if (!c.program.only) {\n                await rnvBuild(c);\n            }\n            return deployWeb(c, platform);\n        case TVOS:\n        case IOS:\n            if (!c.program.only) {\n                return _rnvExportWithPlatform(c);\n            }\n            return;\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n        case ANDROID:\n            if (!c.program.only) {\n                return _rnvBuildWithPlatform(c);\n            }\n            return;\n        default:\n            if (!c.program.only) {\n                await rnvExport(c);\n            }\n    }\n};\n\nconst _rnvBuildWithPlatform = async (c) => {\n    logTask(`_rnvBuildWithPlatform:${c.platform}`);\n    const { platform } = c;\n\n    await checkSdk(c);\n\n    switch (platform) {\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await configureGradleProject(c, platform);\n            await packageAndroid(c, platform);\n            await buildAndroid(c, platform);\n            return;\n        case MACOS:\n        case WINDOWS:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await configureElectronProject(c, platform);\n            await buildElectron(c, platform);\n            return;\n        case IOS:\n        case TVOS:\n            await _rnvPackageWithPlatform(c, platform);\n            await buildXcodeProject(c, platform);\n            return;\n        case WEB:\n        case CHROMECAST:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await buildWeb(c, platform);\n            return;\n        case WEB_NEXT:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await buildWebNext(c);\n            return;\n        case KAIOS:\n        case FIREFOX_OS:\n        case FIREFOX_TV:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await buildFirefoxProject(c, platform);\n            return;\n        case TIZEN:\n        case TIZEN_MOBILE:\n        case TIZEN_WATCH:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await buildTizenProject(c, platform);\n            return;\n        case WEBOS:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await buildWebOSProject(c, platform);\n            return;\n        default:\n            logErrorPlatform(c, platform);\n    }\n};\n"],"file":"runner.js"}