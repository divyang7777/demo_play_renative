{"version":3,"sources":["../../../src/platformTools/web/webNext.js"],"names":["configureNextIfRequired","c","paths","project","platformTemplatesDirs","dir","publicDir","path","join","baseFontsDir","appConfig","fontDirs","stylesDir","pagesDir","resolve","platform","_appFile","platformTemplateDir","configFile","NEXT_CONFIG_NAME","fs","existsSync","mkdirSync","fontsSymLinkPath","unlinkSync","e","symlinkSync","cssOutput","fontFiles","readdirSync","forEach","file","split","pattern","override","relative","replace","runWebNext","port","devServerHost","runtime","localhost","isPortActive","chalk","white","_runWebBrowser","runWebDevServer","alreadyStarted","Promise","shouldOpenBrowser","wait","then","catch","exportNext","env","appId","process","NODE_ENV","interactive","buildWebNext","deployWebNext","exportWebNext"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\nimport path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport open from 'better-opn';\nimport { executeAsync } from '../../systemTools/exec';\nimport {\n    checkPortInUse,\n    getConfigProp,\n    waitForWebpack,\n    confirmActiveBundler\n} from '../../common';\nimport { logTask, logInfo, logWarning, logDebug } from '../../systemTools/logger';\nimport { NEXT_CONFIG_NAME } from '../../constants';\nimport { selectWebToolAndDeploy, selectWebToolAndExport } from '../../deployTools/webTools';\nimport { writeCleanFile, fsWriteFileSync } from '../../systemTools/fileutils';\n\nconst configureNextIfRequired = async (c) => {\n    const { platformTemplatesDirs, dir } = c.paths.project;\n    const publicDir = path.join(dir, 'public');\n    const baseFontsDir = c.paths.appConfig.fontDirs?.[0];\n    const stylesDir = path.join(dir, 'styles');\n    const pagesDir = path.resolve(getConfigProp(c, c.platform, 'pagesDir') || 'src/app');\n    const _appFile = path.join(pagesDir, '_app.js');\n    const platformTemplateDir = path.join(platformTemplatesDirs[c.platform], `_${c.platform}`);\n    const configFile = path.join(dir, NEXT_CONFIG_NAME);\n\n    // handle fonts\n    !fs.existsSync(publicDir) && fs.mkdirSync(publicDir);\n    const fontsSymLinkPath = path.join(publicDir, 'fonts');\n\n    if (fs.existsSync(baseFontsDir)) {\n        if (!fs.existsSync(fontsSymLinkPath)) {\n            try {\n                fs.unlinkSync(fontsSymLinkPath);\n            } catch (e) {\n                logDebug(e);\n            }\n            fs.symlinkSync(baseFontsDir, fontsSymLinkPath);\n        }\n\n        // create styles dir and global fonts.css file\n        if (!fs.existsSync(stylesDir)) {\n            fs.mkdirSync(stylesDir);\n            let cssOutput = '';\n\n            const fontFiles = fs.readdirSync(baseFontsDir);\n            fontFiles.forEach((file) => {\n                cssOutput += `\n                  @font-face {\n                      font-family: '${file.split('.')[0]}';\n                      src: url('/fonts/${file}');\n                  }\n\n              `;\n            });\n\n            fsWriteFileSync(path.join(stylesDir, 'fonts.css'), cssOutput);\n        }\n    }\n\n\n    // add wrapper _app\n    if (!fs.existsSync(_appFile)) {\n        if (!fs.existsSync(pagesDir)) {\n            fs.mkdirSync(pagesDir);\n        }\n        writeCleanFile(path.join(platformTemplateDir, '_app.js'), _appFile, [{ pattern: '{{FONTS_CSS}}', override: path.relative(pagesDir, path.resolve('styles/fonts.css')).replace(/\\\\/g, '/') }], null, c);\n    }\n\n    // add config\n    if (!fs.existsSync(configFile)) {\n        writeCleanFile(path.join(platformTemplateDir, NEXT_CONFIG_NAME), configFile, null, null, c);\n    }\n};\n\nexport const runWebNext = async (c, platform, port) => {\n    logTask(`runWebNext:${platform}:${port}`);\n    await configureNextIfRequired(c);\n\n    const devServerHost = c.runtime.localhost;\n\n    const isPortActive = await checkPortInUse(c, platform, port);\n\n    if (!isPortActive) {\n        logInfo(\n            `Looks like your ${chalk.white(platform)} devServerHost ${chalk.white(devServerHost)} at port ${chalk.white(\n                port\n            )} is not running. Starting it up for you...`\n        );\n        await _runWebBrowser(c, platform, devServerHost, port, false);\n        await runWebDevServer(c, platform, port);\n    } else {\n        await confirmActiveBundler(c);\n        await _runWebBrowser(c, platform, devServerHost, port, true);\n    }\n};\n\nconst _runWebBrowser = (c, platform, devServerHost, port, alreadyStarted) => new Promise((resolve) => {\n    logTask(`_runWebBrowser:${platform}:${devServerHost}:${port}:${c.runtime.shouldOpenBrowser}`);\n    if (!c.runtime.shouldOpenBrowser) return resolve();\n    const wait = waitForWebpack(c, 'next')\n        .then(() => {\n            open(`http://${devServerHost}:${port}/`);\n        })\n        .catch((e) => {\n            logWarning(e);\n        });\n    if (alreadyStarted) return wait; // if it's already started, return the promise so it rnv will wait, otherwise it will exit before opening the browser\n    return resolve();\n});\n\nconst exportNext = async (c) => {\n    logTask('exportWebNext');\n    await configureNextIfRequired(c);\n    const env = getConfigProp(c, c.platform, 'environment');\n    const pagesDir = getConfigProp(c, c.platform, 'pagesDir');\n    if (!pagesDir) logWarning(`You're missing ${c.platform}.pagesDir config. Defaulting to 'src/app'`);\n\n    return executeAsync(c, `npx next export ./platformBuilds/${c.runtime.appId}_${c.platform} --pagesDir ${pagesDir || 'src/app'}`, { ...process.env, env: { NODE_ENV: env || 'development' }, interactive: true });\n};\n\nexport const buildWebNext = async (c) => {\n    logTask('buildWebNext');\n    await configureNextIfRequired(c);\n    const env = getConfigProp(c, c.platform, 'environment');\n    const pagesDir = getConfigProp(c, c.platform, 'pagesDir');\n    if (!pagesDir) logWarning(`You're missing ${c.platform}.pagesDir config. Defaulting to 'src/app'`);\n\n    await executeAsync(c, `npx next build ./platformBuilds/${c.runtime.appId}_${c.platform} --pagesDir ${pagesDir || 'src/app'}`, { ...process.env, env: { NODE_ENV: env || 'development' }, interactive: true });\n    return exportNext(c);\n};\n\nexport const runWebDevServer = (c, platform, port) => {\n    logTask(`runWebDevServer:${platform}`);\n    const env = getConfigProp(c, platform, 'environment');\n    const pagesDir = getConfigProp(c, platform, 'pagesDir');\n    if (!pagesDir) logWarning(`You're missing ${platform}.pagesDir config. Defaulting to 'src/app'`);\n\n    return executeAsync(c, `npx next --pagesDir ${pagesDir || 'src/app'} --port ${port}`, { env: { NODE_ENV: env || 'development' }, interactive: true });\n};\n\nexport const deployWebNext = (c, platform) => {\n    logTask(`deployWeb:${platform}`);\n    return selectWebToolAndDeploy(c, platform);\n};\n\nexport const exportWebNext = (c, platform) => {\n    logTask(`exportWeb:${platform}`);\n    return selectWebToolAndExport(c, platform);\n};\n"],"file":"webNext.js"}