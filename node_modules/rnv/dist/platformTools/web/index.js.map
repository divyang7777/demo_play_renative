{"version":3,"sources":["../../../src/platformTools/web/index.js"],"names":["_generateWebpackConfigs","c","platform","appFolder","templateFolder","modulePaths","doNotResolveModulePaths","moduleAliases","modulePath","path","join","paths","project","builds","dir","externalModulePaths","localModulePaths","fs","existsSync","modules","externalPaths","localPaths","aliases","plugin","pluginPlat","key","webpackConfig","webpack","push","forEach","v","projectPath","nodeModulesDir","Object","keys","aKey","mAlias","map","concat","assets","filter","Boolean","env","extendConfig","entryFile","title","analyzer","program","assetVersion","versionedAssets","timestampAssets","runtime","timestamp","obj","extensions","extendJs","JSON","stringify","buildWeb","Promise","resolve","reject","debug","debugIp","debugVariables","ip","address","wbp","appId","then","chalk","white","catch","e","configureWebProject","configureCoreWebProject","_parseCssSync","stringsPath","timestampPathsConfig","backgroundColor","pattern","override","hex","runWeb","port","devServerHost","localhost","WEB","isPortActive","_runWebBrowser","runWebDevServer","alreadyStarted","shouldOpenBrowser","wait","wpPublic","wpConfig","command","stdio","silent","deployWeb","exportWeb"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-syntax */\n/* eslint-disable import/no-cycle */\nimport path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport open from 'better-opn';\nimport ip from 'ip';\nimport { executeAsync } from '../../systemTools/exec';\nimport {\n    getAppFolder,\n    getAppTemplateFolder,\n    checkPortInUse,\n    getConfigProp,\n    waitForWebpack,\n    getBuildFilePath,\n    getAppTitle,\n    getSourceExts,\n    sanitizeColor,\n    confirmActiveBundler,\n    getAppVersion,\n    getTimestampPathsConfig\n} from '../../common';\nimport { isPlatformActive } from '..';\nimport {\n    logTask,\n    logInfo,\n    logDebug,\n    logSuccess,\n    logWarning\n} from '../../systemTools/logger';\nimport { WEB } from '../../constants';\nimport {\n    copyBuildsFolder,\n    copyAssetsFolder\n} from '../../projectTools/projectParser';\nimport { copyFileSync, readObjectSync, writeCleanFile, fsWriteFileSync } from '../../systemTools/fileutils';\nimport { parsePlugins } from '../../pluginTools';\nimport {\n    selectWebToolAndDeploy,\n    selectWebToolAndExport\n} from '../../deployTools/webTools';\nimport { getValidLocalhost } from '../../utils';\nimport { doResolvePath } from '../../resolve';\n\nconst _generateWebpackConfigs = (c, platform) => {\n    const appFolder = getAppFolder(c, platform);\n    const templateFolder = getAppTemplateFolder(c, platform);\n\n    let modulePaths = [];\n    const doNotResolveModulePaths = [];\n    let moduleAliases = {};\n\n    const modulePath = path.join(c.paths.project.builds.dir, '_shared', 'modules.json');\n    let externalModulePaths = [];\n    let localModulePaths = [];\n    if (fs.existsSync(modulePath)) {\n        const modules = readObjectSync(modulePath);\n        externalModulePaths = modules.externalPaths;\n        localModulePaths = modules.localPaths;\n        moduleAliases = modules.aliases;\n    }\n\n    // PLUGINS\n    parsePlugins(c, platform, (plugin, pluginPlat, key) => {\n        const webpackConfig = plugin.webpack || plugin.webpackConfig;\n\n        if (webpackConfig) {\n            if (webpackConfig.modulePaths) {\n                if (webpackConfig.modulePaths === false) {\n                    // ignore\n                } else if (webpackConfig.modulePaths === true) {\n                    modulePaths.push(`node_modules/${key}`);\n                } else {\n                    webpackConfig.modulePaths.forEach((v) => {\n                        if (typeof v === 'string') {\n                            modulePaths.push(v);\n                        } else if (v?.projectPath) {\n                            doNotResolveModulePaths.push(path.join(c.paths.project.dir, v.projectPath));\n                        }\n                    });\n                }\n            }\n            if (webpackConfig.moduleAliases) {\n                if (webpackConfig.moduleAliases === true) {\n                    moduleAliases[key] = doResolvePath(key, true, {}, c.paths.project.nodeModulesDir);\n                } else {\n                    Object.keys(webpackConfig.moduleAliases).forEach((aKey) => {\n                        const mAlias = webpackConfig.moduleAliases[aKey];\n                        if (typeof mAlias === 'string') {\n                            moduleAliases[key] = doResolvePath(mAlias, true, {}, c.paths.project.nodeModulesDir);\n                        } else if (mAlias.path) {\n                            moduleAliases[key] = path.join(c.paths.project.dir, mAlias.path);\n                        } else if (mAlias.projectPath) {\n                            moduleAliases[key] = path.join(c.paths.project.dir, mAlias.projectPath);\n                        }\n                    });\n                }\n            }\n        }\n    }, true);\n\n    modulePaths = modulePaths\n        .map(v => doResolvePath(v, true, {}, c.paths.project.dir))\n        .concat(externalModulePaths.map(v => doResolvePath(v, true, {}, c.paths.project.nodeModulesDir)))\n        .concat(localModulePaths.map(v => path.join(c.paths.project.dir, v)))\n        .concat(doNotResolveModulePaths)\n        .concat([c.paths.project.assets.dir])\n        .filter(Boolean);\n\n    const env = getConfigProp(c, platform, 'environment');\n    const extendConfig = getConfigProp(c, platform, 'webpackConfig', {});\n    const entryFile = getConfigProp(c, platform, 'entryFile', 'index.web');\n    const title = getAppTitle(c, platform);\n    const analyzer = getConfigProp(c, platform, 'analyzer') || c.program.analyzer;\n\n    copyFileSync(\n        path.join(\n            templateFolder,\n            '_privateConfig',\n            env === 'production' ? 'webpack.config.js' : 'webpack.config.dev.js'\n        ),\n        path.join(appFolder, 'webpack.config.js')\n    );\n\n    // const externalModulesResolved = externalModules.map(v => doResolve(v))\n    let assetVersion = '';\n    const versionedAssets = getConfigProp(c, platform, 'versionedAssets', false);\n    if (versionedAssets) {\n        assetVersion = `-${getAppVersion(c, platform)}`;\n    }\n    const timestampAssets = getConfigProp(c, platform, 'timestampAssets', false);\n    if (timestampAssets) {\n        assetVersion = `-${c.runtime.timestamp}`;\n    }\n\n    const obj = {\n        modulePaths,\n        moduleAliases,\n        analyzer,\n        entryFile,\n        title,\n        assetVersion,\n        extensions: getSourceExts(c, platform),\n        ...extendConfig\n    };\n\n    const extendJs = `\n    module.exports = ${JSON.stringify(obj, null, 2)}`;\n\n    fsWriteFileSync(path.join(appFolder, 'webpack.extend.js'), extendJs);\n};\n\nconst buildWeb = (c, platform) => new Promise((resolve, reject) => {\n    const { debug, debugIp } = c.program;\n    logTask(`buildWeb:${platform}`);\n\n    const appFolder = getAppFolder(c, platform);\n\n    let debugVariables = '';\n\n    if (debug) {\n        logInfo(\n            `Starting a remote debugger build with ip ${debugIp\n                    || ip.address()}. If this IP is not correct, you can always override it with --debugIp`\n        );\n        debugVariables += `DEBUG=true DEBUG_IP=${debugIp || ip.address()}`;\n    }\n\n    const wbp = doResolvePath('webpack/bin/webpack.js');\n\n    executeAsync(\n        c,\n        `npx cross-env PLATFORM=${platform} NODE_ENV=production ${\n            debugVariables\n        } node ${wbp} -p --config ./platformBuilds/${c.runtime.appId}_${platform}/webpack.config.js`\n    )\n        .then(() => {\n            logSuccess(\n                `Your Build is located in ${chalk.white(\n                    path.join(appFolder, 'public')\n                )} .`\n            );\n            resolve();\n        })\n        .catch(e => reject(e));\n});\n\nconst configureWebProject = async (c, platform) => {\n    logTask(`configureWebProject:${platform}`);\n\n    if (!isPlatformActive(c, platform)) return;\n\n    await copyAssetsFolder(c, platform);\n\n    await configureCoreWebProject(c, platform);\n\n    return copyBuildsFolder(c, platform);\n};\n\nexport const configureCoreWebProject = async (c, platform) => {\n    _generateWebpackConfigs(c, platform);\n    _parseCssSync(c, platform);\n};\n\nconst _parseCssSync = (c, platform) => {\n    const appFolder = getAppFolder(c, platform);\n    const stringsPath = 'public/app.css';\n    const timestampPathsConfig = getTimestampPathsConfig(c, platform);\n    const backgroundColor = getConfigProp(c, platform, 'backgroundColor');\n    writeCleanFile(\n        getBuildFilePath(c, platform, stringsPath),\n        path.join(appFolder, stringsPath),\n        [\n            {\n                pattern: '{{PLUGIN_COLORS_BG}}',\n                override: sanitizeColor(\n                    backgroundColor,\n                    'backgroundColor'\n                ).hex\n            }\n        ],\n        timestampPathsConfig, c\n    );\n};\n\n\nconst runWeb = async (c, platform, port) => {\n    logTask(`runWeb:${platform}:${port}`);\n\n    let devServerHost = c.runtime.localhost;\n\n    if (platform === WEB) {\n        const extendConfig = getConfigProp(c, c.platform, 'webpackConfig', {});\n        devServerHost = getValidLocalhost(\n            extendConfig.devServerHost,\n            c.runtime.localhost\n        );\n\n        // if (extendConfig.customScripts) {\n        //     const timestampBuildFiles = getConfigProp(c, c.platform, 'timestampBuildFiles', []);\n        //     if (timestampBuildFiles.length) {\n        //         const sanitisedCustomScripts = [];\n        //         extendConfig.customScripts.forEach((customScript) => {\n        //             console.log('ABBAAB', customScript, timestampBuildFiles.includes(customScript));\n        //         });\n        //     }\n        // }\n    }\n\n    const isPortActive = await checkPortInUse(c, platform, port);\n\n    if (!isPortActive) {\n        logInfo(\n            `Looks like your ${chalk.white(\n                platform\n            )} devServerHost ${chalk.white(\n                devServerHost\n            )} at port ${chalk.white(\n                port\n            )} is not running. Starting it up for you...`\n        );\n        await _runWebBrowser(c, platform, devServerHost, port, false);\n        await runWebDevServer(c, platform, port);\n    } else {\n        await confirmActiveBundler(c);\n        await _runWebBrowser(c, platform, devServerHost, port, true);\n    }\n};\n\nconst _runWebBrowser = (c, platform, devServerHost, port, alreadyStarted) => new Promise((resolve) => {\n    logTask(\n        `_runWebBrowser:${platform}:${devServerHost}:${port}:${c.runtime.shouldOpenBrowser}`\n    );\n    if (!c.runtime.shouldOpenBrowser) return resolve();\n    const wait = waitForWebpack(c)\n        .then(() => {\n            open(`http://${devServerHost}:${port}/`);\n        })\n        .catch((e) => {\n            logWarning(e);\n        });\n    if (alreadyStarted) return wait; // if it's already started, return the promise so it rnv will wait, otherwise it will exit before opening the browser\n    return resolve();\n});\n\nconst runWebDevServer = (c, platform, port) => new Promise((resolve) => {\n    logTask(`runWebDevServer:${platform}`);\n    const { debug, debugIp } = c.program;\n\n    const appFolder = getAppFolder(c, platform);\n    const wpPublic = path.join(appFolder, 'public');\n    const wpConfig = path.join(appFolder, 'webpack.config.js');\n\n    let debugVariables = '';\n\n    if (debug) {\n        logInfo(\n            `Starting a remote debugger build with ip ${debugIp\n                    || ip.address()}. If this IP is not correct, you can always override it with --debugIp`\n        );\n        debugVariables += `DEBUG=true DEBUG_IP=${debugIp || ip.address()}`;\n    }\n\n    const command = `npx cross-env PLATFORM=${platform} ${\n        debugVariables\n    } webpack-dev-server -d --devtool source-map --config ${\n        wpConfig\n    }  --inline --hot --colors --content-base ${\n        wpPublic\n    } --history-api-fallback --port ${port} --mode=development`;\n    executeAsync(c, command, { stdio: 'inherit', silent: true })\n        .then(() => {\n            logDebug('runWebDevServer: running');\n            resolve();\n        })\n        .catch((e) => {\n            logDebug(e);\n            resolve();\n        });\n});\n\nconst deployWeb = (c, platform) => {\n    logTask(`deployWeb:${platform}`);\n    return selectWebToolAndDeploy(c, platform);\n};\n\nconst exportWeb = (c, platform) => {\n    logTask(`exportWeb:${platform}`);\n    return selectWebToolAndExport(c, platform);\n};\n\nexport { buildWeb, runWeb, configureWebProject, deployWeb, exportWeb };\n"],"file":"index.js"}