{"version":3,"sources":["../../src/sdk-webpack/index.js"],"names":["WEBPACK","path","join","RNV_NODE_MODULES_DIR","WEBPACK_DEV_SERVER","waitForWebpack","c","suffix","runtime","port","attempts","maxAttempts","CHECK_INTEVAL","extendConfig","platform","devServerHost","localhost","url","Promise","resolve","reject","interval","setInterval","axios","get","then","res","status","clearInterval","catch","getModuleConfigs","modulePaths","moduleAliases","doNotResolveModulePaths","plugin","pluginPlat","key","webpackConfig","webpack","push","forEach","v","projectPath","paths","project","dir","nodeModulesDir","Object","keys","aKey","mAlias","moduleAliasesArray","map","concat","assets","filter","Boolean","_generateWebpackConfigs","subFolderName","appFolder","appFolderServer","modulePath","externalModulePaths","localModulePaths","modules","externalPaths","localPaths","aliases","entryFile","title","analyzer","program","assetVersion","versionedAssets","timestampAssets","timestamp","bundleAssets","obj","buildFolder","RNV_PROJECT_DIR_NAME","RNV_SERVER_DIR_NAME","extensions","extendJs","JSON","stringify","buildWeb","debug","debugIp","debugVariables","ip","address","appId","cyan","configureWebProject","platformBuildsProjectPath","configureCoreWebProject","_parseCssSync","timestampPathsConfig","backgroundColor","injects","pattern","override","hex","runWebpackServer","enableRemoteDebugger","isPortActive","white","_runWebBrowser","runWebDevServer","resetCompleted","alreadyStarted","shouldOpenBrowser","wait","e","_runRemoteDebuggerChii","resolvedDebugIp","debugUrl","REMOTE_DEBUG_PORT","command","stdio","silent","remoteDebuggerActive","lineBreaks","_runRemoteDebuggerWeinre","wpPublic","wpConfig","debugObj","debugOrder","WPS_ALTERNATIVE","wps","deployWeb","exportWeb"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-syntax */\nimport path from 'path';\nimport open from 'better-opn';\nimport axios from 'axios';\nimport ip from 'ip';\nimport commandExists from 'command-exists';\nimport { fsExistsSync, readObjectSync, writeCleanFile, fsWriteFileSync, mkdirSync } from '../core/systemManager/fileutils';\nimport { executeAsync } from '../core/systemManager/exec';\nimport {\n    // getAppFolder,\n    // getAppSubFolder,\n    getPlatformProjectDir,\n    getPlatformBuildDir,\n    // getTemplateProjectDir,\n    // getTemplateDir,\n    getAppVersion,\n    // getAppTemplateFolder,\n    checkPortInUse,\n    getConfigProp,\n    getBuildFilePath,\n    getAppTitle,\n    // getSourceExts,\n    sanitizeColor,\n    confirmActiveBundler,\n    getTimestampPathsConfig,\n    waitForUrl,\n    addSystemInjects\n} from '../core/common';\nimport { doResolve, doResolvePath } from '../core/resolve';\nimport { isPlatformActive } from '../core/platformManager';\nimport {\n    chalk,\n    logTask,\n    logInfo,\n    logDebug,\n    logSuccess,\n    logWarning,\n    logRaw,\n    logError,\n    logSummary\n} from '../core/systemManager/logger';\nimport {\n    copyBuildsFolder,\n    copyAssetsFolder\n} from '../core/projectManager/projectParser';\nimport { getPlatformExtensions } from '../core/engineManager';\nimport { parsePlugins } from '../core/pluginManager';\nimport {\n    selectWebToolAndDeploy,\n    selectWebToolAndExport\n} from '../core/deployManager/webTools';\nimport { getValidLocalhost } from '../core/utils';\n\nimport { REMOTE_DEBUG_PORT, RNV_NODE_MODULES_DIR, RNV_PROJECT_DIR_NAME, RNV_SERVER_DIR_NAME } from '../core/constants';\n\nconst WEBPACK = path.join(RNV_NODE_MODULES_DIR, 'webpack/bin/webpack.js');\nconst WEBPACK_DEV_SERVER = path.join(RNV_NODE_MODULES_DIR, 'webpack-dev-server/bin/webpack-dev-server.js');\n\nexport const waitForWebpack = async (c, suffix = 'assets/bundle.js') => {\n    logTask('waitForWebpack', `port:${c.runtime.port}`);\n    let attempts = 0;\n    const maxAttempts = 10;\n    const CHECK_INTEVAL = 2000;\n    // const spinner = ora('Waiting for webpack to finish...').start();\n\n    const extendConfig = getConfigProp(c, c.platform, 'webpackConfig', {});\n    const devServerHost = getValidLocalhost(extendConfig.devServerHost, c.runtime.localhost);\n    const url = `http://${devServerHost}:${c.runtime.port}/${suffix}`;\n\n    return new Promise((resolve, reject) => {\n        const interval = setInterval(() => {\n            axios\n                .get(url)\n                .then((res) => {\n                    if (res.status === 200) {\n                        clearInterval(interval);\n                        // spinner.succeed();\n                        return resolve(true);\n                    }\n                    attempts++;\n                    if (attempts === maxAttempts) {\n                        clearInterval(interval);\n                        // spinner.fail('Can\\'t connect to webpack. Try restarting it.');\n                        return reject(\n                            \"Can't connect to webpack. Try restarting it.\"\n                        );\n                    }\n                })\n                .catch(() => {\n                    attempts++;\n                    if (attempts > maxAttempts) {\n                        clearInterval(interval);\n                        // spinner.fail('Can\\'t connect to webpack. Try restarting it.');\n                        return reject(\n                            \"Can't connect to webpack. Try restarting it.\"\n                        );\n                    }\n                });\n        }, CHECK_INTEVAL);\n    });\n};\n\nexport const getModuleConfigs = (c) => {\n    let modulePaths = [];\n    const moduleAliases = {};\n\n    const doNotResolveModulePaths = [];\n\n    // PLUGINS\n    parsePlugins(c, c.platform, (plugin, pluginPlat, key) => {\n        const webpackConfig = plugin.webpack || plugin.webpackConfig;\n\n        if (webpackConfig) {\n            if (webpackConfig.modulePaths) {\n                if (webpackConfig.modulePaths === false) {\n                    // ignore\n                } else if (webpackConfig.modulePaths === true) {\n                    modulePaths.push(`node_modules/${key}`);\n                } else {\n                    webpackConfig.modulePaths.forEach((v) => {\n                        if (typeof v === 'string') {\n                            modulePaths.push(v);\n                        } else if (v?.projectPath) {\n                            doNotResolveModulePaths.push(path.join(c.paths.project.dir, v.projectPath));\n                        }\n                    });\n                }\n            }\n            if (webpackConfig.moduleAliases) {\n                if (webpackConfig.moduleAliases === true) {\n                    moduleAliases[key] = doResolvePath(key, true, {}, c.paths.project.nodeModulesDir);\n                } else {\n                    Object.keys(webpackConfig.moduleAliases).forEach((aKey) => {\n                        const mAlias = webpackConfig.moduleAliases[aKey];\n                        if (typeof mAlias === 'string') {\n                            moduleAliases[key] = doResolvePath(mAlias, true, {}, c.paths.project.nodeModulesDir);\n                        } else if (mAlias.path) {\n                            moduleAliases[key] = path.join(c.paths.project.dir, mAlias.path);\n                        } else if (mAlias.projectPath) {\n                            moduleAliases[key] = path.join(c.paths.project.dir, mAlias.projectPath);\n                        }\n                    });\n                }\n            }\n        }\n    }, true);\n\n    const moduleAliasesArray = [];\n    Object.keys(moduleAliases).forEach((key) => {\n        moduleAliasesArray.push(`${key}:${moduleAliases[key]}`);\n    });\n\n    modulePaths = modulePaths\n        .map(v => doResolvePath(v, true, {}, c.paths.project.dir))\n        .concat(doNotResolveModulePaths)\n        .concat([c.paths.project.assets.dir])\n        .filter(Boolean);\n\n\n    return { modulePaths, moduleAliases, moduleAliasesArray };\n};\n\nconst _generateWebpackConfigs = (c, subFolderName) => {\n    logTask('_generateWebpackConfigs');\n    const { platform } = c;\n    const appFolder = getPlatformBuildDir(c);\n    const appFolderServer = path.join(appFolder, subFolderName);\n    // const templateFolder = getAppTemplateFolder(c, platform);\n\n    let { modulePaths, moduleAliases } = getModuleConfigs(c);\n\n    const modulePath = path.join(appFolder, 'modules.json');\n    let externalModulePaths = [];\n    let localModulePaths = [];\n    if (fsExistsSync(modulePath)) {\n        const modules = readObjectSync(modulePath);\n        externalModulePaths = modules.externalPaths;\n        localModulePaths = modules.localPaths;\n        if (modules.aliases) {\n            moduleAliases = { ...modules.aliases, ...moduleAliases };\n        }\n    }\n\n    modulePaths = modulePaths\n        .concat(externalModulePaths.map(v => doResolvePath(v, true, {}, c.paths.project.nodeModulesDir)))\n        .concat(localModulePaths.map(v => path.join(c.paths.project.dir, v)))\n        .filter(Boolean);\n\n    // const env = getConfigProp(c, platform, 'environment');\n    const extendConfig = getConfigProp(c, platform, 'webpackConfig', {});\n    const entryFile = getConfigProp(c, platform, 'entryFile', 'index.web');\n    const title = getAppTitle(c, platform);\n    const analyzer = getConfigProp(c, platform, 'analyzer') || c.program.analyzer;\n\n    if (!fsExistsSync(appFolderServer)) {\n        mkdirSync(appFolderServer);\n    }\n\n    // copyFileSync(\n    //     path.join(\n    //         templateFolder,\n    //         '_privateConfig',\n    //         env === 'production' ? 'webpack.config.js' : 'webpack.config.dev.js'\n    //     ),\n    //     path.join(appFolderServer, 'webpack.config.js')\n    // );\n\n    // const externalModulesResolved = externalModules.map(v => doResolve(v))\n    let assetVersion = '';\n    const versionedAssets = getConfigProp(c, platform, 'versionedAssets', false);\n    if (versionedAssets) {\n        assetVersion = `-${getAppVersion(c, platform)}`;\n    }\n    const timestampAssets = getConfigProp(c, platform, 'timestampAssets', false);\n    if (timestampAssets) {\n        assetVersion = `-${c.runtime.timestamp}`;\n    }\n\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets', false);\n\n    const obj = {\n        modulePaths,\n        moduleAliases,\n        analyzer,\n        entryFile,\n        title,\n        assetVersion,\n        // devServer: c.runtime.devServer,\n        buildFolder: bundleAssets ? RNV_PROJECT_DIR_NAME : RNV_SERVER_DIR_NAME,\n        extensions: getPlatformExtensions(c, true),\n        // extensions: getSourceExts(c, platform, false),\n        ...extendConfig\n    };\n\n    const extendJs = `\n    module.exports = ${JSON.stringify(obj, null, 2)}`;\n\n    fsWriteFileSync(path.join(appFolder, 'webpack.extend.js'), extendJs);\n};\n\nconst buildWeb = async (c) => {\n    const { debug, debugIp } = c.program;\n    const { platform } = c;\n    logTask('buildWeb');\n\n    let debugVariables = '';\n\n    if (debug) {\n        logInfo(\n            `Starting a remote debugger build with ip ${debugIp\n                    || ip.address()}. If this IP is not correct, you can always override it with --debugIp`\n        );\n        debugVariables += `DEBUG=true DEBUG_IP=${debugIp || ip.address()}`;\n    }\n\n    await executeAsync(c, `npx cross-env PLATFORM=${platform} NODE_ENV=production ${\n        debugVariables\n    } node ${WEBPACK} -p --config ./platformBuilds/${c.runtime.appId}_${platform}/webpack.config.prod.js`, {\n        // env: {\n        //     RNV_EXTENSIONS: getPlatformExtensions(c)\n        // }\n    });\n    logSuccess(\n        `Your Build is located in ${chalk().cyan(\n            path.join(getPlatformProjectDir(c))\n        )} .`\n    );\n    return true;\n};\n\nconst configureWebProject = async (c) => {\n    logTask('configureWebProject');\n\n    const { platform } = c;\n\n    c.runtime.platformBuildsProjectPath = getPlatformProjectDir(c);\n\n    if (!isPlatformActive(c, platform)) return;\n\n    await copyAssetsFolder(c, platform);\n\n    const bundleAssets = getConfigProp(c, platform, 'bundleAssets') === true;\n\n    await configureCoreWebProject(c, bundleAssets ? RNV_PROJECT_DIR_NAME : RNV_SERVER_DIR_NAME);\n\n    return copyBuildsFolder(c, platform);\n};\n\nexport const configureCoreWebProject = async (c, subFolderName = '') => {\n    logTask('configureCoreWebProject');\n    _generateWebpackConfigs(c, subFolderName);\n    _parseCssSync(c, subFolderName);\n};\n\nconst _parseCssSync = (c, subFolderName) => {\n    const appFolder = getPlatformBuildDir(c);\n    const timestampPathsConfig = getTimestampPathsConfig(c, c.platform);\n    const backgroundColor = getConfigProp(c, c.platform, 'backgroundColor');\n\n    const injects = [\n        {\n            pattern: '{{PLUGIN_COLORS_BG}}',\n            override: sanitizeColor(\n                backgroundColor,\n                'backgroundColor'\n            ).hex\n        }\n    ];\n\n    addSystemInjects(c, injects);\n\n    writeCleanFile(\n        getBuildFilePath(c, c.platform, 'project/app.css'),\n        path.join(appFolder, subFolderName, 'app.css'),\n        injects,\n        timestampPathsConfig, c\n    );\n};\n\n\nexport const runWebpackServer = async (c, enableRemoteDebugger) => {\n    const { port } = c.runtime;\n    const { platform } = c;\n    logTask('runWeb', `port:${port} debugger:${!!enableRemoteDebugger}`);\n\n    let devServerHost = c.runtime.localhost;\n\n    const extendConfig = getConfigProp(c, c.platform, 'webpackConfig', {});\n    devServerHost = getValidLocalhost(\n        extendConfig.devServerHost,\n        c.runtime.localhost\n    );\n\n    const isPortActive = await checkPortInUse(c, platform, port);\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets', false);\n\n    if (!isPortActive) {\n        logInfo(\n            `Your ${chalk().white(\n                platform\n            )} devServerHost ${chalk().white(\n                devServerHost\n            )} at port ${chalk().white(\n                port\n            )} is not running. Starting it up for you...`\n        );\n        await _runWebBrowser(c, platform, devServerHost, port, false);\n        if (!bundleAssets) {\n            logSummary('BUNDLER STARTED');\n        }\n        await runWebDevServer(c, enableRemoteDebugger);\n    } else {\n        const resetCompleted = await confirmActiveBundler(c);\n\n        if (resetCompleted) {\n            await _runWebBrowser(c, platform, devServerHost, port, false);\n            if (!bundleAssets) {\n                logSummary('BUNDLER STARTED');\n            }\n            await runWebDevServer(c, enableRemoteDebugger);\n        } else {\n            await _runWebBrowser(c, platform, devServerHost, port, true);\n        }\n    }\n};\n\nconst _runWebBrowser = (c, platform, devServerHost, port, alreadyStarted) => new Promise((resolve) => {\n    logTask(\n        '_runWebBrowser', `ip:${devServerHost} port:${port} openBrowser:${!!c.runtime.shouldOpenBrowser}`\n    );\n    if (!c.runtime.shouldOpenBrowser) return resolve();\n    const wait = waitForWebpack(c)\n        .then(() => {\n            open(`http://${devServerHost}:${port}/`);\n        })\n        .catch((e) => {\n            logWarning(e);\n        });\n    if (alreadyStarted) return wait; // if it's already started, return the promise so it rnv will wait, otherwise it will exit before opening the browser\n    return resolve();\n});\n\n\nconst _runRemoteDebuggerChii = async (c, obj) => {\n    const { debugIp } = c.program;\n    try {\n        await commandExists('chii');\n\n        const resolvedDebugIp = debugIp || ip.address();\n        logInfo(\n            `Starting a remote debugger build with ip ${\n                resolvedDebugIp}. If this IP is not correct, you can always override it with --debugIp`\n        );\n\n        const debugUrl = chalk().cyan(`http://${resolvedDebugIp}:${REMOTE_DEBUG_PORT}`);\n\n        const command = `chii start --port ${REMOTE_DEBUG_PORT}`;\n        executeAsync(c, command, { stdio: 'inherit', silent: true });\n\n        try {\n            await waitForUrl(`http://${resolvedDebugIp}:${REMOTE_DEBUG_PORT}`);\n            logRaw(`\n\nDebugger running at: ${debugUrl}`);\n            open(`http://${resolvedDebugIp}:${REMOTE_DEBUG_PORT}/`);\n        } catch (e) {\n            logError(e);\n        }\n        obj.remoteDebuggerActive = true;\n        obj.debugVariables += `DEBUG=true DEBUG_IP=${\n            resolvedDebugIp} DEBUG_CLIENT=chii DEBUG_SCRIPT=\"http://${resolvedDebugIp}:${REMOTE_DEBUG_PORT}/target.js\"`;\n        obj.lineBreaks = '\\n';\n    } catch (e) {\n        logWarning(`You are missing chii. You can install via ${chalk().white('npm i -g chii')}) Trying to use weinre next`);\n    }\n\n    return true;\n};\n\nconst _runRemoteDebuggerWeinre = async (c, obj) => {\n    const { debugIp } = c.program;\n    try {\n        await commandExists('weinre');\n\n        const resolvedDebugIp = debugIp || ip.address();\n        logInfo(\n            `Starting a remote debugger build with ip ${\n                resolvedDebugIp}. If this IP is not correct, you can always override it with --debugIp`\n        );\n\n        const debugUrl = chalk().cyan(`http://${resolvedDebugIp}:${REMOTE_DEBUG_PORT}/client/#${c.platform}`);\n\n        const command = `weinre --boundHost -all- --httpPort ${REMOTE_DEBUG_PORT}`;\n        executeAsync(c, command, { stdio: 'inherit', silent: true });\n\n        try {\n            await waitForUrl(`http://${resolvedDebugIp}:${REMOTE_DEBUG_PORT}`);\n            logRaw(`\n\nDebugger running at: ${debugUrl}`);\n            open(`http://${resolvedDebugIp}:${REMOTE_DEBUG_PORT}/client/#${c.platform}`);\n        } catch (e) {\n            logError(e);\n        }\n        obj.remoteDebuggerActive = true;\n        obj.debugVariables += `DEBUG=true DEBUG_IP=${\n            resolvedDebugIp} DEBUG_CLIENT=weinre DEBUG_SCRIPT=\"http://${resolvedDebugIp}:${\n            REMOTE_DEBUG_PORT}/target/target-script-min.js#${c.platform}}`;\n        obj.lineBreaks = '\\n';\n    } catch (e) {\n        logWarning(`You are missing weinre. Skipping debug. install via ${chalk().white('npm i -g weinre')}`);\n    }\n    return true;\n};\n\nconst runWebDevServer = async (c, enableRemoteDebugger) => {\n    logTask('runWebDevServer');\n    const { debug } = c.program;\n\n    const appFolder = getPlatformBuildDir(c);\n    const wpPublic = path.join(appFolder, 'server');\n    const wpConfig = path.join(appFolder, 'webpack.config.dev.js');\n    const debugObj = { lineBreaks: '\\n\\n\\n', debugVariables: '', remoteDebuggerActive: false };\n    let debugOrder = [_runRemoteDebuggerChii, _runRemoteDebuggerWeinre];\n    if (debug === 'weinre') debugOrder = [_runRemoteDebuggerWeinre, _runRemoteDebuggerChii];\n    if ((debug || enableRemoteDebugger) && debug !== 'false') {\n        await debugOrder[0](c, debugObj);\n        if (!debugObj.remoteDebuggerActive) {\n            await debugOrder[1](c, debugObj);\n        }\n    }\n\n    const devServerHost = getValidLocalhost(getConfigProp(c, c.platform, 'webpackConfig', {}).devServerHost, c.runtime.localhost);\n\n    const url = chalk().cyan(`http://${devServerHost}:${c.runtime.port}`);\n    logRaw(`${debugObj.lineBreaks}Dev server running at: ${url}\\n\\n`);\n\n\n    const WPS_ALTERNATIVE = `${doResolve('webpack-dev-server')}/bin/webpack-dev-server.js`;\n\n    let wps = 'webpack-dev-server';\n    if (fsExistsSync(WEBPACK_DEV_SERVER)) {\n        wps = WEBPACK_DEV_SERVER;\n    } else if (fsExistsSync(WPS_ALTERNATIVE)) {\n        wps = WPS_ALTERNATIVE;\n    } else {\n        logWarning(`cannot find installed webpack-dev-server. looked in following locations:\n${chalk().white(WEBPACK_DEV_SERVER)},\n${chalk().white(WPS_ALTERNATIVE)}\nwill try to use globally installed one`);\n    }\n\n    const command = `npx cross-env PLATFORM=${c.platform} ${\n        debugObj.debugVariables\n    } ${wps} -d --devtool source-map --config ${\n        wpConfig\n    }  --inline --hot --colors --content-base ${\n        wpPublic\n    } --history-api-fallback --port ${c.runtime.port} --mode=development`;\n    try {\n        await executeAsync(c, command, {\n            stdio: 'inherit',\n            silent: true,\n            // env: {\n            //     RNV_EXTENSIONS: getPlatformExtensions(c)\n            // }\n        });\n\n        logDebug('runWebDevServer: running');\n    } catch (e) {\n        logDebug(e);\n        return true;\n    }\n};\n\nconst deployWeb = (c) => {\n    logTask('deployWeb');\n    const { platform } = c;\n\n    return selectWebToolAndDeploy(c, platform);\n};\n\nconst exportWeb = (c) => {\n    logTask('exportWeb');\n    const { platform } = c;\n\n    return selectWebToolAndExport(c, platform);\n};\n\nexport { buildWeb, configureWebProject, deployWeb, exportWeb };\n"],"file":"index.js"}