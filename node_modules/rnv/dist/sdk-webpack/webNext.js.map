{"version":3,"sources":["../../src/sdk-webpack/webNext.js"],"names":["configureNextIfRequired","c","runtime","platformBuildsProjectPath","paths","project","platformTemplatesDirs","dir","supportFilesDir","path","join","platform","configFile","NEXT_CONFIG_NAME","runWebNext","port","devServerHost","localhost","isPortActive","bundleAssets","white","_runWebBrowser","runWebDevServer","resetCompleted","alreadyStarted","Promise","resolve","shouldOpenBrowser","wait","then","catch","e","_checkPagesDir","pagesDir","distDir","appId","pagesDirPath","red","NEXT_PAGES_DIR","NEXT_DIST_DIR","fallbackPagesDir","fallbackPagesDirPath","getTranspileModules","transModules","plugin","pluginPlat","key","webpackConfig","webpack","push","nextTranspileModules","length","concat","buildWebNext","env","platformBuildDir","envExt","process","NODE_ENV","cyan","url","interactive","deployWebNext","exportWebNext","exportDir"],"mappings":"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","sourcesContent":["import path from 'path';\nimport open from 'better-opn';\nimport { executeAsync } from '../core/systemManager/exec';\nimport {\n    checkPortInUse,\n    getConfigProp,\n    confirmActiveBundler,\n    getPlatformBuildDir,\n    // getAppFolder\n} from '../core/common';\nimport { waitForWebpack, getModuleConfigs } from './index';\n\nimport {\n    fsExistsSync,\n    writeCleanFile,\n    // fsWriteFileSync,\n    // fsMkdirSync,\n    // fsUnlinkSync,\n    // fsReaddirSync,\n    // fsSymlinkSync\n} from '../core/systemManager/fileutils';\nimport { chalk, logTask, logInfo, logWarning,\n    logRaw, logSummary, logSuccess } from '../core/systemManager/logger';\nimport { NEXT_CONFIG_NAME } from '../core/constants';\nimport { generateEnvVars } from '../core/engineManager';\nimport { selectWebToolAndDeploy, selectWebToolAndExport } from '../core/deployManager/webTools';\nimport { parsePlugins } from '../core/pluginManager';\nimport { getValidLocalhost } from '../core/utils';\n\nexport const configureNextIfRequired = async (c) => {\n    logTask('configureNextIfRequired');\n    c.runtime.platformBuildsProjectPath = `${getPlatformBuildDir(c)}`;\n    const { platformTemplatesDirs, dir } = c.paths.project;\n    // const pagesDir = path.resolve(getConfigProp(c, c.platform, 'pagesDir') || 'src/app');\n    // const _appFile = path.join(pagesDir, '_app.js');\n    const supportFilesDir = path.join(platformTemplatesDirs[c.platform], '../supportFiles');\n    const configFile = path.join(dir, NEXT_CONFIG_NAME);\n\n    // handle fonts\n    // !fsExistsSync(publicDir) && fsMkdirSync(publicDir);\n    // const fontsSymLinkPath = path.join(publicDir, 'fonts');\n    //\n    // if (fsExistsSync(baseFontsDir)) {\n    //     if (!fsExistsSync(fontsSymLinkPath)) {\n    //         try {\n    //             fsUnlinkSync(fontsSymLinkPath);\n    //         } catch (e) {\n    //             logDebug(e);\n    //         }\n    //         fsSymlinkSync(baseFontsDir, fontsSymLinkPath);\n    //     }\n    //\n    //     // create styles dir and global fonts.css file\n    //     if (!fsExistsSync(stylesDir)) {\n    //         fsMkdirSync(stylesDir);\n    //         let cssOutput = '';\n    //\n    //         const fontFiles = fsReaddirSync(baseFontsDir);\n    //         fontFiles.forEach((file) => {\n    //             cssOutput += `\n    //               @font-face {\n    //                   font-family: '${file.split('.')[0]}';\n    //                   src: url('/fonts/${file}');\n    //               }\n    //\n    //           `;\n    //         });\n    //\n    //         fsWriteFileSync(path.join(stylesDir, 'fonts.css'), cssOutput);\n    //     }\n    // }\n\n    // add wrapper _app\n    // if (!fsExistsSync(_appFile)) {\n    //     if (!fsExistsSync(pagesDir)) {\n    //         fsMkdirSync(pagesDir);\n    //     }\n    //     writeCleanFile(\n    //         path.join(supportFilesDir, '_app.js'),\n    //         _appFile,\n    //         [{ pattern: '{{FONTS_CSS}}', override: path.relative(pagesDir, path.resolve('styles/fonts.css')).replace(/\\\\/g, '/') }],\n    //         null,\n    //         c\n    //     );\n    // }\n\n    // add config\n    if (!fsExistsSync(configFile)) {\n        writeCleanFile(path.join(supportFilesDir, NEXT_CONFIG_NAME), configFile, null, null, c);\n    }\n};\n\nexport const runWebNext = async (c) => {\n    const { port } = c.runtime;\n    logTask('runWebNext', `port:${port}`);\n    const { platform } = c;\n\n    const devServerHost = getValidLocalhost(getConfigProp(c, c.platform, 'devServerHost', c.runtime.localhost), c.runtime.localhost);\n\n    const isPortActive = await checkPortInUse(c, platform, port);\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets', false);\n\n    if (!isPortActive) {\n        logInfo(\n            `Your ${chalk().white(platform)} devServerHost ${\n                chalk().white(devServerHost)} at port ${chalk().white(\n                port\n            )} is not running. Starting it up for you...`\n        );\n        await _runWebBrowser(c, platform, devServerHost, port, false);\n\n        if (!bundleAssets) {\n            logSummary('BUNDLER STARTED');\n        }\n        await runWebDevServer(c);\n    } else {\n        const resetCompleted = await confirmActiveBundler(c);\n\n        if (resetCompleted) {\n            await _runWebBrowser(c, platform, devServerHost, port, false);\n            if (!bundleAssets) {\n                logSummary('BUNDLER STARTED');\n            }\n            await runWebDevServer(c);\n        } else {\n            await _runWebBrowser(c, platform, devServerHost, port, true);\n        }\n    }\n};\n\nconst _runWebBrowser = (c, platform, devServerHost, port, alreadyStarted) => new Promise((resolve) => {\n    logTask(\n        '_runWebBrowser', `ip:${devServerHost} port:${port} openBrowser:${!!c.runtime.shouldOpenBrowser}`\n    );\n    if (!c.runtime.shouldOpenBrowser) return resolve();\n    const wait = waitForWebpack(c, '')\n        .then(() => {\n            open(`http://${devServerHost}:${port}/`);\n        })\n        .catch((e) => {\n            logWarning(e);\n        });\n    if (alreadyStarted) return wait; // if it's already started, return the promise so it rnv will wait, otherwise it will exit before opening the browser\n    return resolve();\n});\n\nconst _checkPagesDir = async (c) => {\n    const pagesDir = getConfigProp(c, c.platform, 'pagesDir');\n    const distDir = `platformBuilds/${c.runtime.appId}_${c.platform}/.next`;\n    if (pagesDir) {\n        const pagesDirPath = path.join(c.paths.project.dir, pagesDir);\n        if (!fsExistsSync(pagesDirPath)) {\n            logWarning(`You configured custom ${c.platform}pagesDir: ${\n                chalk().white(pagesDir)\n            } in your renative.json but it is missing at ${chalk().red(pagesDirPath)}`);\n        }\n        return { NEXT_PAGES_DIR: pagesDir, NEXT_DIST_DIR: distDir };\n    }\n    const fallbackPagesDir = 'src/app';\n    logWarning(`You're missing ${c.platform}.pagesDir config. Defaulting to '${fallbackPagesDir}'`);\n\n    const fallbackPagesDirPath = path.join(c.paths.project.dir, fallbackPagesDir);\n    if (!fsExistsSync(fallbackPagesDirPath)) {\n        logWarning(`Folder ${\n            chalk().white(fallbackPagesDir)\n        } is missing. make sure your entry code is located there in order for next to work correctly!\nAlternatively you can configure custom entry folder via ${c.platform}.pagesDir in renative.json`);\n    }\n    return { NEXT_PAGES_DIR: 'src/app', NEXT_DIST_DIR: distDir };\n};\n\nexport const getTranspileModules = (c) => {\n    let transModules = [];\n    parsePlugins(c, c.platform, (plugin, pluginPlat, key) => {\n        const webpackConfig = plugin.webpack || plugin.webpackConfig;\n        if (webpackConfig) {\n            transModules.push(key);\n            if (webpackConfig.nextTranspileModules?.length) {\n                transModules = transModules.concat(webpackConfig.nextTranspileModules);\n            }\n        }\n    }, true);\n    return transModules;\n};\n\nexport const buildWebNext = async (c) => {\n    logTask('buildWebNext');\n    const env = getConfigProp(c, c.platform, 'environment');\n    const platformBuildDir = getPlatformBuildDir(c);\n\n    const envExt = await _checkPagesDir(c);\n\n    await executeAsync(c, 'npx next build', {\n        ...process.env,\n        env: {\n            NODE_ENV: env || 'development',\n            ...envExt,\n            ...generateEnvVars(c, getModuleConfigs(c), getTranspileModules(c))\n        }\n    });\n    logSuccess(\n        `Your build is located in ${chalk().cyan(path.join(platformBuildDir, '.next'))} .`\n    );\n    return true;\n};\n\nexport const runWebDevServer = async (c) => {\n    logTask('runWebDevServer');\n    const env = getConfigProp(c, c.platform, 'environment');\n    const envExt = await _checkPagesDir(c);\n\n    const devServerHost = getValidLocalhost(getConfigProp(c, c.platform, 'devServerHost', c.runtime.localhost), c.runtime.localhost);\n\n    const url = chalk().cyan(`http://${devServerHost}:${c.runtime.port}`);\n    logRaw(`\n\nDev server running at: ${url}\n\n`);\n\n\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets', false);\n    return executeAsync(c, `npx next ${bundleAssets ? 'start' : 'dev'} --port ${c.runtime.port}`,\n        {\n            env: {\n                NODE_ENV: env || 'development',\n                ...envExt,\n                ...generateEnvVars(c, getModuleConfigs(c), getTranspileModules(c))\n            },\n            interactive: true\n        });\n};\n\nexport const deployWebNext = (c) => {\n    logTask('deployWebNext');\n    const { platform } = c;\n\n    return selectWebToolAndDeploy(c, platform);\n};\n\nexport const exportWebNext = async (c) => {\n    logTask('exportWebNext');\n    const { platform } = c;\n\n    logTask('_exportNext');\n    const exportDir = path.join(getPlatformBuildDir(c), 'output');\n    const env = getConfigProp(c, c.platform, 'environment');\n    const envExt = await _checkPagesDir(c);\n\n    await executeAsync(c, `npx next export --outdir ${exportDir}`, {\n        ...process.env,\n        env: {\n            NODE_ENV: env || 'development',\n            ...envExt,\n            ...generateEnvVars(c, getModuleConfigs(c), getTranspileModules(c))\n        }\n    });\n    logSuccess(\n        `Your export is located in ${chalk().cyan(exportDir)} .`\n    );\n\n    await selectWebToolAndExport(c, platform);\n    return true;\n};\n"],"file":"webNext.js"}