{"version":3,"sources":["../../src/core/utils.js"],"names":["isSystemMac","process","platform","isSystemLinux","isSystemWin","replaceOverridesInString","string","overrides","mask","replacedString","length","replace","forEach","v","regEx","RegExp","getValidLocalhost","value","localhost","isUrlLocalhost","includes"],"mappings":"gNAAO,GAAMA,CAAAA,WAAW,CAAGC,OAAO,CAACC,QAAR,GAAqB,QAAzC,C;;AAEA,GAAMC,CAAAA,aAAa,CAAGF,OAAO,CAACC,QAAR,GAAqB,OAA3C,C;;AAEA,GAAME,CAAAA,WAAW,CAAGH,OAAO,CAACC,QAAR,GAAqB,OAAzC,C;;AAEA,GAAMG,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,MAAD,CAASC,SAAT,CAAoBC,IAApB,CAA6B;AACjE,GAAIC,CAAAA,cAAc,CAAGH,MAArB;AACA,GAAI,CAAAC,SAAS,MAAT,QAAAA,SAAS,CAAEG,MAAX,qBAAqBD,cAArB,eAAqB,gBAAgBE,OAArC,CAAJ,CAAkD;AAC9CJ,SAAS,CAACK,OAAV,CAAkB,SAACC,CAAD,CAAO;AACrB,GAAMC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,CAAWF,CAAX,CAAc,GAAd,CAAd;AACAJ,cAAc,CAAGA,cAAc,CAACE,OAAf,CAAuBG,KAAvB,CAA8BN,IAA9B,CAAjB;AACH,CAHD;AAIH;AACD,MAAOC,CAAAA,cAAP;AACH,CATM,C;;AAWA,GAAMO,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAQC,SAAR,CAAsB;AACnD,GAAI,CAACD,KAAL,CAAY,MAAOC,CAAAA,SAAP;AACZ,OAAQD,KAAR;AACI,IAAK,WAAL;AACA,IAAK,SAAL;AACA,IAAK,WAAL;AACI,MAAOC,CAAAA,SAAP;AACJ;AACI,MAAOD,CAAAA,KAAP,CANR;;AAQH,CAVM,C;;AAYA,GAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,KAAD,CAAW;AACrC,GAAIA,KAAJ,cAAIA,KAAK,CAAEG,QAAX,CAAqB;AACjB,GAAIH,KAAK,CAACG,QAAN,CAAe,WAAf,CAAJ,CAAiC,MAAO,KAAP;AACjC,GAAIH,KAAK,CAACG,QAAN,CAAe,SAAf,CAAJ,CAA+B,MAAO,KAAP;AAC/B,GAAIH,KAAK,CAACG,QAAN,CAAe,WAAf,CAAJ,CAAiC,MAAO,KAAP;AACpC;AACD,MAAO,MAAP;AACH,CAPM,C","sourcesContent":["export const isSystemMac = process.platform === 'darwin';\n\nexport const isSystemLinux = process.platform === 'linux';\n\nexport const isSystemWin = process.platform === 'win32';\n\nexport const replaceOverridesInString = (string, overrides, mask) => {\n    let replacedString = string;\n    if (overrides?.length && replacedString?.replace) {\n        overrides.forEach((v) => {\n            const regEx = new RegExp(v, 'g');\n            replacedString = replacedString.replace(regEx, mask);\n        });\n    }\n    return replacedString;\n};\n\nexport const getValidLocalhost = (value, localhost) => {\n    if (!value) return localhost;\n    switch (value) {\n        case 'localhost':\n        case '0.0.0.0':\n        case '127.0.0.1':\n            return localhost;\n        default:\n            return value;\n    }\n};\n\nexport const isUrlLocalhost = (value) => {\n    if (value?.includes) {\n        if (value.includes('localhost')) return true;\n        if (value.includes('0.0.0.0')) return true;\n        if (value.includes('127.0.0.1')) return true;\n    }\n    return false;\n};\n"],"file":"utils.js"}