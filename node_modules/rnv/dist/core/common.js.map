{"version":3,"sources":["../../src/core/common.js"],"names":["getTimestampPathsConfig","c","platform","timestampBuildFiles","pPath","path","join","paths","project","builds","dir","runtime","appId","getConfigProp","map","v","length","timestamp","getSourceExts","p","isServer","prefix","sExt","PLATFORMS","sourceExts","factors","platforms","fallbacks","filter","ext","includes","getCliArguments","program","args","rawArgs","argsCopy","missingArg","indexOf","undefined","arg","getSourceExtsAsString","addSystemInjects","injects","systemPropsInjects","forEach","item","push","sanitizeColor","val","key","white","rgb","rgbDecimal","hex","colorString","get","to","Math","round","confirmActiveBundler","skipActiveServerCheck","choices","name","type","warningMessage","port","selectedOption","getPlatformBuildDir","engine","getPlatformOutputDir","getPlatformProjectDir","getTemplateDir","platformTemplatesDirs","getTemplateProjectDir","getAppFolder","getAppTemplateFolder","CLI_PROPS","_getValueOrMergedObject","resultCli","resultScheme","resultPlatforms","resultCommon","Array","isArray","defaultVal","buildConfig","_getConfigProp","sourceObj","split","ps","scheme","keyArr","baseKey","shift","subKey","buildSchemes","getFlavouredProp","common","result","getConfigPropArray","configArr","files","defaultWorkspace","config","rnv","projectTemplates","engines","workspace","configPrivate","configLocal","appConfig","configs","configsPrivate","configsLocal","getAppId","id","idSuffix","getAppTitle","getAppVersion","package","version","getAppAuthor","author","getAppLicense","license","getEntryFile","entryFile","getGetJsBundleFile","getAppDescription","description","getAppVersionCode","versionCode","versionCodeFormat","vFormatArr","versionCodeMaxCount","verArr","v2","v3","asNumber","Number","isNaN","maxDigits","substr","toAdd","verCountDiff","extraVersionLen","num","output","toString","isMonorepo","resolve","__dirname","_err","getMonorepoRoot","areNodeModulesInstalled","getBuildsFolder","customPath","pp","getIP","ip","address","checkPortInUse","Promise","reject","err","availablePort","parseInt","obj","val1","getBuildFilePath","filePath","sp","sp2","appConfigBase","sp3","waitForUrl","url","attempts","maxAttempts","CHECK_INTEVAL","interval","setInterval","axios","then","catch","clearInterval","importPackageFromProject","pkg","require","default","writeCleanFile","logTask","logWarning","logError","logSuccess","logDebug"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;;AAEO,GAAMA,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,CAAD,CAAIC,QAAJ,CAAiB;AACpD,GAAIC,CAAAA,mBAAJ;AACA,GAAMC,CAAAA,KAAK,CAAGC,cAAKC,IAAL;AACVL,CAAC,CAACM,KAAF,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,GADb;AAEPT,CAAC,CAACU,OAAF,CAAUC,KAFH,KAEYV,QAFZ,CAAd;;AAIA,GAAIA,QAAQ,GAAK,KAAjB,CAAwB;AACpBC,mBAAmB,CAAGU,aAAa,CAACZ,CAAD,CAAIC,QAAJ,CAAc,qBAAd,CAAqC,EAArC,CAAb,CAAsDY,GAAtD,CAA2D,SAAAC,CAAC,QAAIV,eAAKC,IAAL,CAAUF,KAAV,CAAiBW,CAAjB,CAAJ,EAA5D,CAAtB;AACH;AACD,yBAAIZ,mBAAJ,eAAI,qBAAqBa,MAAzB,CAAiC;AAC7B,MAAO,CAAET,KAAK,CAAEJ,mBAAT,CAA8Bc,SAAS,CAAEhB,CAAC,CAACU,OAAF,CAAUM,SAAnD,CAAP;AACH;AACD,MAAO,KAAP;AACH,CAbM,C;;AAeA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACjB,CAAD,CAAIkB,CAAJ,CAAOC,QAAP,CAAiC,qBAAhBC,CAAAA,MAAgB,2DAAP,EAAO;;;AAG1D,GAAMC,CAAAA,IAAI,eAAGC,qBAAUJ,CAAV,CAAH,eAAG,aAAcK,UAA3B;AACA,GAAIF,IAAJ,CAAU;AACN,MAAO,0CAAIA,IAAI,CAACG,OAAT,kCAAqBH,IAAI,CAACI,SAA1B,kCAAwCJ,IAAI,CAACK,SAA7C,GAAwDb,GAAxD,CAA4D,SAAAC,CAAC,WAAOM,MAAP,CAAgBN,CAAhB,EAA7D,EAAkFa,MAAlF,CAAyF,SAAAC,GAAG,QAAIT,CAAAA,QAAQ,EAAI,CAACS,GAAG,CAACC,QAAJ,CAAa,SAAb,CAAjB,EAA5F,CAAP;AACH;AACD,MAAO,EAAP;AACH,CARM,C;;AAUA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAC9B,CAAD,CAAO;AACRA,CAAC,CAAC+B,OADM,CAC1BC,IAD0B,YAC1BA,IAD0B,CACpBC,OADoB,YACpBA,OADoB;AAElC,GAAMC,CAAAA,QAAQ,iCAAOF,IAAP,CAAd;AACA,GAAIG,CAAAA,UAAU,CAAGF,OAAO,CAACA,OAAO,CAACG,OAAR,CAAgBF,QAAQ,CAAC,CAAD,CAAxB,EAA+B,CAAhC,CAAxB;AACA,GAAI,cAAAC,UAAU,OAAV,oBAAa,CAAb,KAAoB,GAAxB,CAA6B;AACzB,GAAIF,OAAO,CAACA,OAAO,CAACG,OAAR,CAAgBF,QAAQ,CAAC,CAAD,CAAxB,EAA+B,CAAhC,CAAX,CAA+C;AAC3CC,UAAU,CAAGF,OAAO,CAACA,OAAO,CAACG,OAAR,CAAgBF,QAAQ,CAAC,CAAD,CAAxB,EAA+B,CAAhC,CAApB;AACH,CAFD,IAEO;AACHC,UAAU,CAAGE,SAAb;AACH;AACJ;AACD,GAAIJ,OAAO,CAAClB,MAAR,GAAmB,CAAvB,CAA0BoB,UAAU,CAAGE,SAAb;AAC1BH,QAAQ,CAAC,CAAD,CAAR,CAAcC,UAAd;AACA,MAAOD,CAAAA,QAAQ,CAACP,MAAT,CAAgB,SAAAW,GAAG,QAAI,CAAC,CAACA,GAAN,EAAnB,CAAP;AACH,CAdM,C;;AAgBA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACvC,CAAD,CAAIkB,CAAJ,CAAU;AAC3C,GAAMK,CAAAA,UAAU,CAAGN,aAAa,CAACjB,CAAD,CAAIkB,CAAJ,CAAhC;AACA,MAAOK,CAAAA,UAAU,CAACR,MAAX,MAAyBQ,UAAU,CAAClB,IAAX,CAAgB,KAAhB,CAAzB,MAAsD,IAA7D;AACH,CAHM,C;;AAKA,GAAMmC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACxC,CAAD,CAAIyC,OAAJ,CAAgB;AAC5C,GAAI,CAACzC,CAAC,CAAC0C,kBAAP,CAA2B1C,CAAC,CAAC0C,kBAAF,CAAuB,EAAvB;AAC3B,GAAID,OAAJ,CAAa;AACTA,OAAO,CAACE,OAAR,CAAgB,SAACC,IAAD,CAAU;AACtB5C,CAAC,CAAC0C,kBAAF,CAAqBG,IAArB,CAA0BD,IAA1B;AACH,CAFD;AAGH;AACJ,CAPM,C;;AASA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,CAAMC,GAAN,CAAc;AACvC,GAAI,CAACD,GAAL,CAAU;AACN;AACuB,oBAAQE,KAAR,CAAcD,GAAd,CADvB;;AAGA,MAAO;AACHE,GAAG,CAAE,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,CAAhB,CADF;AAEHC,UAAU,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAFT;AAGHC,GAAG,CAAE,SAHF,CAAP;;AAKH;;AAED,GAAMF,CAAAA,GAAG,CAAGG,qBAAYC,GAAZ,CAAgBJ,GAAhB,CAAoBH,GAApB,CAAZ;AACA,GAAMK,CAAAA,GAAG,CAAGC,qBAAYE,EAAZ,CAAeH,GAAf,CAAmBF,GAAnB,CAAZ;;AAEA,MAAO;AACHA,GAAG,CAAHA,GADG;AAEHC,UAAU,CAAED,GAAG,CAACrC,GAAJ,CAAQ,SAAAC,CAAC,QAAKA,CAAAA,CAAC,CAAG,CAAJ,CAAQ0C,IAAI,CAACC,KAAL,CAAY3C,CAAC,CAAG,GAAL,CAAY,EAAvB,EAA6B,EAArC,CAA0CA,CAA/C,EAAT,CAFT;AAGHsC,GAAG,CAAHA,GAHG,CAAP;;AAKH,CApBM,C;;AAsBA,GAAMM,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAO1D,CAAP;AAC5BA,CAAC,CAACU,OAAF,CAAUiD,qBADkB,yDACY,IADZ;;AAG1BC,OAH0B,CAGhB,CAAC,kCAAD,CAAqC,sBAArC,CAHgB;;AAKC,2BAAe;AAC5CC,IAAI,CAAE,gBADsC;AAE5CC,IAAI,CAAE,MAFsC;AAG5CF,OAAO,CAAPA,OAH4C;AAI5CG,cAAc,YAAa/D,CAAC,CAACC,QAAf;AACV,oBAAQgD,KAAR,CAAcjD,CAAC,CAACU,OAAF,CAAUsD,IAAxB,CADU,mBAJ8B,CAAf,CALD,6CAKxBC,cALwB,uBAKxBA,cALwB;;;;AAc5BL,OAAO,CAAC,CAAD,CAAP,GAAeK,cAda;AAetB,sBAASjE,CAAC,CAACU,OAAF,CAAUsD,IAAnB,CAfsB;;AAiBrB,KAjBqB;;AAmBzB,IAnByB,wEAA7B,C;;;AAsBA,GAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAClE,CAAD,CAAO;AACtC,GAAI,CAACA,CAAC,CAACU,OAAF,CAAUyD,MAAf,CAAuB;AACnB,qBAAS,2DAAT;AACA,MAAO,KAAP;AACH;AACD,MAAOnE,CAAAA,CAAC,CAACU,OAAF,CAAUyD,MAAV,CAAiBD,mBAAjB,CAAqClE,CAArC,CAAP;AACH,CANM,C;;AAQA,GAAMoE,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACpE,CAAD,CAAO;AACvC,GAAI,CAACA,CAAC,CAACU,OAAF,CAAUyD,MAAf,CAAuB;AACnB,qBAAS,4DAAT;AACA,MAAO,KAAP;AACH;AACD,MAAOnE,CAAAA,CAAC,CAACU,OAAF,CAAUyD,MAAV,CAAiBC,oBAAjB,CAAsCpE,CAAtC,CAAP;AACH,CANM,C;;AAQA,GAAMqE,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACrE,CAAD,CAAO;AACxC,GAAI,CAACA,CAAC,CAACU,OAAF,CAAUyD,MAAf,CAAuB;AACnB,qBAAS,6DAAT;AACA,MAAO,KAAP;AACH;AACD,MAAOnE,CAAAA,CAAC,CAACU,OAAF,CAAUyD,MAAV,CAAiBE,qBAAjB,CAAuCrE,CAAvC,CAAP;AACH,CANM,C;;AAQA,GAAMsE,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAtE,CAAC,QAAII,eAAKC,IAAL;AAC/BL,CAAC,CAACM,KAAF,CAAQC,OAAR,CAAgBgE,qBAAhB,CAAsCvE,CAAC,CAACC,QAAxC,CAD+B,IACuBD,CAAC,CAACC,QADzB,CAAJ,EAAxB,C;;;AAIA,GAAMuE,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACxE,CAAD,CAAO;AACxC,GAAI,CAACA,CAAC,CAACU,OAAF,CAAUyD,MAAf,CAAuB;AACnB,qBAAS,6DAAT;AACA,MAAO,KAAP;AACH;AACD,MAAOnE,CAAAA,CAAC,CAACU,OAAF,CAAUyD,MAAV,CAAiBK,qBAAjB,CAAuCxE,CAAvC,CAAP;AACH,CANM,C;;;AASA,GAAMyE,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAzE,CAAC,QAAII,eAAKC,IAAL,CAAUL,CAAC,CAACM,KAAF,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,GAAjC,CAAyCT,CAAC,CAACU,OAAF,CAAUC,KAAnD,KAA4DX,CAAC,CAACC,QAA9D,CAAJ,EAAtB,C;;;AAGA,GAAMyE,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAC1E,CAAD,CAAIC,QAAJ,QAAiBG,eAAKC,IAAL;AACjDL,CAAC,CAACM,KAAF,CAAQC,OAAR,CAAgBgE,qBAAhB,CAAsCtE,QAAtC,CADiD,IACGA,QADH,CAAjB,EAA7B,C;;;AAIA,GAAM0E,CAAAA,SAAS,CAAG;AACrB,mBADqB;AAErB,kBAFqB;AAGrB,2BAHqB,CAAlB,C;;;AAMP,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B;AAC5BC,SAD4B;AAE5BC,YAF4B;AAG5BC,eAH4B;AAI5BC,YAJ4B;AAK3B;AACD,GAAIH,SAAS,GAAKxC,SAAlB,CAA6B;AACzB,MAAOwC,CAAAA,SAAP;AACH;AACD,GAAIC,YAAY,GAAKzC,SAArB,CAAgC;AAC5B,GAAI4C,KAAK,CAACC,OAAN,CAAcJ,YAAd,GAA+B,MAAOA,CAAAA,YAAP,GAAwB,QAA3D,CAAqE,CAAE,MAAOA,CAAAA,YAAP,CAAsB;AAC7F,GAAM/B,CAAAA,GAAG,CAAG;AACRiC,YAAY,EAAI,EADR;AAERD,eAAe,EAAI,EAFX;AAGRD,YAHQ,CAAZ;;AAKA,MAAO/B,CAAAA,GAAP;AACH;AACD,GAAIgC,eAAe,GAAK1C,SAAxB,CAAmC;AAC/B;AACI4C,KAAK,CAACC,OAAN,CAAcH,eAAd;AACG,MAAOA,CAAAA,eAAP,GAA2B,QAFlC;AAGE,CAAE,MAAOA,CAAAA,eAAP,CAAyB;AAC7B,MAAO,sBAAcC,YAAY,EAAI,EAA9B,CAAkCD,eAAlC,CAAP;AACH;AACD,GAAIA,eAAe,GAAK,IAAxB,CAA8B,MAAO,KAAP;AAC9B,MAAOC,CAAAA,YAAP;AACH,CA3BD;;AA6BO,GAAMpE,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACZ,CAAD,CAAIC,QAAJ,CAAc+C,GAAd,CAAmBmC,UAAnB,CAAkC;AAC3D,GAAI,CAACnF,CAAC,CAACoF,WAAP,CAAoB;AAChB,qBAAS,4CAAT;AACA,MAAO,KAAP;AACH;AACD,MAAOC,CAAAA,cAAc,CAACrF,CAAD,CAAIC,QAAJ,CAAc+C,GAAd,CAAmBmC,UAAnB,CAA+BnF,CAAC,CAACoF,WAAjC,CAArB;AACH,CANM,C;;AAQA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACrF,CAAD,CAAIC,QAAJ,CAAc+C,GAAd,CAAmBmC,UAAnB,CAA+BG,SAA/B,CAA6C;AACvE,GAAI,CAACA,SAAL,CAAgB,MAAO,KAAP;;AAEhB,GAAI,CAACtC,GAAD,EAAQ,CAACA,GAAG,CAACuC,KAAjB,CAAwB;AACpB,qBAAS,6BAAT;AACA,MAAO,KAAP;AACH;AACD,GAAMrE,CAAAA,CAAC,uBAAGoE,SAAS,CAAC7D,SAAb,eAAG,qBAAsBxB,QAAtB,CAAV;AACA,GAAMuF,CAAAA,EAAE,CAAGxF,CAAC,CAACU,OAAF,CAAU+E,MAArB;AACA,GAAMC,CAAAA,MAAM,CAAG1C,GAAG,CAACuC,KAAJ,CAAU,GAAV,CAAf;AACA,GAAMI,CAAAA,OAAO,CAAGD,MAAM,CAACE,KAAP,EAAhB;AACA,GAAMC,CAAAA,MAAM,CAAGH,MAAM,CAACrF,IAAP,CAAY,GAAZ,CAAf;;AAEA,GAAI0E,CAAAA,eAAJ;AACA,GAAIU,CAAAA,MAAJ;AACA,GAAIvE,CAAJ,CAAO;AACHuE,MAAM,CAAGvE,CAAC,CAAC4E,YAAF,CAAiB5E,CAAC,CAAC4E,YAAF,CAAeN,EAAf,CAAjB,CAAsCnD,SAA/C;AACA0C,eAAe,CAAGgB,gBAAgB;AAC9B/F,CAD8B;AAE9BsF,SAAS,CAAC7D,SAAV,CAAoBxB,QAApB,CAF8B;AAG9B0F,OAH8B,CAAlC;;AAKH;;AAEDF,MAAM,CAAGA,MAAM,EAAI,EAAnB;AACA,GAAMZ,CAAAA,SAAS,CAAGF,SAAS,CAAC9C,QAAV,CAAmB8D,OAAnB,EAA8B3F,CAAC,CAAC+B,OAAF,CAAU4D,OAAV,CAA9B,CAAmDtD,SAArE;AACA,GAAMyC,CAAAA,YAAY,CAAGW,MAAM,CAACE,OAAD,CAA3B;AACA,GAAMX,CAAAA,YAAY,CAAGe,gBAAgB,CAAC/F,CAAD,CAAIsF,SAAS,CAACU,MAAd,CAAsBL,OAAtB,CAArC;;AAEA,GAAIM,CAAAA,MAAM,CAAGrB,uBAAuB;AAChCC,SADgC;AAEhCC,YAFgC;AAGhCC,eAHgC;AAIhCC,YAJgC,CAApC;;AAMA,GAAIiB,MAAM,GAAK5D,SAAX,EAAwB4D,MAAM,GAAK,IAAvC,CAA6CA,MAAM,CAAGd,UAAT;AAC7C,GAAI,MAAOc,CAAAA,MAAP,GAAkB,QAAlB,EAA8BJ,MAAM,CAAC9E,MAAzC,CAAiD;AAC7C,MAAO,oBAAKkF,MAAL,CAAaJ,MAAb,CAAP;AACH;AACD,MAAOI,CAAAA,MAAP;AACH,CAxCM,C;;;AA2CA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAClG,CAAD,CAAIC,QAAJ,CAAc+C,GAAd,CAAsB;AACpD,GAAMiD,CAAAA,MAAM,CAAG,EAAf;AACA,GAAME,CAAAA,SAAS;AACXnG,CAAC,CAACoG,KAAF,CAAQC,gBAAR,CAAyBC,MADd;AAEXtG,CAAC,CAACoG,KAAF,CAAQG,GAAR,CAAYC,gBAAZ,CAA6BF,MAFlB;;;AAKXtG,CAAC,CAACoG,KAAF,CAAQG,GAAR,CAAYE,OAAZ,CAAoBH,MALT;AAMXtG,CAAC,CAACoG,KAAF,CAAQM,SAAR,CAAkBJ,MANP;AAOXtG,CAAC,CAACoG,KAAF,CAAQM,SAAR,CAAkBC,aAPP;AAQX3G,CAAC,CAACoG,KAAF,CAAQM,SAAR,CAAkBE,WARP;AASX5G,CAAC,CAACoG,KAAF,CAAQM,SAAR,CAAkBnG,OAAlB,CAA0B+F,MATf;AAUXtG,CAAC,CAACoG,KAAF,CAAQM,SAAR,CAAkBnG,OAAlB,CAA0BoG,aAVf;AAWX3G,CAAC,CAACoG,KAAF,CAAQM,SAAR,CAAkBnG,OAAlB,CAA0BqG,WAXf;AAYR5G,CAAC,CAACoG,KAAF,CAAQM,SAAR,CAAkBG,SAAlB,CAA4BC,OAZpB;AAaR9G,CAAC,CAACoG,KAAF,CAAQM,SAAR,CAAkBG,SAAlB,CAA4BE,cAbpB;AAcR/G,CAAC,CAACoG,KAAF,CAAQM,SAAR,CAAkBG,SAAlB,CAA4BG,YAdpB;AAeXhH,CAAC,CAACoG,KAAF,CAAQ7F,OAAR,CAAgB+F,MAfL;AAgBXtG,CAAC,CAACoG,KAAF,CAAQ7F,OAAR,CAAgBoG,aAhBL;AAiBX3G,CAAC,CAACoG,KAAF,CAAQ7F,OAAR,CAAgBqG,WAjBL;AAkBR5G,CAAC,CAACoG,KAAF,CAAQS,SAAR,CAAkBC,OAlBV;AAmBR9G,CAAC,CAACoG,KAAF,CAAQS,SAAR,CAAkBE,cAnBV;AAoBR/G,CAAC,CAACoG,KAAF,CAAQS,SAAR,CAAkBG,YApBV,EAAf;;AAsBAb,SAAS,CAACxD,OAAV,CAAkB,SAAC2D,MAAD,CAAY;AAC1B,GAAMvD,CAAAA,GAAG,CAAGsC,cAAc,CAACrF,CAAD,CAAIC,QAAJ,CAAc+C,GAAd,CAAmB,IAAnB,CAAyBsD,MAAzB,CAA1B;AACA,GAAIvD,GAAJ,CAAS;AACLkD,MAAM,CAACpD,IAAP,CAAYE,GAAZ;AACH;AACJ,CALD;;;AAQA,MAAOkD,CAAAA,MAAP;AACH,CAjCM,C;;;AAoCA,GAAMgB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACjH,CAAD,CAAIC,QAAJ,CAAiB;AACrC,GAAMiH,CAAAA,EAAE,CAAGtG,aAAa,CAACZ,CAAD,CAAIC,QAAJ,CAAc,IAAd,CAAxB;AACA,GAAMkH,CAAAA,QAAQ,CAAGvG,aAAa,CAACZ,CAAD,CAAIC,QAAJ,CAAc,UAAd,CAA9B;AACA,MAAOkH,CAAAA,QAAQ,IAAMD,EAAN,CAAWC,QAAX,CAAwBD,EAAvC;AACH,CAJM,C;;AAMA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACpH,CAAD,CAAIC,QAAJ,QAAiBW,CAAAA,aAAa,CAACZ,CAAD,CAAIC,QAAJ,CAAc,OAAd,CAA9B,EAApB,C;;AAEA,GAAMoH,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACrH,CAAD,CAAIC,QAAJ,kCAAiBW,CAAAA,aAAa,CAACZ,CAAD,CAAIC,QAAJ,CAAc,SAAd,CAAb,0BAAyCD,CAAC,CAACoG,KAAF,CAAQ7F,OAAR,CAAgB+G,OAAzD,eAAyC,sBAAyBC,OAAlE,CAAjB,EAAtB,C;;AAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACxH,CAAD,CAAIC,QAAJ,mCAAiBW,CAAAA,aAAa,CAACZ,CAAD,CAAIC,QAAJ,CAAc,QAAd,CAAb,2BAAwCD,CAAC,CAACoG,KAAF,CAAQ7F,OAAR,CAAgB+G,OAAxD,eAAwC,uBAAyBG,MAAjE,CAAjB,EAArB,C;;AAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAC1H,CAAD,CAAIC,QAAJ,mCAAiBW,CAAAA,aAAa,CAACZ,CAAD,CAAIC,QAAJ,CAAc,SAAd,CAAb,2BAAyCD,CAAC,CAACoG,KAAF,CAAQ7F,OAAR,CAAgB+G,OAAzD,eAAyC,uBAAyBK,OAAlE,CAAjB,EAAtB,C;;AAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAC5H,CAAD,CAAIC,QAAJ,gFAAiBD,CAAC,CAACoF,WAAF,CAAc3D,SAA/B,uCAAiB,sBAA0BxB,QAA1B,CAAjB,eAAiB,uBAAqC4H,SAAtD,EAArB,C;;AAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAC9H,CAAD,CAAIC,QAAJ,QAAiBW,CAAAA,aAAa,CAACZ,CAAD,CAAIC,QAAJ,CAAc,iBAAd,CAA9B,EAA3B,C;;AAEA,GAAM8H,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAC/H,CAAD,CAAIC,QAAJ,mCAAiBW,CAAAA,aAAa,CAACZ,CAAD,CAAIC,QAAJ,CAAc,aAAd,CAAb;AAC3CD,CAAC,CAACoG,KAAF,CAAQ7F,OAAR,CAAgB+G,OAD2B,eAC3C,uBAAyBU,WADkB,CAAjB,EAA1B,C;;AAGA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACjI,CAAD,CAAIC,QAAJ,CAAiB;AAC9C,GAAMiI,CAAAA,WAAW,CAAGtH,aAAa,CAACZ,CAAD,CAAIC,QAAJ,CAAc,aAAd,CAAjC;AACA,GAAIiI,WAAJ,CAAiB,MAAOA,CAAAA,WAAP;AACjB,GAAMX,CAAAA,OAAO,CAAGF,aAAa,CAACrH,CAAD,CAAIC,QAAJ,CAA7B;AACA,GAAMkI,CAAAA,iBAAiB,CAAGvH,aAAa,CAACZ,CAAD,CAAIC,QAAJ,CAAc,mBAAd,CAAmC,UAAnC,CAAvC;AACA,GAAMmI,CAAAA,UAAU,CAAGD,iBAAiB,CAAC5C,KAAlB,CAAwB,GAAxB,EAA6B1E,GAA7B,CAAiC,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,MAAN,EAAlC,CAAnB;AACA,GAAMsH,CAAAA,mBAAmB,CAAGD,UAAU,CAACrH,MAAvC;;AAEA,GAAMuH,CAAAA,MAAM,CAAG,EAAf;AACAf,OAAO,CAAChC,KAAR,CAAc,GAAd,EAAmB1E,GAAnB,CAAuB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACyE,KAAF,CAAQ,GAAR,EAAa1E,GAAb,CAAiB,SAAA0H,EAAE,QAAIA,CAAAA,EAAE,CAAChD,KAAH,CAAS,GAAT,EAAc5C,OAAd,CAAsB,SAAC6F,EAAD,CAAQ;AAC7E,GAAMC,CAAAA,QAAQ,CAAGC,MAAM,CAACF,EAAD,CAAvB;AACA,GAAI,CAACE,MAAM,CAACC,KAAP,CAAaF,QAAb,CAAL,CAA6B;AACzB,GAAI1F,CAAAA,GAAG,CAAGyF,EAAV;AACA,GAAMI,CAAAA,SAAS,CAAGR,UAAU,CAACE,MAAM,CAACvH,MAAP,CAAgB,CAAjB,CAAV,EAAiC,CAAnD;AACA,GAAIyH,EAAE,CAACzH,MAAH,CAAY6H,SAAhB,CAA2B;AACvB7F,GAAG,CAAGyF,EAAE,CAACK,MAAH,CAAU,CAAV,CAAaD,SAAb,CAAN;AACH,CAFD,IAEO,IAAIJ,EAAE,CAACzH,MAAH,CAAY6H,SAAhB,CAA2B;AAC9B,GAAIE,CAAAA,KAAK,CAAGF,SAAS,CAAGJ,EAAE,CAACzH,MAA3B;AACA,MAAO+H,KAAK,CAAG,CAAf,CAAkB;AACd/F,GAAG,KAAOyF,EAAV;AACAM,KAAK;AACR;AACJ;AACDR,MAAM,CAACzF,IAAP,CAAYE,GAAZ;AACH;AACJ,CAhBkD,CAAJ,EAAnB,CAAJ,EAAxB;AAiBA,GAAIgG,CAAAA,YAAY,CAAGT,MAAM,CAACvH,MAAP,CAAgBsH,mBAAnC;AACA,GAAIU,YAAY,CAAG,CAAnB,CAAsB;AAClB,MAAOA,YAAY,CAAG,CAAtB,CAAyB;AACrB,GAAIC,CAAAA,eAAe,CAAGZ,UAAU,CAACC,mBAAmB,CAAGU,YAAvB,CAAhC;AACA,GAAIE,CAAAA,GAAG,CAAG,EAAV;AACA,MAAOD,eAAP,CAAwB;AACpBC,GAAG,EAAI,GAAP;AACAD,eAAe;AAClB;AACDV,MAAM,CAACzF,IAAP,CAAYoG,GAAZ;AACAF,YAAY;AACf;AACJ;AACD,GAAMG,CAAAA,MAAM,CAAGR,MAAM,CAACJ,MAAM,CAACjI,IAAP,CAAY,EAAZ,CAAD,CAAN,CAAwB8I,QAAxB,EAAf;;AAEA,MAAOD,CAAAA,MAAP;AACH,CA1CM,C;;AA4CA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM;AAC5B,GAAI;AACA,4BAAahJ,cAAKiJ,OAAL,CAAaC,SAAb,CAAwB,wBAAxB,CAAb;AACA,MAAO,KAAP;AACH,CAAC,MAAOC,IAAP,CAAa;AACX,MAAO,MAAP;AACH;AACJ,CAPM,C;;AASA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM;AACjC,GAAIJ,UAAU,EAAd,CAAkB;AACd,MAAOhJ,eAAKiJ,OAAL,CAAaC,SAAb,CAAwB,aAAxB,CAAP;AACH;AACJ,CAJM,C;;AAMA,GAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,SAAM,CAAC,CAAC,uBAAU,SAAV,CAAqB,KAArB,CAAR,EAAhC,C;;AAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAC1J,CAAD,CAAIC,QAAJ,CAAc0J,UAAd,CAA6B;AACxD,GAAMC,CAAAA,EAAE,CAAGD,UAAU,EAAI3J,CAAC,CAACM,KAAF,CAAQuG,SAAR,CAAkBpG,GAA3C;;;;AAIA,GAAMS,CAAAA,CAAC,CAAGd,cAAKC,IAAL,CAAUuJ,EAAV,WAAwB3J,QAAxB,KAAoCD,CAAC,CAACU,OAAF,CAAU+E,MAA9C,CAAV;AACA,GAAI,4BAAavE,CAAb,CAAJ,CAAqB,MAAOA,CAAAA,CAAP;AACrB,MAAOd,eAAKC,IAAL,CAAUuJ,EAAV,WAAwB3J,QAAxB,CAAP;AACH,CARM,C;;AAUA,GAAM4J,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,SAAMC,aAAGC,OAAH,EAAN,EAAd,C;;AAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAChK,CAAD,CAAIC,QAAJ,CAAc+D,IAAd,QAAuB,IAAIiG,CAAAA,OAAJ,CAAY,SAACZ,OAAD,CAAUa,MAAV,CAAqB;AAClF,GAAIlG,IAAI,GAAK3B,SAAT,EAAsB2B,IAAI,GAAK,IAAnC,CAAyC;AACrCqF,OAAO,CAAC,KAAD,CAAP;AACA;AACH;AACD,wBAAWrF,IAAX,CAAiB,SAACmG,GAAD,CAAMC,aAAN,CAAwB;AACrC,GAAID,GAAJ,CAAS;AACLD,MAAM,CAACC,GAAD,CAAN;AACA;AACH;AACD,GAAMlE,CAAAA,MAAM,CAAGoE,QAAQ,CAACrG,IAAD,CAAO,EAAP,CAAR,GAAuBqG,QAAQ,CAACD,aAAD,CAAgB,EAAhB,CAA9C;AACAf,OAAO,CAACpD,MAAD,CAAP;AACH,CAPD;AAQH,CAboD,CAAvB,EAAvB,C;;AAeA,GAAMF,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAC/F,CAAD,CAAIsK,GAAJ,CAAStH,GAAT,CAAiB;AAC7C,GAAI,CAACA,GAAD,EAAQ,CAACsH,GAAb,CAAkB,MAAO,KAAP;AAClB,GAAMC,CAAAA,IAAI,CAAGD,GAAG,CAAItH,GAAJ,KAAWhD,CAAC,CAACU,OAAF,CAAU+E,MAArB,CAAhB;AACA,GAAI8E,IAAJ,CAAU,MAAOA,CAAAA,IAAP;AACV,MAAOD,CAAAA,GAAG,CAACtH,GAAD,CAAV;AACH,CALM,C;;AAOA,GAAMwH,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACxK,CAAD,CAAIC,QAAJ,CAAcwK,QAAd,CAA2B;;AAEvD,GAAIC,CAAAA,EAAE,CAAGtK,cAAKC,IAAL,CAAUqE,oBAAoB,CAAC1E,CAAD,CAAIC,QAAJ,CAA9B,CAA6CwK,QAA7C,CAAT;;AAEA,GAAME,CAAAA,GAAG,CAAGvK,cAAKC,IAAL;AACRqJ,eAAe,CAAC1J,CAAD,CAAIC,QAAJ,CAAcD,CAAC,CAACM,KAAF,CAAQC,OAAR,CAAgBqK,aAAhB,CAA8BnK,GAA5C,CADP;AAERgK,QAFQ,CAAZ;;AAIA,GAAI,4BAAaE,GAAb,CAAJ,CAAuBD,EAAE,CAAGC,GAAL;;AAEvB,GAAME,CAAAA,GAAG,CAAGzK,cAAKC,IAAL,CAAUqJ,eAAe,CAAC1J,CAAD,CAAIC,QAAJ,CAAzB,CAAwCwK,QAAxC,CAAZ;AACA,GAAI,4BAAaI,GAAb,CAAJ,CAAuBH,EAAE,CAAGG,GAAL;AACvB,MAAOH,CAAAA,EAAP;AACH,CAbM,C;;AAeA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,GAAG,QAAI,IAAId,CAAAA,OAAJ,CAAY,SAACZ,OAAD,CAAUa,MAAV,CAAqB;AAC9D,GAAIc,CAAAA,QAAQ,CAAG,CAAf;AACA,GAAMC,CAAAA,WAAW,CAAG,EAApB;AACA,GAAMC,CAAAA,aAAa,CAAG,IAAtB;AACA,GAAMC,CAAAA,QAAQ,CAAGC,WAAW,CAAC,UAAM;AAC/BC,eAAM/H,GAAN,CAAUyH,GAAV;AACKO,IADL,CACU,UAAM;AACRjC,OAAO,CAAC,IAAD,CAAP;AACH,CAHL;AAIKkC,KAJL,CAIW,UAAM;AACTP,QAAQ;AACR,GAAIA,QAAQ,CAAGC,WAAf,CAA4B;AACxBO,aAAa,CAACL,QAAD,CAAb;;AAEA,MAAOjB,CAAAA,MAAM;AACT,8CADS,CAAb;;AAGH;AACJ,CAbL;AAcH,CAf2B,CAezBgB,aAfyB,CAA5B;AAgBH,CApBgC,CAAJ,EAAtB,C;;AAsBA,GAAMO,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAAC5H,IAAD,CAAU;;;AAG9C,GAAM6H,CAAAA,GAAG,CAAGC,OAAO,CAAC,uBAAU9H,IAAV,CAAD,CAAnB;AACA,GAAI6H,GAAG,CAACE,OAAR,CAAiB,MAAOF,CAAAA,GAAG,CAACE,OAAX;AACjB,MAAOF,CAAAA,GAAP;AACH,CANM,C;;AAQQ;AACXlB,gBAAgB,CAAhBA,gBADW;AAEXd,eAAe,CAAfA,eAFW;AAGXjF,YAAY,CAAZA,YAHW;AAIXC,oBAAoB,CAApBA,oBAJW;AAKXuC,QAAQ,CAARA,QALW;AAMXG,WAAW,CAAXA,WANW;AAOXC,aAAa,CAAbA,aAPW;AAQXY,iBAAiB,CAAjBA,iBARW;AASX4D,cAAc,CAAdA,yBATW;AAUXjE,YAAY,CAAZA,YAVW;AAWXE,kBAAkB,CAAlBA,kBAXW;AAYXC,iBAAiB,CAAjBA,iBAZW;AAaXP,YAAY,CAAZA,YAbW;AAcXE,aAAa,CAAbA,aAdW;AAeX9G,aAAa,CAAbA,aAfW;AAgBXiJ,KAAK,CAALA,KAhBW;AAiBXG,cAAc,CAAdA,cAjBW;AAkBX8B,OAAO,CAAE,iBAAC/I,GAAD,CAAS;AACd;AACI,6EADJ;;AAGA,oBAAQA,GAAR;AACH,CAvBU;AAwBXgJ,UAAU,CAAE,oBAAChJ,GAAD,CAAS;AACjB;AACI,mFADJ;;AAGA,uBAAWA,GAAX;AACH,CA7BU;AA8BXiJ,QAAQ,CAAE,kBAACjJ,GAAD,CAAS;AACf;AACI,+EADJ;;AAGA,qBAASA,GAAT;AACH,CAnCU;AAoCXkJ,UAAU,CAAE,oBAAClJ,GAAD,CAAS;AACjB;AACI,+EADJ;;AAGA,uBAAWA,GAAX;AACH,CAzCU;AA0CXmJ,QAAQ,CAAE,kBAACnJ,GAAD,CAAS;AACf;AACI,+EADJ;;AAGA,qBAASA,GAAT;AACH,CA/CU,C","sourcesContent":["/* eslint-disable import/no-cycle */\nimport killPort from 'kill-port';\nimport path from 'path';\nimport detectPort from 'detect-port';\nimport ip from 'ip';\nimport axios from 'axios';\nimport lGet from 'lodash.get';\nimport colorString from 'color-string';\nimport { doResolve } from './resolve';\nimport { fsExistsSync, writeCleanFile } from './systemManager/fileutils';\nimport {\n    chalk,\n    logError,\n    logTask,\n    logWarning,\n    logDebug,\n    logSuccess\n} from './systemManager/logger';\nimport { PLATFORMS } from './constants';\nimport { inquirerPrompt } from '../cli/prompt';\n\nexport const getTimestampPathsConfig = (c, platform) => {\n    let timestampBuildFiles;\n    const pPath = path.join(\n        c.paths.project.builds.dir,\n        `${c.runtime.appId}_${platform}`\n    );\n    if (platform === 'web') {\n        timestampBuildFiles = getConfigProp(c, platform, 'timestampBuildFiles', []).map((v => path.join(pPath, v)));\n    }\n    if (timestampBuildFiles?.length) {\n        return { paths: timestampBuildFiles, timestamp: c.runtime.timestamp };\n    }\n    return null;\n};\n\nexport const getSourceExts = (c, p, isServer, prefix = '') => {\n    // IMPORTANT: do not replace \"p\" with c.platform as this has to\n    // be injected from above to generate multiple configs\n    const sExt = PLATFORMS[p]?.sourceExts;\n    if (sExt) {\n        return [...sExt.factors, ...sExt.platforms, ...sExt.fallbacks].map(v => `${prefix}${v}`).filter(ext => isServer || !ext.includes('server.'));\n    }\n    return [];\n};\n\nexport const getCliArguments = (c) => {\n    const { args, rawArgs } = c.program;\n    const argsCopy = [...args];\n    let missingArg = rawArgs[rawArgs.indexOf(argsCopy[1]) + 1];\n    if (missingArg?.[0] === '-') {\n        if (rawArgs[rawArgs.indexOf(argsCopy[1]) + 2]) {\n            missingArg = rawArgs[rawArgs.indexOf(argsCopy[1]) + 2];\n        } else {\n            missingArg = undefined;\n        }\n    }\n    if (rawArgs.length === 3) missingArg = undefined;\n    argsCopy[2] = missingArg;\n    return argsCopy.filter(arg => !!arg);\n};\n\nexport const getSourceExtsAsString = (c, p) => {\n    const sourceExts = getSourceExts(c, p);\n    return sourceExts.length ? `['${sourceExts.join(\"','\")}']` : '[]';\n};\n\nexport const addSystemInjects = (c, injects) => {\n    if (!c.systemPropsInjects) c.systemPropsInjects = [];\n    if (injects) {\n        injects.forEach((item) => {\n            c.systemPropsInjects.push(item);\n        });\n    }\n};\n\nexport const sanitizeColor = (val, key) => {\n    if (!val) {\n        logWarning(\n            `You are missing ${chalk().white(key)} in your renative config. will use default #FFFFFF instead`\n        );\n        return {\n            rgb: [255, 255, 255, 1],\n            rgbDecimal: [1, 1, 1, 1],\n            hex: '#FFFFFF'\n        };\n    }\n\n    const rgb = colorString.get.rgb(val);\n    const hex = colorString.to.hex(rgb);\n\n    return {\n        rgb,\n        rgbDecimal: rgb.map(v => (v > 1 ? Math.round((v / 255) * 10) / 10 : v)),\n        hex\n    };\n};\n\nexport const confirmActiveBundler = async (c) => {\n    if (c.runtime.skipActiveServerCheck) return true;\n\n    const choices = ['Restart the server (recommended)', 'Use existing session'];\n\n    const { selectedOption } = await inquirerPrompt({\n        name: 'selectedOption',\n        type: 'list',\n        choices,\n        warningMessage: `Another ${c.platform} server at port ${\n            chalk().white(c.runtime.port)\n        } already running`\n    });\n\n    if (choices[0] === selectedOption) {\n        await killPort(c.runtime.port);\n    } else {\n        return false;\n    }\n    return true;\n};\n\nexport const getPlatformBuildDir = (c) => {\n    if (!c.runtime.engine) {\n        logError('getPlatformBuildDir not available without specific engine');\n        return null;\n    }\n    return c.runtime.engine.getPlatformBuildDir(c);\n};\n\nexport const getPlatformOutputDir = (c) => {\n    if (!c.runtime.engine) {\n        logError('getPlatformOutputDir not available without specific engine');\n        return null;\n    }\n    return c.runtime.engine.getPlatformOutputDir(c);\n};\n\nexport const getPlatformProjectDir = (c) => {\n    if (!c.runtime.engine) {\n        logError('getPlatformProjectDir not available without specific engine');\n        return null;\n    }\n    return c.runtime.engine.getPlatformProjectDir(c);\n};\n\nexport const getTemplateDir = c => path.join(\n    c.paths.project.platformTemplatesDirs[c.platform], `${c.platform}`\n);\n\nexport const getTemplateProjectDir = (c) => {\n    if (!c.runtime.engine) {\n        logError('getTemplateProjectDir not available without specific engine');\n        return null;\n    }\n    return c.runtime.engine.getTemplateProjectDir(c);\n};\n\n// DEPRECATED\nexport const getAppFolder = c => path.join(c.paths.project.builds.dir, `${c.runtime.appId}_${c.platform}`);\n\n// DEPRECATED\nexport const getAppTemplateFolder = (c, platform) => path.join(\n    c.paths.project.platformTemplatesDirs[platform], `${platform}`\n);\n\nexport const CLI_PROPS = [\n    'provisioningStyle',\n    'codeSignIdentity',\n    'provisionProfileSpecifier'\n];\n\nconst _getValueOrMergedObject = (\n    resultCli,\n    resultScheme,\n    resultPlatforms,\n    resultCommon\n) => {\n    if (resultCli !== undefined) {\n        return resultCli;\n    }\n    if (resultScheme !== undefined) {\n        if (Array.isArray(resultScheme) || typeof resultScheme !== 'object') { return resultScheme; }\n        const val = Object.assign(\n            resultCommon || {},\n            resultPlatforms || {},\n            resultScheme\n        );\n        return val;\n    }\n    if (resultPlatforms !== undefined) {\n        if (\n            Array.isArray(resultPlatforms)\n            || typeof resultPlatforms !== 'object'\n        ) { return resultPlatforms; }\n        return Object.assign(resultCommon || {}, resultPlatforms);\n    }\n    if (resultPlatforms === null) return null;\n    return resultCommon;\n};\n\nexport const getConfigProp = (c, platform, key, defaultVal) => {\n    if (!c.buildConfig) {\n        logError('getConfigProp: c.buildConfig is undefined!');\n        return null;\n    }\n    return _getConfigProp(c, platform, key, defaultVal, c.buildConfig);\n};\n\nexport const _getConfigProp = (c, platform, key, defaultVal, sourceObj) => {\n    if (!sourceObj) return null;\n\n    if (!key || !key.split) {\n        logError('getConfigProp: invalid key!');\n        return null;\n    }\n    const p = sourceObj.platforms?.[platform];\n    const ps = c.runtime.scheme;\n    const keyArr = key.split('.');\n    const baseKey = keyArr.shift();\n    const subKey = keyArr.join('.');\n\n    let resultPlatforms;\n    let scheme;\n    if (p) {\n        scheme = p.buildSchemes ? p.buildSchemes[ps] : undefined;\n        resultPlatforms = getFlavouredProp(\n            c,\n            sourceObj.platforms[platform],\n            baseKey\n        );\n    }\n\n    scheme = scheme || {};\n    const resultCli = CLI_PROPS.includes(baseKey) ? c.program[baseKey] : undefined;\n    const resultScheme = scheme[baseKey];\n    const resultCommon = getFlavouredProp(c, sourceObj.common, baseKey);\n\n    let result = _getValueOrMergedObject(\n        resultCli,\n        resultScheme,\n        resultPlatforms,\n        resultCommon\n    );\n    if (result === undefined || result === null) result = defaultVal; // default the value only if it's not specified in any of the files. i.e. undefined\n    if (typeof result === 'object' && subKey.length) {\n        return lGet(result, subKey);\n    }\n    return result;\n};\n\n\nexport const getConfigPropArray = (c, platform, key) => {\n    const result = [];\n    const configArr = [\n        c.files.defaultWorkspace.config,\n        c.files.rnv.projectTemplates.config,\n        // { plugins: extraPlugins },\n        // { pluginTemplates },\n        c.files.rnv.engines.config,\n        c.files.workspace.config,\n        c.files.workspace.configPrivate,\n        c.files.workspace.configLocal,\n        c.files.workspace.project.config,\n        c.files.workspace.project.configPrivate,\n        c.files.workspace.project.configLocal,\n        ...c.files.workspace.appConfig.configs,\n        ...c.files.workspace.appConfig.configsPrivate,\n        ...c.files.workspace.appConfig.configsLocal,\n        c.files.project.config,\n        c.files.project.configPrivate,\n        c.files.project.configLocal,\n        ...c.files.appConfig.configs,\n        ...c.files.appConfig.configsPrivate,\n        ...c.files.appConfig.configsLocal\n    ];\n    configArr.forEach((config) => {\n        const val = _getConfigProp(c, platform, key, null, config);\n        if (val) {\n            result.push(val);\n        }\n    });\n\n\n    return result;\n};\n\n\nexport const getAppId = (c, platform) => {\n    const id = getConfigProp(c, platform, 'id');\n    const idSuffix = getConfigProp(c, platform, 'idSuffix');\n    return idSuffix ? `${id}${idSuffix}` : id;\n};\n\nexport const getAppTitle = (c, platform) => getConfigProp(c, platform, 'title');\n\nexport const getAppVersion = (c, platform) => getConfigProp(c, platform, 'version') || c.files.project.package?.version;\n\nexport const getAppAuthor = (c, platform) => getConfigProp(c, platform, 'author') || c.files.project.package?.author;\n\nexport const getAppLicense = (c, platform) => getConfigProp(c, platform, 'license') || c.files.project.package?.license;\n\nexport const getEntryFile = (c, platform) => c.buildConfig.platforms?.[platform]?.entryFile;\n\nexport const getGetJsBundleFile = (c, platform) => getConfigProp(c, platform, 'getJsBundleFile');\n\nexport const getAppDescription = (c, platform) => getConfigProp(c, platform, 'description')\n    || c.files.project.package?.description;\n\nexport const getAppVersionCode = (c, platform) => {\n    const versionCode = getConfigProp(c, platform, 'versionCode');\n    if (versionCode) return versionCode;\n    const version = getAppVersion(c, platform);\n    const versionCodeFormat = getConfigProp(c, platform, 'versionCodeFormat', '00.00.00');\n    const vFormatArr = versionCodeFormat.split('.').map(v => v.length);\n    const versionCodeMaxCount = vFormatArr.length;\n\n    const verArr = [];\n    version.split('.').map(v => v.split('-').map(v2 => v2.split('+').forEach((v3) => {\n        const asNumber = Number(v3);\n        if (!Number.isNaN(asNumber)) {\n            let val = v3;\n            const maxDigits = vFormatArr[verArr.length - 1] || 2;\n            if (v3.length > maxDigits) {\n                val = v3.substr(0, maxDigits);\n            } else if (v3.length < maxDigits) {\n                let toAdd = maxDigits - v3.length;\n                while (toAdd > 0) {\n                    val = `0${v3}`;\n                    toAdd--;\n                }\n            }\n            verArr.push(val);\n        }\n    })));\n    let verCountDiff = verArr.length - versionCodeMaxCount;\n    if (verCountDiff < 0) {\n        while (verCountDiff < 0) {\n            let extraVersionLen = vFormatArr[versionCodeMaxCount + verCountDiff];\n            let num = '';\n            while (extraVersionLen) {\n                num += '0';\n                extraVersionLen--;\n            }\n            verArr.push(num);\n            verCountDiff++;\n        }\n    }\n    const output = Number(verArr.join('')).toString();\n    // console.log(`IN: ${version}\\nOUT: ${output}`);\n    return output;\n};\n\nexport const isMonorepo = () => {\n    try {\n        fsExistsSync(path.resolve(__dirname, '../../../../lerna.json'));\n        return true;\n    } catch (_err) {\n        return false;\n    }\n};\n\nexport const getMonorepoRoot = () => {\n    if (isMonorepo()) {\n        return path.resolve(__dirname, '../../../..');\n    }\n};\n\nexport const areNodeModulesInstalled = () => !!doResolve('resolve', false);\n\nexport const getBuildsFolder = (c, platform, customPath) => {\n    const pp = customPath || c.paths.appConfig.dir;\n    // if (!fsExistsSync(pp)) {\n    //     logWarning(`Path ${chalk().white(pp)} does not exist! creating one for you..`);\n    // }\n    const p = path.join(pp, `builds/${platform}@${c.runtime.scheme}`);\n    if (fsExistsSync(p)) return p;\n    return path.join(pp, `builds/${platform}`);\n};\n\nexport const getIP = () => ip.address();\n\nexport const checkPortInUse = (c, platform, port) => new Promise((resolve, reject) => {\n    if (port === undefined || port === null) {\n        resolve(false);\n        return;\n    }\n    detectPort(port, (err, availablePort) => {\n        if (err) {\n            reject(err);\n            return;\n        }\n        const result = parseInt(port, 10) !== parseInt(availablePort, 10);\n        resolve(result);\n    });\n});\n\nexport const getFlavouredProp = (c, obj, key) => {\n    if (!key || !obj) return null;\n    const val1 = obj[`${key}@${c.runtime.scheme}`];\n    if (val1) return val1;\n    return obj[key];\n};\n\nexport const getBuildFilePath = (c, platform, filePath) => {\n    // P1 => platformTemplates\n    let sp = path.join(getAppTemplateFolder(c, platform), filePath);\n    // P2 => appConfigs/base + @buildSchemes\n    const sp2 = path.join(\n        getBuildsFolder(c, platform, c.paths.project.appConfigBase.dir),\n        filePath\n    );\n    if (fsExistsSync(sp2)) sp = sp2;\n    // P3 => appConfigs + @buildSchemes\n    const sp3 = path.join(getBuildsFolder(c, platform), filePath);\n    if (fsExistsSync(sp3)) sp = sp3;\n    return sp;\n};\n\nexport const waitForUrl = url => new Promise((resolve, reject) => {\n    let attempts = 0;\n    const maxAttempts = 10;\n    const CHECK_INTEVAL = 2000;\n    const interval = setInterval(() => {\n        axios.get(url)\n            .then(() => {\n                resolve(true);\n            })\n            .catch(() => {\n                attempts++;\n                if (attempts > maxAttempts) {\n                    clearInterval(interval);\n                    // spinner.fail('Can\\'t connect to webpack. Try restarting it.');\n                    return reject(\n                        \"Can't connect to webpack. Try restarting it.\"\n                    );\n                }\n            });\n    }, CHECK_INTEVAL);\n});\n\nexport const importPackageFromProject = (name) => {\n    // const c = Config.getConfig();\n    // eslint-disable-next-line import/no-dynamic-require, global-require\n    const pkg = require(doResolve(name));\n    if (pkg.default) return pkg.default;\n    return pkg;\n};\n\nexport default {\n    getBuildFilePath,\n    getBuildsFolder,\n    getAppFolder,\n    getAppTemplateFolder,\n    getAppId,\n    getAppTitle,\n    getAppVersion,\n    getAppVersionCode,\n    writeCleanFile,\n    getEntryFile,\n    getGetJsBundleFile,\n    getAppDescription,\n    getAppAuthor,\n    getAppLicense,\n    getConfigProp,\n    getIP,\n    checkPortInUse,\n    logTask: (val) => {\n        logError(\n            'DEPRECATED: Common.logTask() has been removed. use Logger.logTask() instead'\n        );\n        logTask(val);\n    },\n    logWarning: (val) => {\n        logError(\n            'DEPRECATED: Common.logWarning() has been removed. use Logger.logWarning() instead'\n        );\n        logWarning(val);\n    },\n    logError: (val) => {\n        logError(\n            'DEPRECATED: Common.logError() has been removed. use Logger.logError() instead'\n        );\n        logError(val);\n    },\n    logSuccess: (val) => {\n        logError(\n            'DEPRECATED: Common.logError() has been removed. use Logger.logError() instead'\n        );\n        logSuccess(val);\n    },\n    logDebug: (val) => {\n        logError(\n            'DEPRECATED: Common.logDebug() has been removed. use Logger.logDebug() instead'\n        );\n        logDebug(val);\n    }\n};\n"],"file":"common.js"}