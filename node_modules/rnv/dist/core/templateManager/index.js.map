{"version":3,"sources":["../../../src/core/templateManager/index.js"],"names":["checkIfTemplateConfigured","c","buildConfig","templates","white","paths","project","config","Object","keys","forEach","k","obj","version","basedir","_requiresNpmInstall","runtime","requiresBootstrap","files","package","devDependencies","_writeObjectSync","_cleanProjectTemplateSync","dirsToRemove","path","join","appConfigBase","dir","srcDir","appConfigsDir","filesToRemove","defaults","supportedPlatforms","map","p","_applyTemplate","currentTemplate","selectedTemplate","template","configTemplate","RENATIVE_CONFIG_TEMPLATE_NAME","requiresForcedTemplateApply","_configureSrc","Promise","resolve","_configureAppConfigs","appConfigIds","supPlats","v","appConfigPath","RENATIVE_CONFIG_NAME","appConfig","common","isWrapper","title","id","platforms","pk","includes","e","_configureProjectConfig","_configureRenativeConfig","templateConfig","isNew","mergedObj","plugins","renative","webpack","modulePaths","projectPath","moduleAliases","configLocal","_parseSupportedPlatforms","callback","pLen","length","i","plat","platKeysNum","undefined","configureTemplateFiles","includedPaths","name","sourcePath","destPath","isDirectory","configureEntryPoints","rnv","entryDir","platform","source","entryFile","backupSource","projectTemplate","dest","reject","s","getTemplateOptions","defaultProjectTemplates","projectTemplates","mapping","defaultVal","exists","installed","yellow","grey","bold","getInstalledTemplateOptions","isTemplateInstalled","applyTemplate","opts","inquirer","prompt","type","message","choices","keysAsArray","templateIsInstalled"],"mappings":"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","sourcesContent":["import path from 'path';\nimport inquirer from 'inquirer';\n\nimport {\n    RENATIVE_CONFIG_NAME,\n    RENATIVE_CONFIG_TEMPLATE_NAME\n} from '../constants';\nimport {\n    copyFolderContentsRecursiveSync,\n    copyFileSync,\n    writeFileSync,\n    removeDirsSync,\n    removeFilesSync,\n    mergeObjects,\n    readObjectSync,\n    fsExistsSync,\n    fsLstatSync\n} from '../systemManager/fileutils';\nimport {\n    chalk,\n    logError,\n    logInfo,\n    logWarning,\n    logTask,\n    logDebug\n} from '../systemManager/logger';\nimport { generateOptions } from '../../cli/prompt';\nimport {\n    listAppConfigsFoldersSync,\n    generateBuildConfig,\n    generateLocalConfig,\n    parseRenativeConfigs\n} from '../configManager/configParser';\nimport { doResolve } from '../resolve';\nimport { checkIfProjectAndNodeModulesExists } from '../systemManager/npmUtils';\n\nexport const checkIfTemplateConfigured = async (c) => {\n    logTask('checkIfTemplateConfigured');\n    if (!c.buildConfig.templates) {\n        logWarning(\n            `Your ${chalk().white(\n                c.paths.project.config\n            )} does not contain ${chalk().white(\n                'templates'\n            )} object. ReNative will skip template generation`\n        );\n        return false;\n    }\n    Object.keys(c.buildConfig.templates).forEach((k) => {\n        const obj = c.buildConfig.templates[k];\n        if (\n            !doResolve(k.version, false, { basedir: '../' })\n              && !doResolve(k, false)\n        ) {\n            logInfo(\n                `Your ${chalk().white(\n                    `${k}@${obj.version}`\n                )} template is missing in renative.json. CONFIGURING...DONE`\n            );\n            c._requiresNpmInstall = true;\n            c.runtime.requiresBootstrap = true;\n        }\n        if (c.files.project.package.devDependencies) {\n            c.files.project.package.devDependencies[k] = obj.version;\n        }\n    });\n\n    _writeObjectSync(c, c.paths.project.package, c.files.project.package);\n\n    return true;\n};\n\nconst _cleanProjectTemplateSync = (c) => {\n    logTask('_cleanProjectTemplateSync');\n    const dirsToRemove = [\n        path.join(c.paths.project.appConfigBase.dir),\n        path.join(c.paths.project.srcDir),\n        path.join(c.paths.project.appConfigsDir)\n    ];\n\n    const filesToRemove = c.buildConfig.defaults.supportedPlatforms.map(\n        p => path.join(c.paths.project.dir, `index.${p}.js`)\n    );\n\n    removeDirsSync(dirsToRemove);\n    // TODO: NOT SERVED FROM TEMPLATE YET\n    removeFilesSync(filesToRemove);\n};\n\nconst _applyTemplate = async (c) => {\n    logTask('_applyTemplate', `current:${c.buildConfig.currentTemplate} selected:${c.runtime.selectedTemplate}`);\n\n    if (c.runtime.selectedTemplate) {\n        _cleanProjectTemplateSync(c);\n        // if (isMonorepo()) {\n        //     // @todo - have the templates report their absolute locations\n        //     c.paths.template.dir = path.join(\n        //         getMonorepoRoot(),\n        //         'packages',\n        //         c.runtime.selectedTemplate\n        //     );\n        // } else {\n        c.paths.template.dir = doResolve(c.runtime.selectedTemplate);\n        // c.paths.template.dir = path.join(c.paths.project.nodeModulesDir, c.runtime.selectedTemplate);\n        // }\n    } else {\n        c.paths.template.dir = doResolve(c.buildConfig.currentTemplate);\n        // c.paths.template.dir = path.join(c.paths.project.nodeModulesDir, c.buildConfig.currentTemplate);\n    }\n\n    c.paths.template.configTemplate = path.join(\n        c.paths.template.dir,\n        RENATIVE_CONFIG_TEMPLATE_NAME\n    );\n\n    if (!fsExistsSync(c.paths.template.configTemplate)) {\n        logWarning(\n            `Template file ${chalk().white(\n                c.paths.template.configTemplate\n            )} does not exist. check your ${chalk().white(\n                c.paths.template.dir\n            )}. skipping`\n        );\n        return true;\n    }\n\n    logDebug(\n        `_applyTemplate:${c.runtime.selectedTemplate}:${c.paths.template.dir}`\n    );\n\n    c.paths.template.appConfigsDir = path.join(\n        c.paths.template.dir,\n        'appConfigs'\n    );\n    c.paths.template.appConfigBase.dir = path.join(\n        c.paths.template.dir,\n        'base'\n    );\n    c.runtime.currentTemplate = c.files.project.config.currentTemplate;\n    if (!c.runtime.currentTemplate) {\n        c.runtime.currentTemplate = Object.keys(\n            c.files.project.config.templates\n        )[0];\n        c.runtime.requiresForcedTemplateApply = true;\n    }\n\n    return true;\n};\n\nconst _configureSrc = c => new Promise((resolve) => {\n    // Check src\n    logDebug('configureProject:check src');\n    if (!fsExistsSync(c.paths.project.srcDir)) {\n        logInfo(\n            `Your src folder ${chalk().white(\n                c.paths.project.srcDir\n            )} is missing! CREATING...DONE`\n        );\n        copyFolderContentsRecursiveSync(\n            path.join(c.paths.template.dir, 'src'),\n            c.paths.project.srcDir\n        );\n    }\n    resolve();\n});\n\nconst _configureAppConfigs = async (c) => {\n    // Check appConfigs\n    logDebug('configureProject:check appConfigs');\n    //\n    if (!fsExistsSync(c.paths.project.appConfigsDir)) {\n        logInfo(\n            `Your appConfig folder ${chalk().white(\n                c.paths.project.appConfigsDir\n            )} is missing! ReNative will create one from template.`\n        );\n\n        // TODO: GET CORRECT PROJECT TEMPLATE\n        copyFolderContentsRecursiveSync(\n            c.paths.template.appConfigsDir,\n            c.paths.project.appConfigsDir\n        );\n\n        const appConfigIds = listAppConfigsFoldersSync(c, true);\n\n        // Update App Title to match package.json\n        try {\n            const supPlats = c.files.project?.config?.defaults?.supportedPlatforms;\n            appConfigIds.forEach((v) => {\n                const appConfigPath = path.join(\n                    c.paths.project.appConfigsDir,\n                    v,\n                    RENATIVE_CONFIG_NAME\n                );\n                const appConfig = readObjectSync(appConfigPath);\n                if (appConfig) {\n                    appConfig.common = appConfig.common || {};\n                    if (!c.runtime.isWrapper) {\n                        appConfig.common.title = c.files.project.config?.defaults?.title;\n                        appConfig.common.id = c.files.project.config?.defaults?.id;\n                    }\n\n                    if (supPlats) {\n                        Object.keys(appConfig.platforms).forEach((pk) => {\n                            if (!supPlats.includes(pk)) {\n                                delete appConfig.platforms[pk];\n                            }\n                        });\n                    }\n\n                    _writeObjectSync(c, appConfigPath, appConfig);\n                }\n            });\n        } catch (e) {\n            logError(e);\n        }\n    }\n};\n\nconst _configureProjectConfig = c => new Promise((resolve) => {\n    // Check projectConfigs\n    logDebug('configureProject:check projectConfigs');\n    if (!fsExistsSync(c.paths.project.appConfigBase.dir)) {\n        logInfo(\n            `Your projectConfig folder ${chalk().white(\n                c.paths.project.appConfigBase.dir\n            )} is missing! CREATING...DONE`\n        );\n        copyFolderContentsRecursiveSync(\n            c.paths.template.appConfigBase.dir,\n            c.paths.project.appConfigBase.dir\n        );\n    }\n    resolve();\n});\n\nconst _configureRenativeConfig = async (c) => {\n    // renative.json\n    const templateConfig = readObjectSync(c.paths.template.configTemplate);\n    logDebug('configureProject:check renative.json');\n\n    if (!c.runtime.isWrapper) {\n        if (\n            c.runtime.selectedTemplate\n            || c.runtime.requiresForcedTemplateApply\n            || c.files.project.config.isNew\n        ) {\n            logInfo(\n                `Your ${\n                    c.paths.project.config\n                } need to be updated with ${c.paths.template.configTemplate}. UPDATING...DONE`\n            );\n            const mergedObj = mergeObjects(\n                c,\n                c.files.project.config,\n                templateConfig,\n                false,\n                true\n            );\n            mergedObj.currentTemplate = c.runtime.currentTemplate;\n            mergedObj.isNew = null;\n            delete mergedObj.isNew;\n            c.files.project.config = mergedObj;\n            _writeObjectSync(c, c.paths.project.config, mergedObj);\n        }\n    } else {\n        // if (templateConfig.plugins.renative) {\n        //     templateConfig.plugins.renative = getLocalRenativePlugin();\n        // }\n        templateConfig.plugins.renative = {\n            webpack: {\n                modulePaths: [\n                    {\n                        projectPath: '../../packages/renative'\n                    }\n                ],\n                moduleAliases: {\n                    renative: {\n                        projectPath: '../../packages/renative'\n                    }\n                }\n            }\n        };\n        c.files.project.configLocal = templateConfig;\n        generateLocalConfig(c);\n        // _writeObjectSync(c, c.paths.project.configLocal, templateConfig);\n    }\n    return true;\n};\n\nconst _parseSupportedPlatforms = async (c, callback) => {\n    if (!c.buildConfig.platforms) {\n        await parseRenativeConfigs(c);\n    }\n    const p = Object.keys(c.buildConfig.platforms);\n    const pLen = p.length;\n    const supportedPlatforms = c.buildConfig.defaults?.supportedPlatforms;\n    for (let i = 0; i < pLen; i++) {\n        const k = p[i];\n\n        const plat = c.buildConfig.platforms[k];\n        const platKeysNum = plat !== undefined ? Object.keys(plat).length : 0;\n\n        if ((supportedPlatforms && supportedPlatforms.includes(k)) || !supportedPlatforms) {\n            callback(k, plat);\n        } else if (platKeysNum > 1) {\n            // Every platform comes always at least with engine prop so let's check for more\n            logWarning(\n                `Extra platform ${chalk().white(\n                    k\n                )} will be ignored because it's not configured in your ${chalk().white(\n                    './renative.json: { defaults.supportedPlatforms }'\n                )} object.`\n            );\n        }\n    }\n    return true;\n};\n\nexport const configureTemplateFiles = async (c) => {\n    logTask('configureTemplateFiles');\n\n    const templateConfig = readObjectSync(c.paths.template.configTemplate);\n\n\n    const includedPaths = templateConfig?.templateConfig?.includedPaths;\n    if (includedPaths) {\n        includedPaths.forEach((name) => {\n            const sourcePath = path.join(c.paths.template.dir, name);\n            const destPath = path.join(c.paths.project.dir, name);\n            if (!fsExistsSync(destPath) && fsExistsSync(sourcePath)) {\n                try {\n                    if (fsLstatSync(sourcePath).isDirectory()) {\n                        logInfo(\n                            `Missing directory ${chalk().white(\n                                `${destPath}.js`\n                            )}. COPYING from TEMPATE...DONE`\n                        );\n                        copyFolderContentsRecursiveSync(\n                            sourcePath,\n                            destPath\n                        );\n                    } else {\n                        logInfo(\n                            `Missing file ${chalk().white(\n                                `${destPath}.js`\n                            )}. COPYING from TEMPATE...DONE`\n                        );\n                        copyFileSync(sourcePath, destPath);\n                    }\n                } catch (e) {\n                    // Get some beer and order hookers\n                }\n            }\n        });\n    }\n};\n\nexport const configureEntryPoints = async (c) => {\n    logTask('configureEntryPoints');\n\n    copyFolderContentsRecursiveSync(\n        path.join(c.paths.rnv.dir, 'entry'),\n        c.paths.entryDir\n    );\n\n\n    try {\n        if (!fsExistsSync(c.paths.appConfig.config)) {\n            logWarning(\n                `c.paths.appConfig.config at path: ${\n                    c.paths.appConfig.config\n                } does not exist. ReNative will regenerate renative.local.json`\n            );\n            return true;\n        }\n        await _parseSupportedPlatforms(c, (platform, plat) => {\n            const source = path.join(\n                c.paths.template.dir,\n                `${plat.entryFile}.js`\n            );\n            const backupSource = path.join(\n                c.paths.rnv.projectTemplate.dir,\n                'entry',\n                `${plat.entryFile}.js`\n            );\n            const dest = path.join(c.paths.project.dir, `${plat.entryFile}.js`);\n            if (!fsExistsSync(dest)) {\n                if (!plat.entryFile) {\n                    logWarning(\n                        `Missing entryFile key for ${chalk().white(\n                            platform\n                        )} platform in your ${chalk().white(\n                            c.paths.appConfig.config\n                        )}.`\n                    );\n                } else if (!fsExistsSync(source)) {\n                    logInfo(\n                        `Missing entry file ${chalk().white(\n                            `${plat.entryFile}.js`\n                        )}. COPYING from RNV...DONE`\n                    );\n                    copyFileSync(backupSource, dest);\n                } else {\n                    logInfo(\n                        `Missing entry file ${chalk().white(\n                            `${plat.entryFile}.js`\n                        )}. COPYING from TEMPATE...DONE`\n                    );\n                    copyFileSync(source, dest);\n                }\n            }\n        });\n    } catch (e) {\n        return Promise.reject(e);\n    }\n\n    return true;\n};\n\n\nconst _writeObjectSync = (c, p, s) => {\n    writeFileSync(p, s);\n    generateBuildConfig(c);\n};\n\nexport const getTemplateOptions = (c) => {\n    const defaultProjectTemplates = c.buildConfig.projectTemplates || {};\n    return generateOptions(\n        defaultProjectTemplates,\n        false,\n        null,\n        (i, obj, mapping, defaultVal) => {\n            const exists = c.buildConfig.templates?.[defaultVal];\n            const installed = exists ? chalk().yellow(' (installed)') : '';\n            return ` [${chalk().grey(i + 1)}]> ${chalk().bold(\n                defaultVal\n            )}${installed} \\n`;\n        }\n    );\n};\n\nexport const getInstalledTemplateOptions = (c) => {\n    if (c.buildConfig.templates) {\n        return generateOptions(c.buildConfig.templates);\n    }\n    logError(\"You don't have any local templates installed\", false, true);\n    return [];\n};\n\nexport const isTemplateInstalled = c => doResolve(c.buildConfig.currentTemplate);\n\n\nexport const applyTemplate = async (c, selectedTemplate) => {\n    logTask(\n        'applyTemplate', `${c.buildConfig.currentTemplate}=>${selectedTemplate}`\n    );\n    c.runtime.selectedTemplate = selectedTemplate;\n\n    if (!c.buildConfig.currentTemplate) {\n        logWarning(\"You don't have any current template selected\");\n        const opts = getInstalledTemplateOptions(c);\n\n        const { template } = await inquirer.prompt({\n            type: 'list',\n            name: 'template',\n            message: 'Pick which template to apply',\n            choices: opts.keysAsArray\n        });\n\n        c.buildConfig.currentTemplate = template;\n        c.files.project.config.currentTemplate = template;\n        _writeObjectSync(c, c.paths.project.config, c.files.project.config);\n    }\n\n    const templateIsInstalled = doResolve(c.buildConfig.currentTemplate);\n    if (!templateIsInstalled) {\n        // We Need template to be installed before other dependency resolutions (due to scoping)\n        await checkIfProjectAndNodeModulesExists(c);\n    }\n\n    await _applyTemplate(c);\n    await _configureSrc(c);\n    await _configureAppConfigs(c);\n    await _configureProjectConfig(c);\n    await _configureRenativeConfig(c);\n};\n"],"file":"index.js"}