{"version":3,"sources":["../../../src/core/configManager/schemaParser.js"],"names":["ajv","Ajv","schemas","SCHEMAS","allErrors","allowUnionTypes","addKeyword","getRootSchema","schemaRoot","validateSchema","cObj","valid","validate"],"mappings":"0LAAA;AACA;;;AAGA,GAAMA,CAAAA,GAAG,CAAG,GAAIC,aAAJ,CAAQ,CAAEC,OAAO,CAAEC,qBAAX,CAAoBC,SAAS,CAAE,IAA/B,CAAqCC,eAAe,CAAE,IAAtD,CAAR,CAAZ;;AAEAL,GAAG,CAACM,UAAJ,CAAe,MAAf,CAAuB,EAAvB;;;;;;;;AAQA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAMC,yBAAN,EAAtB;;AAEO,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,CAAU;AACpC,GAAMC,CAAAA,KAAK,CAAGX,GAAG,CAACY,QAAJ,CAAaJ,wBAAb,CAAyBE,IAAzB,CAAd;AACA,MAAO,CAACC,KAAD,CAAQX,GAAR,CAAP;AACH,CAHM,C;;AAKQ;AACXS,cAAc,CAAdA,cADW;AAEXF,aAAa,CAAbA,aAFW,C","sourcesContent":["import Ajv from 'ajv';\nimport { SCHEMAS, schemaRoot } from './configSchema';\n\n\nconst ajv = new Ajv({ schemas: SCHEMAS, allErrors: true, allowUnionTypes: true });\n\najv.addKeyword('docs', {\n    // type: 'object',\n    // compile() {\n    //     return true;\n    // }\n});\n\n\nconst getRootSchema = () => schemaRoot;\n\nexport const validateSchema = (cObj) => {\n    const valid = ajv.validate(schemaRoot, cObj);\n    return [valid, ajv];\n};\n\nexport default {\n    validateSchema,\n    getRootSchema\n};\n"],"file":"schemaParser.js"}