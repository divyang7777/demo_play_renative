{"version":3,"sources":["../../../src/core/systemManager/npmUtils.js"],"names":["listAndSelectNpmVersion","c","npmPackage","rnvTemplates","templateVersionsStr","versionArr","replace","split","templateTagsStr","tagArr","forEach","tString","tArr","push","name","version","rnvVersion","validVersions","map","v","value","item","matchStr","matchArr","tag","length","join","includes","recommendedVersion","sort","a","b","reverse","unshift","splice","indexOf","inquirer","prompt","type","message","default","choices","inputTemplateVersion","checkIfProjectAndNodeModulesExists","paths","project","configExists","nodeModulesDir","_requiresNpmInstall","installPackageDependencies","failOnError","customScript","buildConfig","tasks","install","script","isYarnInstalled","yarnLockPath","path","dir","npmLockPath","command","packageManager","cleanNodeModules","plats","files","config","defaults","supportedPlatforms","Array","isArray","ANDROID","ANDROID_TV","ANDROID_WEAR","configLocal","_meta","requiresJetify","jetifyIfRequired","Promise","resolve","reject","dirs","reduce","acc","match","_all","aPackage","aPath","resolved","then","catch","e"],"mappings":"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","sourcesContent":["// import semver from 'semver';\nimport path from 'path';\nimport inquirer from 'inquirer';\nimport { executeAsync, commandExistsSync } from './exec';\nimport { fsExistsSync, invalidatePodsChecksum, removeDirs, writeFileSync } from './fileutils';\nimport { logTask, logWarning, logError, logInfo, logDebug } from './logger';\nimport { ANDROID, ANDROID_TV, ANDROID_WEAR } from '../constants';\nimport { doResolve } from '../resolve';\n\n\nimport { inquirerPrompt } from '../../cli/prompt';\n\nexport const listAndSelectNpmVersion = async (c, npmPackage, rnvTemplates) => {\n    const templateVersionsStr = await executeAsync(\n        c,\n        `npm view ${npmPackage} versions`\n    );\n    const versionArr = templateVersionsStr\n        .replace(/\\r?\\n|\\r|\\s|'|\\[|\\]/g, '')\n        .split(',');\n\n    const templateTagsStr = await executeAsync(\n        c,\n        `npm dist-tag ls ${npmPackage}`\n    );\n    const tagArr = [];\n    templateTagsStr.split('\\n').forEach((tString) => {\n        const tArr = tString.split(': ');\n        tagArr.push({\n            name: tArr[0],\n            version: tArr[1]\n        });\n    });\n\n    const { rnvVersion } = c;\n    const validVersions = versionArr.map(v => ({ name: v, value: v }));\n\n    let recommendedVersion;\n    validVersions.forEach((item) => {\n        let matchStr = '';\n        const matchArr = [];\n        tagArr.forEach((tag) => {\n            if (tag.version === item.value) {\n                matchArr.push(tag.name);\n            }\n        });\n        if (matchArr.length) {\n            matchStr = ` (HEAD: ${matchArr.join(', ')})`;\n            item.name = `${item.value}${matchStr}`;\n        }\n        if (rnvTemplates?.includes && rnvTemplates.includes(npmPackage)) {\n            if (item.value === rnvVersion) {\n                item.name = `${item.name} <= RECOMMENDED`;\n                recommendedVersion = item;\n            }\n        }\n    });\n    if (!recommendedVersion) recommendedVersion = validVersions[0];\n\n\n    validVersions.sort((a, b) => {\n        if (a.name > b.name) return 1;\n\n        return (b.name > a.name) ? -1 : 0;\n    }).reverse();\n\n    validVersions.unshift(validVersions.splice(validVersions.indexOf(recommendedVersion), 1)[0]);\n\n\n    const { inputTemplateVersion } = await inquirer.prompt({\n        name: 'inputTemplateVersion',\n        type: 'list',\n        message: `What ${npmPackage} version to use?`,\n        default: recommendedVersion.name,\n        choices: validVersions\n    });\n\n    return inputTemplateVersion;\n};\n\nexport const checkIfProjectAndNodeModulesExists = async (c) => {\n    logTask('checkIfProjectAndNodeModulesExists');\n\n    if (c.paths.project.configExists && !fsExistsSync(c.paths.project.nodeModulesDir)) {\n        c._requiresNpmInstall = false;\n        logInfo(\n            'node_modules folder is missing. INSTALLING...'\n        );\n        await installPackageDependencies(c);\n    }\n};\n\nexport const installPackageDependencies = async (c, failOnError = false) => {\n    const customScript = c.buildConfig?.tasks?.install?.script;\n\n    if (customScript) {\n        logTask('installPackageDependencies');\n        logInfo(`Found custom task for install: ${customScript}.`);\n        await executeAsync(customScript);\n        return true;\n    }\n\n    const isYarnInstalled = commandExistsSync('yarn') || doResolve('yarn', false);\n    const yarnLockPath = path.join(c.paths.project.dir, 'yarn.lock');\n    const npmLockPath = path.join(c.paths.project.dir, 'package-lock.json');\n    let command = 'npm install';\n    if (fsExistsSync(yarnLockPath)) {\n        command = 'yarn';\n    } else if (fsExistsSync(npmLockPath)) {\n        command = 'npm install';\n    } else if (isYarnInstalled) {\n        const { packageManager } = await inquirerPrompt({\n            type: 'list',\n            name: 'packageManager',\n            message: 'What package manager would you like to use?',\n            choices: ['yarn', 'npm'],\n            default: 'npm'\n        });\n        if (packageManager === 'yarn') command = 'yarn';\n    }\n    logTask('installPackageDependencies', `packageManager:(${command})`);\n\n    try {\n        await executeAsync(command);\n        await invalidatePodsChecksum(c);\n    } catch (e) {\n        if (failOnError) {\n            logError(e);\n            return false;\n        }\n        logWarning(\n            `${e}\\n Seems like your node_modules is corrupted by other libs. ReNative will try to fix it for you`\n        );\n        try {\n            await cleanNodeModules(c);\n            await installPackageDependencies(c, true);\n        } catch (npmErr) {\n            logError(npmErr);\n            return false;\n        }\n    }\n    try {\n        const plats = c.files.project.config?.defaults?.supportedPlatforms;\n        if (\n            Array.isArray(plats) && (plats.includes(ANDROID)\n            || plats.includes(ANDROID_TV) || plats.includes(ANDROID_WEAR))\n        ) {\n            if (!c.files.project.configLocal) {\n                c.files.project.configLocal = {};\n            }\n            if (!c.files.project.configLocal?._meta) {\n                c.files.project.configLocal._meta = {};\n            }\n            c.files.project.configLocal._meta.requiresJetify = true;\n            writeFileSync(c.paths.project.configLocal, c.files.project.configLocal);\n        }\n        return true;\n    } catch (jetErr) {\n        logError(jetErr);\n        return false;\n    }\n};\n\nexport const jetifyIfRequired = async (c) => {\n    logTask('jetifyIfRequired');\n    if (c.files.project.configLocal?._meta?.requiresJetify) {\n        if (doResolve('jetifier')) {\n            await executeAsync('npx jetify');\n            c.files.project.configLocal._meta.requiresJetify = false;\n            writeFileSync(c.paths.project.configLocal, c.files.project.configLocal);\n        }\n    }\n    return true;\n};\n\nexport const cleanNodeModules = () => new Promise((resolve, reject) => {\n    logTask('cleanNodeModules');\n    const dirs = [\n        'react-native-safe-area-view/.git',\n        '@react-navigation/native/node_modules/react-native-safe-area-view/.git',\n        'react-navigation/node_modules/react-native-safe-area-view/.git',\n        'react-native-safe-area-view/.git',\n        '@react-navigation/native/node_modules/react-native-safe-area-view/.git',\n        'react-navigation/node_modules/react-native-safe-area-view/.git'\n    ].reduce((acc, dir) => {\n        const [_all, aPackage, aPath] = dir.match(/([^/]+)\\/(.*)/);\n        logDebug(`Cleaning: ${_all}`);\n        const resolved = doResolve(aPackage, false);\n        if (resolved) {\n            acc.push(`${resolved}/${aPath}`);\n        }\n        return acc;\n    }, []);\n    removeDirs(dirs)\n        .then(() => resolve())\n        .catch(e => reject(e));\n    // removeDirs([\n    //     path.join(c.paths.project.nodeModulesDir, 'react-native-safe-area-view/.git'),\n    //     path.join(c.paths.project.nodeModulesDir, '@react-navigation/native/node_modules/react-native-safe-area-view/.git'),\n    //     path.join(c.paths.project.nodeModulesDir, 'react-navigation/node_modules/react-native-safe-area-view/.git'),\n    //     path.join(c.paths.rnv.nodeModulesDir, 'react-native-safe-area-view/.git'),\n    //     path.join(c.paths.rnv.nodeModulesDir, '@react-navigation/native/node_modules/react-native-safe-area-view/.git'),\n    //     path.join(c.paths.rnv.nodeModulesDir, 'react-navigation/node_modules/react-native-safe-area-view/.git')\n    // ]).then(() => resolve()).catch(e => reject(e));\n});\n"],"file":"npmUtils.js"}