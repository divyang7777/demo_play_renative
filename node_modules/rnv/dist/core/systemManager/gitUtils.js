var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.configureGit=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _path=_interopRequireDefault(require("path"));
var _exec=require("./exec");
var _fileutils=require("./fileutils");
var _logger=require("./logger");

var configureGit=function configureGit(c){var projectPath;return _regenerator.default.async(function configureGit$(_context){while(1){switch(_context.prev=_context.next){case 0:
projectPath=c.paths.project.dir;
(0,_logger.logTask)("configureGit:"+projectPath);if(

(0,_fileutils.fsExistsSync)(_path.default.join(projectPath,'.git'))){_context.next=14;break;}
(0,_logger.logInfo)('Your project does not have a git repo. Creating one...DONE');if(!
(0,_exec.commandExistsSync)('git')){_context.next=13;break;}_context.next=7;return _regenerator.default.awrap(
(0,_exec.executeAsync)('git init',{cwd:projectPath}));case 7:_context.next=9;return _regenerator.default.awrap(
(0,_exec.executeAsync)('git add -A',{cwd:projectPath}));case 9:_context.next=11;return _regenerator.default.awrap(
(0,_exec.executeAsync)('git commit -m "Initial"',{cwd:projectPath}));case 11:_context.next=14;break;case 13:

(0,_logger.logWarning)(
"We tried to create a git repo inside your project but you don't seem to have git installed");case 14:case"end":return _context.stop();}}},null,null,null,Promise);};exports.configureGit=configureGit;
//# sourceMappingURL=gitUtils.js.map