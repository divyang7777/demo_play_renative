{"version":3,"sources":["../../../src/core/sdkManager/index.js"],"names":["SDK_LOACTIONS","android","path","join","USER_HOME_DIR","tizen","webos","_logSdkWarning","c","paths","workspace","config","checkAndConfigureAndroidSdks","sdk","buildConfig","sdks","ANDROID_SDK","cli","CLI_ANDROID_EMULATOR","isSystemWin","CLI_ANDROID_ADB","CLI_ANDROID_AVDMANAGER","CLI_ANDROID_SDKMANAGER","checkAndConfigureTizenSdks","platform","TIZEN_SDK","CLI_TIZEN_EMULATOR","CLI_TIZEN","CLI_SDB_TIZEN","checkAndConfigureWebosSdks","WEBOS_SDK","CLI_WEBOS_ARES","CLI_WEBOS_ARES_PACKAGE","CLI_WEBOS_ARES_INSTALL","CLI_WEBOS_ARES_LAUNCH","CLI_WEBOS_ARES_SETUP_DEVICE","CLI_WEBOS_ARES_DEVICE_INFO","CLI_WEBOS_ARES_NOVACOM","checkAndConfigureSdks","ANDROID","ANDROID_TV","ANDROID_WEAR","TIZEN","TIZEN_MOBILE","TIZEN_WATCH","WEBOS","_getCurrentSdkPath","SDK_PLATFORMS","_isSdkInstalled","sdkPath","_attemptAutoFix","sdkPlatform","result","find","v","white","confirmSdk","program","ci","inquirer","prompt","type","name","message","confirm","files","ANDROID_NDK","setupInstance","askToInstallSDK","checkSdk"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\nimport path from 'path';\nimport inquirer from 'inquirer';\nimport {\n    CLI_ANDROID_EMULATOR,\n    CLI_ANDROID_AVDMANAGER,\n    CLI_ANDROID_SDKMANAGER,\n    CLI_ANDROID_ADB,\n    CLI_TIZEN_EMULATOR,\n    CLI_TIZEN,\n    CLI_SDB_TIZEN,\n    CLI_WEBOS_ARES,\n    CLI_WEBOS_ARES_PACKAGE,\n    CLI_WEBOS_ARES_INSTALL,\n    CLI_WEBOS_ARES_LAUNCH,\n    CLI_WEBOS_ARES_NOVACOM,\n    CLI_WEBOS_ARES_SETUP_DEVICE,\n    CLI_WEBOS_ARES_DEVICE_INFO,\n    ANDROID,\n    TIZEN,\n    WEBOS,\n    ANDROID_TV,\n    ANDROID_WEAR,\n    TIZEN_MOBILE,\n    TIZEN_WATCH,\n    SDK_PLATFORMS,\n    USER_HOME_DIR\n} from '../constants';\nimport { isSystemWin } from '../utils';\nimport { getRealPath, writeFileSync, fsExistsSync } from '../systemManager/fileutils';\nimport {\n    chalk,\n    logTask,\n    logWarning,\n    logSuccess,\n    logError\n} from '../systemManager/logger';\nimport PlatformSetup from '../setupManager';\nimport { generateBuildConfig } from '../configManager/configParser';\n\nconst SDK_LOACTIONS = {\n    android: [\n        path.join('/usr/local/android-sdk'),\n        path.join(USER_HOME_DIR, 'Library/Android/sdk'),\n        path.join(USER_HOME_DIR, 'AppData/Local/Android/android-sdk'),\n        path.join(USER_HOME_DIR, 'AppData/Local/Android/sdk'),\n        path.join('Program Files (x86)/Android/android-sdk')\n    ],\n    tizen: [\n        path.join('usr/local/tizen-studio'),\n        path.join(USER_HOME_DIR, 'tizen-studio'),\n        path.join('C:\\\\tizen-studio')\n    ],\n    webos: [path.join('/opt/webOS_TV_SDK')]\n};\n\nconst _logSdkWarning = (c) => {\n    logWarning(\n        `Your ${c.paths.workspace.config} is missing SDK configuration object`\n    );\n};\n\nexport const checkAndConfigureAndroidSdks = async (c) => {\n    const sdk = c.buildConfig?.sdks?.ANDROID_SDK;\n    logTask('checkAndConfigureAndroidSdks', `(${sdk})`);\n\n    if (sdk) {\n        c.cli[CLI_ANDROID_EMULATOR] = getRealPath(\n            c,\n            path.join(sdk, `emulator/emulator${isSystemWin ? '.exe' : ''}`)\n        );\n        c.cli[CLI_ANDROID_ADB] = getRealPath(\n            c,\n            path.join(sdk, `platform-tools/adb${isSystemWin ? '.exe' : ''}`)\n        );\n        c.cli[CLI_ANDROID_AVDMANAGER] = getRealPath(\n            c,\n            path.join(sdk, `tools/bin/avdmanager${isSystemWin ? '.bat' : ''}`)\n        );\n        c.cli[CLI_ANDROID_SDKMANAGER] = getRealPath(\n            c,\n            path.join(sdk, `tools/bin/sdkmanager${isSystemWin ? '.bat' : ''}`)\n        );\n    } else {\n        _logSdkWarning(c);\n    }\n};\n\nexport const checkAndConfigureTizenSdks = async (c) => {\n    logTask(`checkAndConfigureTizenSdks:${c.platform}`);\n    const sdk = c.buildConfig?.sdks?.TIZEN_SDK;\n    if (sdk) {\n        c.cli[CLI_TIZEN_EMULATOR] = getRealPath(\n            c,\n            path.join(\n                sdk,\n                `tools/emulator/bin/em-cli${isSystemWin ? '.bat' : ''}`\n            )\n        );\n        c.cli[CLI_TIZEN] = getRealPath(\n            c,\n            path.join(sdk, `tools/ide/bin/tizen${isSystemWin ? '.bat' : ''}`)\n        );\n        c.cli[CLI_SDB_TIZEN] = getRealPath(\n            c,\n            path.join(sdk, `tools/sdb${isSystemWin ? '.exe' : ''}`)\n        );\n    } else {\n        _logSdkWarning(c);\n    }\n};\n\nexport const checkAndConfigureWebosSdks = async (c) => {\n    logTask(`checkAndConfigureWebosSdks:${c.platform}`);\n    const sdk = c.buildConfig?.sdks?.WEBOS_SDK;\n    if (sdk) {\n        c.cli[CLI_WEBOS_ARES] = getRealPath(\n            c,\n            path.join(sdk, `CLI/bin/ares${isSystemWin ? '.cmd' : ''}`)\n        );\n        c.cli[CLI_WEBOS_ARES_PACKAGE] = getRealPath(\n            c,\n            path.join(sdk, `CLI/bin/ares-package${isSystemWin ? '.cmd' : ''}`)\n        );\n        c.cli[CLI_WEBOS_ARES_INSTALL] = getRealPath(\n            c,\n            path.join(sdk, `CLI/bin/ares-install${isSystemWin ? '.cmd' : ''}`)\n        );\n        c.cli[CLI_WEBOS_ARES_LAUNCH] = getRealPath(\n            c,\n            path.join(sdk, `CLI/bin/ares-launch${isSystemWin ? '.cmd' : ''}`)\n        );\n        c.cli[CLI_WEBOS_ARES_SETUP_DEVICE] = getRealPath(\n            c,\n            path.join(\n                sdk,\n                `CLI/bin/ares-setup-device${isSystemWin ? '.cmd' : ''}`\n            )\n        );\n        c.cli[CLI_WEBOS_ARES_DEVICE_INFO] = getRealPath(\n            c,\n            path.join(\n                sdk,\n                `CLI/bin/ares-device-info${isSystemWin ? '.cmd' : ''}`\n            )\n        );\n        c.cli[CLI_WEBOS_ARES_NOVACOM] = getRealPath(\n            c,\n            path.join(sdk, `CLI/bin/ares-novacom${isSystemWin ? '.cmd' : ''}`)\n        );\n    } else {\n        _logSdkWarning(c);\n    }\n};\n\nexport const checkAndConfigureSdks = async (c) => {\n    logTask('checkAndConfigureSdks');\n\n    switch (c.platform) {\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            return checkAndConfigureAndroidSdks(c);\n        case TIZEN:\n        case TIZEN_MOBILE:\n        case TIZEN_WATCH:\n            return checkAndConfigureTizenSdks(c);\n        case WEBOS:\n            return checkAndConfigureWebosSdks(c);\n        default:\n            return true;\n    }\n};\n\nconst _getCurrentSdkPath = c => c.buildConfig?.sdks?.[SDK_PLATFORMS[c.platform]];\n\nconst _isSdkInstalled = (c) => {\n    logTask('_isSdkInstalled');\n\n    if (!SDK_PLATFORMS[c.platform]) return true;\n\n    const sdkPath = _getCurrentSdkPath(c, c.platform);\n\n    return fsExistsSync(getRealPath(c, sdkPath));\n};\n\nconst _attemptAutoFix = async (c, sdkPlatform) => {\n    logTask('_attemptAutoFix');\n    const result = SDK_LOACTIONS[sdkPlatform].find(v => fsExistsSync(v));\n    if (result) {\n        logSuccess(\n            `Found existing ${c.platform} SDK location at ${chalk().white(\n                result\n            )}`\n        );\n        let confirmSdk = true;\n        if (!c.program.ci) {\n            const { confirm } = await inquirer.prompt({\n                type: 'confirm',\n                name: 'confirm',\n                message: 'Do you want to use it?'\n            });\n            confirmSdk = confirm;\n        }\n\n        if (confirmSdk) {\n            try {\n                c.files.workspace.config.sdks[\n                    SDK_PLATFORMS[c.platform]\n                ] = result;\n                if (sdkPlatform === 'android') {\n                    c.files.workspace.config.sdks.ANDROID_NDK = `${path.join(result, 'ndk-bundle')}`;\n                }\n                writeFileSync(\n                    c.paths.workspace.config,\n                    c.files.workspace.config\n                );\n                generateBuildConfig(c);\n                await checkAndConfigureSdks(c);\n            } catch (e) {\n                logError(e);\n            }\n\n            return true;\n        }\n    }\n\n    logTask(`_attemptAutoFix: no sdks found. searched at: ${SDK_LOACTIONS[sdkPlatform].join(', ')}`);\n\n    const setupInstance = PlatformSetup(c);\n    await setupInstance.askToInstallSDK(sdkPlatform);\n    generateBuildConfig(c);\n    return true;\n};\n\nexport const checkSdk = async (c) => {\n    logTask('checkSdk');\n    if (!_isSdkInstalled(c)) {\n        logWarning(\n            `${\n                c.platform\n            } requires SDK to be installed. Your SDK path in ${chalk().white(\n                c.paths.workspace.config\n            )} does not exist: ${chalk().white(_getCurrentSdkPath(c))}`\n        );\n\n        switch (c.platform) {\n            case ANDROID:\n            case ANDROID_TV:\n            case ANDROID_WEAR:\n                return _attemptAutoFix(c, 'android');\n            case TIZEN:\n            case TIZEN_MOBILE:\n            case TIZEN_WATCH:\n                return _attemptAutoFix(c, 'tizen');\n            case WEBOS:\n                return _attemptAutoFix(c, 'webos');\n            default:\n                return true;\n        }\n    }\n    return true;\n};\n"],"file":"index.js"}