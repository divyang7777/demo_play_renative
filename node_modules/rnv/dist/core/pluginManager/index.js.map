{"version":3,"sources":["../../../src/core/pluginManager/index.js"],"names":["getPluginList","c","isUpdate","output","asString","asArray","plugins","allPlugins","i","Object","keys","files","rnv","pluginTemplates","configs","forEach","pk","k","p","platforms","SUPPORTED_PLATFORMS","v","length","slice","installedPlugin","buildConfig","installedString","yellow","green","push","versionString","version","bold","name","value","grey","sort","a","b","aStr","toLowerCase","bStr","com","_getPluginScope","plugin","String","startsWith","scope","split","pop","npmVersion","source","getMergedPlugin","key","scopes","mergedPlugin","_getMergedPlugin","reverse","_scopes","_id","pluginKey","parentScope","skipSanitize","parentPlugin","currentPlugin","configPropsInjects","INJECTABLE_CONFIG_PROPS","platform","pluginDependencies","plugDepKey","mergedObj","obj","_refs","props","configurePlugins","project","package","dependencies","hasPackageChanged","newDeps","newDevDeps","devDependencies","white","paths","builds","config","runtime","isWrapper","red","npm","npmKey","npmDep","topLevelPlugin","cyan","skipPackageUpdate","_updatePackage","override","newPackage","_requiresNpmInstall","resolvePluginDependants","pluginKeys","_resolvePluginDependencies","keyScope","parentKey","depPlugin","type","message","warningMessage","confirm","deps","depsKeys","depKey","depScope","parsePlugins","pluginCallback","ignorePlatformObjectCheck","includedPlugins","excludedPlugins","includes","pluginPlat","enabled","deprecated","appConfig","loadPluginTemplates","dirs","dir","customPluginTemplates","missingDeps","_parsePluginTemplateDependencies","dep","val","ptPath","path","join","replace","ptConfig","RENATIVE_CONFIG_PLUGINS_NAME","pluginTemplateDependencies","getCleanRegExString","str","_overridePlugin","pluginsPath","resolve","dest","flavourSource","overridePath","overrideConfig","overrides","ovDir","isDirectory","overrideFileContents","fileToFix","toString","foundRegEx","failTerms","fk","regEx","RegExp","count","match","overrided","regEx2","count2","term","installPackageDependenciesAndPlugins","overrideTemplatePlugins","rnvPluginsDirs","appPluginDirs","pluginDirs","appBasePluginDir","appConfigBase","pluginsDir","pluginScope","pluginOverridePath","copyTemplatePluginsSync","destPath","objectInject","pattern","sourcePathRnvPlugin","sourcePath3","sourcePath3secLegacy","workspace","dir_LEGACY","sourcePath3sec","sourcePath2","sourcePath2sec","getLocalRenativePlugin","webpack","modulePaths","moduleAliases","renative","projectPath"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\n/* eslint-disable no-await-in-loop */\nimport path from 'path';\nimport merge from 'deepmerge';\nimport {\n    mergeObjects,\n    sanitizeDynamicProps,\n    readObjectSync,\n    copyFolderContentsRecursiveSync,\n    fsWriteFileSync,\n    fsExistsSync,\n    fsLstatSync,\n    fsReadFileSync\n} from '../systemManager/fileutils';\nimport { installPackageDependencies } from '../systemManager/npmUtils';\nimport { getConfigProp, getBuildsFolder, getAppFolder } from '../common';\nimport { versionCheck, writeRenativeConfigFile } from '../configManager/configParser';\n\nimport { SUPPORTED_PLATFORMS, INJECTABLE_CONFIG_PROPS, RENATIVE_CONFIG_PLUGINS_NAME } from '../constants';\nimport {\n    chalk,\n    logSuccess,\n    logTask,\n    logWarning,\n    logError,\n    logDebug,\n    logInfo\n} from '../systemManager/logger';\nimport { doResolve } from '../resolve';\nimport { inquirerPrompt } from '../../cli/prompt';\n\nexport const getPluginList = (c, isUpdate = false) => {\n    const output = {\n        asString: '',\n        asArray: [],\n        plugins: [],\n        allPlugins: {} // this is used by taskRnvPluginAdd\n    };\n\n    let i = 1;\n\n    Object.keys(c.files.rnv.pluginTemplates.configs).forEach((pk) => {\n        const plugins = c.files.rnv.pluginTemplates.configs[pk].pluginTemplates;\n        Object.keys(plugins).forEach((k) => {\n            const p = plugins[k];\n\n            let platforms = '';\n            SUPPORTED_PLATFORMS.forEach((v) => {\n                if (p[v]) platforms += `${v}, `;\n            });\n            if (platforms.length) {\n                platforms = platforms.slice(0, platforms.length - 2);\n            }\n            const installedPlugin = c.buildConfig\n                && c.buildConfig.plugins\n                && c.buildConfig.plugins[k];\n            const installedString = installedPlugin\n                ? chalk().yellow('installed')\n                : chalk().green('not installed');\n            if (isUpdate && installedPlugin) {\n                output.plugins.push(k);\n                let versionString;\n                if (installedPlugin.version !== p.version) {\n                    versionString = `(${chalk().yellow(\n                        installedPlugin.version\n                    )}) => (${chalk().green(p.version)})`;\n                } else {\n                    versionString = `(${chalk().green(installedPlugin.version)})`;\n                }\n                output.asString += ` [${i}]> ${chalk().bold(\n                    k\n                )} ${versionString}\\n`;\n                output.asArray.push({\n                    name: `${k} ${versionString}`,\n                    value: k\n                });\n                output.allPlugins[k] = p; // this is used by taskRnvPluginAdd\n                i++;\n            } else if (!isUpdate) {\n                output.plugins.push(k);\n                output.asString += ` [${i}]> ${chalk().bold(k)} (${chalk().grey(\n                    p.version\n                )}) [${platforms}] - ${installedString}\\n`;\n                output.asArray.push({\n                    name: `${k} (${chalk().grey(\n                        p.version\n                    )}) [${platforms}] - ${installedString}`,\n                    value: k\n                });\n                output.allPlugins[k] = p; // this is used by taskRnvPluginAdd\n\n                i++;\n            }\n            output.asArray.sort((a, b) => {\n                const aStr = a.name.toLowerCase();\n                const bStr = b.name.toLowerCase();\n                let com = 0;\n                if (aStr > bStr) {\n                    com = 1;\n                } else if (aStr < bStr) {\n                    com = -1;\n                }\n                return com;\n            });\n        });\n    });\n\n    return output;\n};\n\n\nconst _getPluginScope = (plugin) => {\n    if (typeof plugin === 'string' || plugin instanceof String) {\n        if (plugin.startsWith('source:')) {\n            return { scope: plugin.split(':').pop() };\n        }\n        return { npmVersion: plugin };\n    } if (plugin?.source) {\n        return { scope: plugin?.source };\n    }\n    return { scope: 'rnv' };\n};\n\nexport const getMergedPlugin = (c, key) => {\n    logDebug(`getMergedPlugin:${key}`);\n\n    const plugin = c.buildConfig.plugins?.[key];\n    if (!plugin) return null;\n\n    const scopes = [];\n    const mergedPlugin = _getMergedPlugin(c, plugin, key, null, scopes);\n    scopes.reverse();\n    // if (!mergedPlugin.version) {\n    //     logWarning(`Plugin ${key} has no version`);\n    //     // return null;\n    // }\n    mergedPlugin._scopes = scopes;\n    mergedPlugin._id = key;\n    return mergedPlugin;\n};\n\nconst _getMergedPlugin = (c, plugin, pluginKey, parentScope, scopes, skipSanitize) => {\n    if (!plugin) {\n        return {};\n    }\n\n    const { scope, npmVersion } = _getPluginScope(plugin);\n    if (scope === parentScope) return plugin;\n\n    if (npmVersion) {\n        return {\n            version: npmVersion\n        };\n    }\n    if (scope !== '' && !!scope && !c.buildConfig.pluginTemplates?.[scope]) {\n        logWarning(\n            `Plugin ${pluginKey} is not recognized plugin in ${scope} scope`\n        );\n    } else if (scope) {\n        scopes.push(scope);\n    }\n\n    const parentPlugin = _getMergedPlugin(c,\n      c.buildConfig.pluginTemplates?.[scope]?.[pluginKey], pluginKey, scope, scopes, true);\n    let currentPlugin = plugin;\n    if (typeof plugin === 'string' || plugin instanceof String) {\n        currentPlugin = {};\n    }\n    const configPropsInjects = {};\n    INJECTABLE_CONFIG_PROPS.forEach((v) => {\n        configPropsInjects[v] = getConfigProp(c, c.platform, v);\n    });\n    if (currentPlugin.pluginDependencies) {\n        Object.keys(currentPlugin.pluginDependencies).forEach((plugDepKey) => {\n            if (currentPlugin.pluginDependencies[plugDepKey] === 'source:self') {\n                currentPlugin.pluginDependencies[plugDepKey] = `source:${parentScope}`;\n            }\n        });\n    }\n    const mergedObj = mergeObjects(c, parentPlugin, currentPlugin, true, true);\n    // IMPORTANT: only final top level merge should be sanitized\n    const obj = skipSanitize ? mergedObj : sanitizeDynamicProps(mergedObj, c.buildConfig?._refs);\n\n    // IMPORTANT: only final top level merge should be sanitized\n    const mergedPlugin = skipSanitize ? obj : sanitizeDynamicProps(obj, obj.props, configPropsInjects);\n\n    return mergedPlugin;\n};\n\nexport const configurePlugins = async (c) => {\n    logTask('configurePlugins');\n\n    if (!c.files.project.package.dependencies) {\n        c.files.project.package.dependencies = {};\n    }\n\n    let hasPackageChanged = false;\n\n    if (!c.buildConfig?.plugins) {\n        return;\n    }\n\n    const newDeps = {};\n    const newDevDeps = {};\n    const { dependencies, devDependencies } = c.files.project.package;\n    Object.keys(c.buildConfig.plugins).forEach((k) => {\n        const plugin = getMergedPlugin(c, k);\n\n        if (!plugin) {\n            logWarning(\n                `Plugin with name ${chalk().white(\n                    k\n                )} does not exists in ReNative source:rnv scope. you need to define it manually here: ${chalk().white(\n                    c.paths.project.builds.config\n                )}`\n            );\n        } else if (dependencies && dependencies[k]) {\n            if (plugin['no-active'] !== true && plugin['no-npm'] !== true\n                    && dependencies[k] !== plugin.version) {\n                if (k === 'renative' && c.runtime.isWrapper) {\n                    logWarning(\n                        \"You're in ReNative wrapper mode. plugin renative will stay as local dep!\"\n                    );\n                } else {\n                    logWarning(\n                        `Version mismatch of dependency ${chalk().white(\n                            k\n                        )} between:\n${chalk().white(c.paths.project.package)}: v(${chalk().red(dependencies[k])}) and\n${chalk().white(c.paths.project.builds.config)}: v(${chalk().green(\n    plugin.version\n)}).\npackage.json will be overriden`\n                    );\n\n                    hasPackageChanged = true;\n                    newDeps[k] = plugin.version;\n                }\n            }\n        } else if (devDependencies && devDependencies[k]) {\n            if (\n                plugin['no-active'] !== true\n                    && plugin['no-npm'] !== true\n                    && devDependencies[k] !== plugin.version\n            ) {\n                logWarning(\n                    `Version mismatch of devDependency ${chalk().white(\n                        k\n                    )} between package.json: v(${chalk().red(\n                        devDependencies[k]\n                    )}) and plugins.json: v(${chalk().red(\n                        plugin.version\n                    )}). package.json will be overriden`\n                );\n                hasPackageChanged = true;\n                newDevDeps[k] = plugin.version;\n            }\n        } else if (\n            plugin['no-active'] !== true\n                && plugin['no-npm'] !== true\n        ) {\n            // Dependency does not exists\n            if (plugin.version) {\n                logInfo(\n                    `Missing dependency ${chalk().white(k)} v(${chalk().red(\n                        plugin.version\n                    )}) in package.json. INSTALLING...DONE`\n                );\n\n                hasPackageChanged = true;\n                newDeps[k] = plugin.version;\n            }\n        }\n\n        if (plugin && plugin.npm) {\n            Object.keys(plugin.npm).forEach((npmKey) => {\n                const npmDep = plugin.npm[npmKey];\n                // IMPORTANT: Do not override top level override with plugin.npm ones\n                const topLevelPlugin = getMergedPlugin(c, npmKey);\n                if (topLevelPlugin && topLevelPlugin?.version !== npmDep) {\n                    logInfo(`RNV Detected plugin dependency conflict. ${chalk().cyan('RESOLVING...')}\n- ${npmKey}@${chalk().green(topLevelPlugin?.version)} ${chalk().cyan('<=')}\n- ${k} .npm sub dependencies:\n   |- ${npmKey}@${chalk().red(npmDep)}`);\n                } else if (!dependencies[npmKey]) {\n                    logInfo(\n                        `Plugin ${chalk().white(\n                            k\n                        )} requires npm dependency ${chalk().white(\n                            npmKey\n                        )}. INSTALLING...DONE`\n                    );\n                    newDeps[npmKey] = npmDep;\n                    hasPackageChanged = true;\n                } else if (dependencies[npmKey] !== npmDep) {\n                    logWarning(\n                        `Plugin ${chalk().white(\n                            k\n                        )} npm dependency ${chalk().white(npmKey)} mismatch (${chalk().red(\n                            dependencies[npmKey]\n                        )}) => (${chalk().green(\n                            npmDep\n                        )}) .updating npm dependency in your package.json`\n                    );\n                    newDeps[npmKey] = npmDep;\n                    hasPackageChanged = true;\n                }\n            });\n        }\n    });\n\n    // logTask('configurePlugins', `shouldUpdate:${!!hasPackageChanged}:${!c.runtime.skipPackageUpdate}`);\n    await versionCheck(c);\n\n    if (hasPackageChanged && !c.runtime.skipPackageUpdate) {\n        _updatePackage(c, { dependencies: newDeps, devDependencies: newDevDeps });\n    }\n    return true;\n};\n\nconst _updatePackage = (c, override) => {\n    const newPackage = merge(c.files.project.package, override);\n    writeRenativeConfigFile(c, c.paths.project.package, newPackage);\n    c.files.project.package = newPackage;\n    c._requiresNpmInstall = true;\n};\n\nexport const resolvePluginDependants = async (c) => {\n    logTask('resolvePluginDependants');\n    const { plugins } = c.buildConfig;\n\n    if (plugins) {\n        const pluginKeys = Object.keys(plugins);\n        for (let i = 0; i < pluginKeys.length; i++) {\n            const key = pluginKeys[i];\n            await _resolvePluginDependencies(c, key, plugins[key], null);\n        }\n    }\n\n    return true;\n};\n\nconst _resolvePluginDependencies = async (c, key, keyScope, parentKey) => {\n    // IMPORTANT: Do not cache this valuse as they need to be refreshed every\n    // round in case new plugin has been installed and c.buildConfig generated\n    const { pluginTemplates } = c.buildConfig;\n    const plugin = getMergedPlugin(c, key);\n\n    const { scope } = _getPluginScope(keyScope);\n\n    if (!plugin) {\n        const depPlugin = pluginTemplates[scope]?.[key];\n\n        if (depPlugin) {\n            // console.log('INSTALL PLUGIN???', key, depPlugin.source);\n            const { confirm } = await inquirerPrompt({\n                type: 'confirm',\n                message: `Install ${key}?`,\n                warningMessage: `Plugin ${chalk().white(key)} source:${\n                    chalk().white(scope)} required by ${chalk().red(parentKey)} is not installed`\n            });\n            if (confirm) {\n                c.files.project.config.plugins[key] = `source:${scope}`;\n                writeRenativeConfigFile(c, c.paths.project.config, c.files.project.config);\n                logSuccess(`Plugin ${key} sucessfully installed`);\n                c._requiresNpmInstall = true;\n            }\n        } else {\n            logWarning(`Plugin ${chalk().white(parentKey)} requires ${\n                chalk().red(key)} which is not available in your system`);\n        }\n    } else {\n        // All good\n    }\n\n    const deps = plugin?.pluginDependencies;\n    if (deps) {\n        const depsKeys = Object.keys(deps);\n        for (let i = 0; i < depsKeys.length; i++) {\n            const depKey = depsKeys[i];\n            const depScope = deps[depKey];\n            await _resolvePluginDependencies(c, depKey, depScope, key);\n        }\n    }\n    return true;\n};\n\nexport const parsePlugins = (c, platform, pluginCallback, ignorePlatformObjectCheck) => {\n    logTask('parsePlugins');\n    if (c.buildConfig) {\n        const includedPlugins = getConfigProp(\n            c,\n            platform,\n            'includedPlugins',\n            []\n        );\n        const excludedPlugins = getConfigProp(\n            c,\n            platform,\n            'excludedPlugins',\n            []\n        );\n        if (includedPlugins) {\n            const { plugins } = c.buildConfig;\n            if (plugins) {\n                Object.keys(plugins).forEach((key) => {\n                    if (\n                        (includedPlugins.includes('*')\n                            || includedPlugins.includes(key))\n                        && !excludedPlugins.includes(key)\n                    ) {\n                        const plugin = getMergedPlugin(c, key);\n                        if (plugin) {\n                            const pluginPlat = plugin[platform];\n                            if (ignorePlatformObjectCheck) {\n                                pluginCallback(plugin, pluginPlat, key);\n                            } else if (pluginPlat) {\n                                if (\n                                    plugin['no-active'] !== true\n                                    && plugin.enabled !== false\n                                    && pluginPlat.enabled !== false\n                                ) {\n                                    if (plugin.deprecated) {\n                                        logWarning(plugin.deprecated);\n                                    }\n                                    if (pluginCallback) {\n                                        pluginCallback(plugin, pluginPlat, key);\n                                    }\n                                } else {\n                                    logWarning(\n                                        `Plugin ${key} is marked disabled. skipping.`\n                                    );\n                                }\n                            }\n                        }\n                    }\n                });\n            } else {\n                logError(\n                    `You have no plugins defined in ${chalk().white(\n                        c.paths.project.builds.config\n                    )}`\n                );\n            }\n        } else {\n            logWarning(\n                `You haven't included any ${chalk().white(\n                    '{ common: { includedPlugins: [] }}'\n                )} in your ${chalk().white(\n                    c.paths.appConfig.config\n                )}. Your app might not work correctly`\n            );\n        }\n    }\n};\n\nexport const loadPluginTemplates = async (c) => {\n    logTask('loadPluginTemplates');\n    c.files.rnv.pluginTemplates.config = readObjectSync(\n        c.paths.rnv.pluginTemplates.config\n    );\n\n    c.files.rnv.pluginTemplates.configs = {\n        rnv: c.files.rnv.pluginTemplates.config\n    };\n\n    c.paths.rnv.pluginTemplates.dirs = { rnv: c.paths.rnv.pluginTemplates.dir };\n\n    const customPluginTemplates = c.files.project.config?.paths?.pluginTemplates;\n    const missingDeps = _parsePluginTemplateDependencies(c, customPluginTemplates);\n    if (missingDeps.length) {\n        const { dependencies } = c.files.project.package;\n        let hasPackageChanged = false;\n        missingDeps.forEach((dep) => {\n            const plugin = getMergedPlugin(c, dep);\n            if (plugin) {\n                hasPackageChanged = true;\n                dependencies[dep] = plugin.version;\n            } else {\n                // Unresolved Plugin\n            }\n        });\n        // CHECK IF paths.pluginTemplates SCOPES are INSTALLED\n        // This must be installed to avoid scoped plugins errors\n        if (hasPackageChanged) {\n            _updatePackage(c, { dependencies });\n            logInfo('Found missing dependency scopes. INSTALLING...');\n            await installPackageDependencies(c);\n            await loadPluginTemplates(c);\n        } else {\n            missingDeps.forEach((npmDep) => {\n                logWarning(`Plugin scope ${npmDep} does not exists in package.json.`);\n            });\n        }\n    }\n    return true;\n};\n\nconst _parsePluginTemplateDependencies = (c, customPluginTemplates, scope = 'root') => {\n    logTask('_parsePluginTemplateDependencies', `scope:${scope}`);\n    const missingDeps = [];\n    if (customPluginTemplates) {\n        Object.keys(customPluginTemplates).forEach((k) => {\n            const val = customPluginTemplates[k];\n            if (val.npm) {\n                const npmDep = c.files.project.package?.dependencies[val.npm]\n                  || c.files.project.package?.devDependencies[val.npm];\n\n                if (npmDep) {\n                    let ptPath;\n                    if (npmDep.startsWith('file:')) {\n                        ptPath = path.join(\n                            c.paths.project.dir,\n                            npmDep.replace('file:', ''),\n                            val.path || ''\n                        );\n                    } else {\n                        // ptPath = path.join(c.paths.project.nodeModulesDir, val.npm, val.path || '');\n                        ptPath = `${doResolve(val.npm)}/${val.path}`;\n                    }\n\n                    const ptConfig = path.join(\n                        ptPath,\n                        RENATIVE_CONFIG_PLUGINS_NAME\n                    );\n                    c.paths.rnv.pluginTemplates.dirs[k] = ptPath;\n                    if (fsExistsSync(ptConfig)) {\n                        c.files.rnv.pluginTemplates.configs[k] = readObjectSync(\n                            ptConfig\n                        );\n                        _parsePluginTemplateDependencies(c,\n                            c.files.rnv.pluginTemplates.configs[k].pluginTemplateDependencies,\n                            k);\n                    } else {\n                        logWarning(`Plugin scope ${val.npm} is not installed yet.`);\n                    }\n                } else {\n                    // logWarning(`Plugin scope ${val.npm} does not exists in package.json.`);\n                    missingDeps.push(val.npm);\n                }\n            }\n        });\n    }\n    return missingDeps;\n};\n\nconst getCleanRegExString = str => str\n    .replace(/\\(/g, '\\\\(')\n    .replace(/\\)/g, '\\\\)')\n    .replace(/\\^/g, '\\\\^')\n    .replace(/\\?/g, '\\\\?')\n    .replace(/\\|/g, '\\\\|')\n    .replace(/\\*/g, '\\\\*')\n    .replace(/\\|/g, '\\\\|')\n    .replace(/\\[/g, '\\\\[')\n    .replace(/\\]/g, '\\\\]')\n    .replace(/\\{/g, '\\\\{')\n    .replace(/\\}/g, '\\\\}')\n    .replace(/\\+/g, '\\\\+')\n    .replace(/ /g, ' {1,}');\n\nconst _overridePlugin = (c, pluginsPath, dir) => {\n    const source = path.resolve(pluginsPath, dir, 'overrides');\n    const dest = doResolve(dir, false);\n    if (!dest) return;\n\n    const plugin = getMergedPlugin(c, dir);\n    let flavourSource;\n    if (plugin) {\n        flavourSource = path.resolve(\n            pluginsPath,\n            dir,\n            `overrides@${plugin.version}`\n        );\n    }\n\n    if (flavourSource && fsExistsSync(flavourSource)) {\n        copyFolderContentsRecursiveSync(flavourSource, dest, false);\n    } else if (fsExistsSync(source)) {\n        copyFolderContentsRecursiveSync(source, dest, false);\n        // fsReaddirSync(pp).forEach((dir) => {\n        //     copyFileSync(path.resolve(pp, file), path.resolve(c.paths.project.dir, 'node_modules', dir));\n        // });\n    } else {\n        logDebug(\n            `Your plugin configuration has no override path ${chalk().white(\n                source\n            )}. skipping folder override action`\n        );\n    }\n\n    let overridePath = path.resolve(pluginsPath, dir, `overrides@${plugin.version}.json`);\n    if (!fsExistsSync(overridePath)) {\n        overridePath = path.resolve(pluginsPath, dir, 'overrides.json');\n    }\n    const overrideConfig = readObjectSync(overridePath);\n    const overrides = overrideConfig?.overrides;\n    if (overrides) {\n        Object.keys(overrides).forEach((k) => {\n            const ovDir = path.join(dest, k);\n            const override = overrides[k];\n            if (fsExistsSync(ovDir)) {\n                if (fsLstatSync(ovDir).isDirectory()) {\n                    logWarning(\n                        'overrides.json: Directories not supported yet. specify path to actual file'\n                    );\n                } else {\n                    overrideFileContents(ovDir, override, overridePath);\n                }\n            }\n        });\n    }\n};\n\nexport const overrideFileContents = (dest, override, overridePath = '') => {\n    let fileToFix = fsReadFileSync(dest).toString();\n    let foundRegEx = false;\n    const failTerms = [];\n    Object.keys(override).forEach((fk) => {\n        const regEx = new RegExp(`${getCleanRegExString(fk)}`, 'g');\n        const count = (fileToFix.match(regEx) || []).length;\n\n        const overrided = override[fk];\n        const regEx2 = new RegExp(getCleanRegExString(overrided), 'g');\n        const count2 = (fileToFix.match(regEx2) || []).length;\n        if (!count) {\n            if (!count2) {\n                failTerms.push(fk);\n            } else {\n                foundRegEx = true;\n            }\n        } else {\n            foundRegEx = true;\n            fileToFix = fileToFix.replace(regEx, override[fk]);\n        }\n    });\n    if (!foundRegEx) {\n        failTerms.forEach((term) => {\n            logWarning(`No Match found in ${chalk().red(\n                dest\n            )} for expression: ${chalk().red(term)}.\nConsider update or removal of ${chalk().white(overridePath)}`);\n        });\n    }\n\n    fsWriteFileSync(dest, fileToFix);\n};\n\nexport const installPackageDependenciesAndPlugins = async (c) => {\n    logTask('installPackageDependenciesAndPlugins');\n\n    await installPackageDependencies(c);\n    await overrideTemplatePlugins(c);\n};\n\n\nexport const overrideTemplatePlugins = async (c) => {\n    logTask('overrideTemplatePlugins');\n\n    const rnvPluginsDirs = c.paths.rnv.pluginTemplates.dirs;\n    const appPluginDirs = c.paths.appConfig.pluginDirs;\n    const appBasePluginDir = c.paths.project.appConfigBase.pluginsDir;\n\n    parsePlugins(c, c.platform, (plugin, pluginPlat, key) => {\n        if (plugin?._scopes?.length) {\n            plugin._scopes.forEach((pluginScope) => {\n                const pluginOverridePath = rnvPluginsDirs[pluginScope];\n                if (pluginOverridePath) {\n                    _overridePlugin(c, pluginOverridePath, key);\n                }\n            });\n        }\n\n        if (appBasePluginDir) {\n            _overridePlugin(c, appBasePluginDir, key);\n        }\n        if (appPluginDirs) {\n            for (let k = 0; k < appPluginDirs.length; k++) {\n                _overridePlugin(c, appPluginDirs[k], key);\n            }\n        }\n    }, true);\n    return true;\n};\n\nexport const copyTemplatePluginsSync = (c) => {\n    const { platform } = c;\n    const destPath = path.join(getAppFolder(c));\n\n    logTask('copyTemplatePluginsSync', `(${destPath})`);\n\n\n    parsePlugins(c, platform, (plugin, pluginPlat, key) => {\n        const objectInject = [...c.configPropsInjects];\n        if (plugin.props) {\n            Object.keys(plugin.props).forEach((v) => {\n                objectInject.push({\n                    pattern: `{{props.${v}}}`,\n                    override: plugin.props[v]\n                });\n            });\n        }\n        // FOLDER MERGES FROM PROJECT CONFIG PLUGIN\n        const sourcePathRnvPlugin = getBuildsFolder(\n            c,\n            platform,\n            path.join(c.paths.rnv.pluginTemplates.dir, key)\n        );\n        copyFolderContentsRecursiveSync(sourcePathRnvPlugin, destPath, true, false, false, objectInject);\n\n        // FOLDER MERGES FROM PROJECT CONFIG PLUGIN\n        const sourcePath3 = getBuildsFolder(\n            c,\n            platform,\n            path.join(c.paths.project.appConfigBase.dir, `plugins/${key}`)\n        );\n        copyFolderContentsRecursiveSync(sourcePath3, destPath, true, false, false, objectInject);\n\n        // FOLDER MERGERS FROM PROJECT CONFIG (PRIVATE)\n        const sourcePath3secLegacy = getBuildsFolder(\n            c,\n            platform,\n            path.join(\n                c.paths.workspace.project.appConfigBase.dir_LEGACY,\n                `plugins/${key}`\n            )\n        );\n        copyFolderContentsRecursiveSync(sourcePath3secLegacy, destPath, true, false, false, objectInject);\n\n        // FOLDER MERGES FROM PROJECT CONFIG PLUGIN (PRIVATE)\n        const sourcePath3sec = getBuildsFolder(\n            c,\n            platform,\n            path.join(\n                c.paths.workspace.project.appConfigBase.dir,\n                `plugins/${key}`\n            )\n        );\n        copyFolderContentsRecursiveSync(sourcePath3sec, destPath, true, false, false, objectInject);\n\n        if (fsExistsSync(sourcePath3secLegacy)) {\n            logWarning(`Path: ${chalk().red(sourcePath3secLegacy)} is DEPRECATED.\n    Move your files to: ${chalk().white(sourcePath3sec)} instead`);\n        }\n\n        // FOLDER MERGES FROM APP CONFIG PLUGIN\n        const sourcePath2 = getBuildsFolder(\n            c,\n            platform,\n            path.join(c.paths.appConfig.dir, `plugins/${key}`)\n        );\n        copyFolderContentsRecursiveSync(sourcePath2, destPath, true, false, false, objectInject);\n\n        // FOLDER MERGES FROM APP CONFIG PLUGIN (PRIVATE)\n        const sourcePath2sec = getBuildsFolder(\n            c,\n            platform,\n            path.join(c.paths.workspace.appConfig.dir, `plugins/${key}`)\n        );\n        copyFolderContentsRecursiveSync(sourcePath2sec, destPath, true, false, false, objectInject);\n    });\n};\n\nexport const getLocalRenativePlugin = () => ({\n    version: 'file:../packages/renative',\n    webpack: {\n        modulePaths: [],\n        moduleAliases: {\n            renative: {\n                projectPath: 'packages/renative'\n            }\n        }\n    }\n});\n\nexport default { getMergedPlugin, parsePlugins, getLocalRenativePlugin };\n"],"file":"index.js"}