{"version":3,"sources":["../../src/pluginTools/index.js"],"names":["rnvPluginList","c","Promise","resolve","o","_getPluginList","asString","isUpdate","output","asArray","plugins","allPlugins","i","Object","keys","files","rnv","pluginTemplates","configs","forEach","pk","k","p","platforms","SUPPORTED_PLATFORMS","v","length","slice","installedPlugin","buildConfig","installedString","chalk","yellow","green","push","versionString","version","bold","name","value","grey","sort","a","b","aStr","toLowerCase","bStr","com","rnvPluginAdd","runtime","isWrapper","reject","selPluginKey","program","rawArgs","selPlugin","selectedPlugins","installMessage","inquirer","prompt","type","message","choices","pageSize","plugin","white","questionPlugins","key","props","project","config","_checkAndAddDependantPlugins","pluginKeys","pluginKey","pluginProps","finalProps","i2","propValue","spinner","join","start","paths","succeed","dependsOn","templatePlugins","rnvPluginUpdate","confirm","json","getMergedPlugin","rnvPlugin","source","origPlugin","String","startsWith","scope","split","pop","skipMerge","_getMergedPlugin","mergedPlugin","obj1","obj2","configPropsInject","INJECTABLE_CONFIG_PROPS","platform","obj","_refs","configurePlugins","package","dependencies","hasPackageChanged","devDependencies","builds","red","npm","npmKey","npmDep","then","skipPackageUpdate","_requiresNpmInstall","catch","e","parsePlugins","pluginCallback","ignorePlatformObjectCheck","includedPlugins","excludedPlugins","includes","pluginPlat","enabled","deprecated","appConfig","loadPluginTemplates","dirs","dir","customPluginTemplates","val","ptPath","path","replace","ptConfig","RENATIVE_CONFIG_PLUGINS_NAME","fs","existsSync","_overridePlugin","pluginsPath","dest","flavourSource","overridePath","overrideConfig","overrides","override","ovDir","lstatSync","isDirectory","fileToFix","readFileSync","toString","fk","regEx","RegExp","count","match","overrideTemplatePlugins","rnvPluginsDirs","appPluginDirs","pluginDirs","appBasePluginDir","projectConfig","pluginsDir","pluginOverridePath","copyTemplatePluginsSync","destPath","objectInject","pattern","sourcePathRnvPlugin","sourcePath3","sourcePath3sec","workspace","sourcePath2","sourcePath2sec","getLocalRenativePlugin","webpack","modulePaths","moduleAliases","renative","projectPath"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\nimport fs from 'fs';\nimport path from 'path';\nimport ora from 'ora';\nimport {\n    mergeObjects,\n    writeFileSync,\n    sanitizeDynamicProps,\n    readObjectSync,\n    copyFolderContentsRecursiveSync,\n    fsWriteFileSync\n} from '../systemTools/fileutils';\nimport { getConfigProp, getBuildsFolder, getAppFolder } from '../common';\nimport { versionCheck } from '../configTools/configParser';\n\nimport { SUPPORTED_PLATFORMS, INJECTABLE_CONFIG_PROPS, RENATIVE_CONFIG_PLUGINS_NAME } from '../constants';\nimport {\n    logSuccess,\n    logTask,\n    logWarning,\n    logError,\n    logToSummary,\n    logDebug\n} from '../systemTools/logger';\nimport { doResolve } from '../resolve';\n\nexport const rnvPluginList = c => new Promise((resolve) => {\n    logTask('_runList');\n\n    const o = _getPluginList(c);\n\n    // console.log(o.asString);\n    logToSummary(`Plugins:\\n\\n${o.asString}`);\n\n    resolve();\n});\n\nconst _getPluginList = (c, isUpdate = false) => {\n    const output = {\n        asString: '',\n        asArray: [],\n        plugins: [],\n        allPlugins: {} // this is used by rnvPluginAdd\n    };\n\n    let i = 1;\n\n    Object.keys(c.files.rnv.pluginTemplates.configs).forEach((pk) => {\n        const plugins = c.files.rnv.pluginTemplates.configs[pk].pluginTemplates;\n        Object.keys(plugins).forEach((k) => {\n            const p = plugins[k];\n\n            let platforms = '';\n            SUPPORTED_PLATFORMS.forEach((v) => {\n                if (p[v]) platforms += `${v}, `;\n            });\n            if (platforms.length) {\n                platforms = platforms.slice(0, platforms.length - 2);\n            }\n            const installedPlugin = c.buildConfig\n                && c.buildConfig.plugins\n                && c.buildConfig.plugins[k];\n            const installedString = installedPlugin\n                ? chalk.yellow('installed')\n                : chalk.green('not installed');\n            if (isUpdate && installedPlugin) {\n                output.plugins.push(k);\n                let versionString;\n                if (installedPlugin.version !== p.version) {\n                    versionString = `(${chalk.yellow(\n                        installedPlugin.version\n                    )}) => (${chalk.green(p.version)})`;\n                } else {\n                    versionString = `(${chalk.green(installedPlugin.version)})`;\n                }\n                output.asString += ` [${i}]> ${chalk.bold(\n                    k\n                )} ${versionString}\\n`;\n                output.asArray.push({\n                    name: `${k} ${versionString}`,\n                    value: k\n                });\n                output.allPlugins[k] = p; // this is used by rnvPluginAdd\n                i++;\n            } else if (!isUpdate) {\n                output.plugins.push(k);\n                output.asString += ` [${i}]> ${chalk.bold(k)} (${chalk.grey(\n                    p.version\n                )}) [${platforms}] - ${installedString}\\n`;\n                output.asArray.push({\n                    name: `${k} (${chalk.grey(\n                        p.version\n                    )}) [${platforms}] - ${installedString}`,\n                    value: k\n                });\n                output.allPlugins[k] = p; // this is used by rnvPluginAdd\n\n                i++;\n            }\n            output.asArray.sort((a, b) => {\n                const aStr = a.name.toLowerCase();\n                const bStr = b.name.toLowerCase();\n                let com = 0;\n                if (aStr > bStr) {\n                    com = 1;\n                } else if (aStr < bStr) {\n                    com = -1;\n                }\n                return com;\n            });\n        });\n    });\n\n    return output;\n};\n\n/* eslint-disable no-await-in-loop */\nexport const rnvPluginAdd = async (c) => {\n    logTask('rnvPluginAdd');\n\n    if (c.runtime.isWrapper) {\n        return Promise.reject('Adding plugins in wrapper project is not supported.');\n    }\n\n    const selPluginKey = c.program.rawArgs[4];\n\n    const o = _getPluginList(c);\n\n    const selPlugin = selPluginKey && o.allPlugins[selPluginKey];\n    const selectedPlugins = {};\n    const installMessage = [];\n\n    if (!selPlugin) {\n        const { plugin } = await inquirer.prompt({\n            name: 'plugin',\n            type: 'rawlist',\n            message: 'Select the plugins you want to add',\n            choices: o.asArray,\n            pageSize: 50\n        });\n\n        selectedPlugins[plugin] = o.allPlugins[plugin];\n        installMessage.push(\n            `${chalk.white(plugin)} v(${chalk.green(\n                o.allPlugins[plugin].version\n            )})`\n        );\n    } else {\n        selectedPlugins[selPluginKey] = selPlugin;\n        installMessage.push(\n            `${chalk.white(selPluginKey)} v(${chalk.green(selPlugin.version)})`\n        );\n    }\n\n    const questionPlugins = {};\n\n    Object.keys(selectedPlugins).forEach((key) => {\n        // c.buildConfig.plugins[key] = 'source:rnv';\n        const plugin = selectedPlugins[key];\n        if (plugin.props) questionPlugins[key] = plugin;\n\n        c.files.project.config.plugins[key] = 'source:rnv';\n\n        // c.buildConfig.plugins[key] = selectedPlugins[key];\n        _checkAndAddDependantPlugins(c, selectedPlugins[key]);\n    });\n\n    const pluginKeys = Object.keys(questionPlugins);\n    for (let i = 0; i < pluginKeys.length; i++) {\n        const pluginKey = pluginKeys[i];\n        const plugin = questionPlugins[pluginKey];\n        const pluginProps = Object.keys(plugin.props);\n        const finalProps = {};\n        for (let i2 = 0; i2 < pluginProps.length; i2++) {\n            const { propValue } = await inquirer.prompt({\n                name: 'propValue',\n                type: 'input',\n                message: `${pluginKey}: Add value for ${\n                    pluginProps[i2]\n                } (You can do this later in ./renative.json file)`\n            });\n            finalProps[pluginProps[i2]] = propValue;\n        }\n        c.files.project.config.plugins[pluginKey] = {};\n        c.files.project.config.plugins[pluginKey].props = finalProps;\n    }\n\n    const spinner = ora(`Installing: ${installMessage.join(', ')}`).start();\n\n    writeFileSync(c.paths.project.config, c.files.project.config);\n    spinner.succeed('All plugins installed!');\n    logSuccess('Plugins installed successfully!');\n};\n\nconst _checkAndAddDependantPlugins = (c, plugin) => {\n    logTask('_checkAndAddDependantPlugins');\n    if (plugin.dependsOn) {\n        plugin.dependsOn.forEach((v) => {\n            Object.keys(c.files.rnv.pluginTemplates.configs).forEach((p) => {\n                const templatePlugins = c.files.rnv.pluginTemplates.configs[p].pluginTemplates;\n                if (templatePlugins[v]) {\n                    logDebug(`Added dependant plugin ${v}`);\n                    c.buildConfig.plugins[v] = templatePlugins[v];\n                }\n            });\n        });\n    }\n};\n\nexport const rnvPluginUpdate = async (c) => {\n    logTask('rnvPluginUpdate');\n\n    const o = _getPluginList(c, true);\n\n    // console.log(o.asString);\n\n    const { confirm } = await inquirer.prompt({\n        name: 'confirm',\n        type: 'confirm',\n        message: 'Above installed plugins will be updated with RNV'\n    });\n\n    if (confirm) {\n        const { plugins } = c.buildConfig;\n        Object.keys(plugins).forEach((key) => {\n            // c.buildConfig.plugins[key] = o.json[key];\n            c.files.project.config.plugins[key] = o.json[key];\n        });\n\n        writeFileSync(c.paths.project.config, c.files.project.config);\n\n        logSuccess('Plugins updated successfully!');\n    }\n};\n\nconst getMergedPlugin = (c, key, plugins) => {\n    const plugin = plugins[key];\n\n    // const origPlugin = c.files.rnv.pluginTemplates.config.pluginTemplates[key];\n    const rnvPlugin = c.files.rnv.pluginTemplates.configs?.rnv?.pluginTemplates?.[key];\n    if (rnvPlugin) rnvPlugin.source = 'rnv';\n\n    let origPlugin;\n    if (typeof plugin === 'string' || plugin instanceof String) {\n        if (plugin.startsWith('source:')) {\n            const scope = plugin.split(':').pop();\n\n            origPlugin = c.files.rnv.pluginTemplates.configs[scope]?.pluginTemplates?.[key];\n\n            if (origPlugin) {\n                origPlugin.source = scope;\n                if (rnvPlugin && !origPlugin?.skipMerge) {\n                    origPlugin = _getMergedPlugin(\n                        c,\n                        rnvPlugin,\n                        origPlugin,\n                        true,\n                        true\n                    );\n                }\n                return origPlugin;\n            }\n            logWarning(\n                `Plugin ${key} is not recognized plugin in ${plugin} scope`\n            );\n            return null;\n        }\n        return {\n            version: plugin,\n            source: 'rnv'\n        };\n    }\n\n    if (plugin) {\n        if (plugin.source) {\n            origPlugin = c.files.rnv.pluginTemplates.configs[plugin.source]?.pluginTemplates?.[key];\n            if (rnvPlugin && !origPlugin?.skipMerge) {\n                origPlugin = _getMergedPlugin(\n                    c,\n                    rnvPlugin,\n                    origPlugin,\n                    true,\n                    true\n                );\n            }\n        } else {\n            origPlugin = rnvPlugin;\n        }\n    }\n\n    if (origPlugin) {\n        const mergedPlugin = _getMergedPlugin(\n            c,\n            origPlugin,\n            plugin,\n            true,\n            true\n        );\n        return mergedPlugin;\n    }\n\n    return plugin;\n};\n\nconst _getMergedPlugin = (c, obj1, obj2) => {\n    const configPropsInject = {};\n    INJECTABLE_CONFIG_PROPS.forEach((v) => {\n        configPropsInject[v] = getConfigProp(c, c.platform, v);\n    });\n    const obj = sanitizeDynamicProps(\n        mergeObjects(c, obj1, obj2, true, true),\n        c.buildConfig?._refs\n    );\n    const plugin = sanitizeDynamicProps(obj, obj.props, configPropsInject);\n    return plugin;\n};\n\nexport const configurePlugins = c => new Promise((resolve, reject) => {\n    logTask('configurePlugins');\n\n    if (!c.files.project.package.dependencies) {\n        c.files.project.package.dependencies = {};\n    }\n\n    let hasPackageChanged = false;\n\n    if (!c.buildConfig?.plugins) {\n        resolve();\n        return;\n    }\n\n    Object.keys(c.buildConfig.plugins).forEach((k) => {\n        const { dependencies } = c.files.project.package;\n        const { devDependencies } = c.files.project.package;\n        const plugin = getMergedPlugin(c, k, c.buildConfig.plugins);\n\n        if (!plugin) {\n            logWarning(\n                `Plugin with name ${chalk.white(\n                    k\n                )} does not exists in ReNative source:rnv scope. you need to define it manually here: ${chalk.white(\n                    c.paths.project.builds.config\n                )}`\n            );\n        } else if (dependencies && dependencies[k]) {\n            if (\n                plugin['no-active'] !== true\n                    && plugin['no-npm'] !== true\n                    && dependencies[k] !== plugin.version\n            ) {\n                if (k === 'renative' && c.runtime.isWrapper) {\n                    logWarning(\n                        \"You're in ReNative wrapper mode. plugin renative will stay as local dep!\"\n                    );\n                } else {\n                    logWarning(\n                        `Version mismatch of dependency ${chalk.white(\n                            k\n                        )} between:\n${chalk.white(c.paths.project.package)}: v(${chalk.red(dependencies[k])}) and\n${chalk.white(c.paths.project.builds.config)}: v(${chalk.green(\n    plugin.version\n)}).\npackage.json will be overriden`\n                    );\n\n                    hasPackageChanged = true;\n                    dependencies[k] = plugin.version;\n                }\n            }\n        } else if (devDependencies && devDependencies[k]) {\n            if (\n                plugin['no-active'] !== true\n                    && plugin['no-npm'] !== true\n                    && devDependencies[k] !== plugin.version\n            ) {\n                logWarning(\n                    `Version mismatch of devDependency ${chalk.white(\n                        k\n                    )} between package.json: v(${chalk.red(\n                        devDependencies[k]\n                    )}) and plugins.json: v(${chalk.red(\n                        plugin.version\n                    )}). package.json will be overriden`\n                );\n                hasPackageChanged = true;\n                devDependencies[k] = plugin.version;\n            }\n        } else if (\n            plugin['no-active'] !== true\n                && plugin['no-npm'] !== true\n        ) {\n            // Dependency does not exists\n            if (plugin.version) {\n                logWarning(\n                    `Missing dependency ${chalk.white(k)} v(${chalk.red(\n                        plugin.version\n                    )}) in package.json. package.json will be overriden`\n                );\n\n                hasPackageChanged = true;\n                dependencies[k] = plugin.version;\n            }\n        }\n\n        if (plugin && plugin.npm) {\n            Object.keys(plugin.npm).forEach((npmKey) => {\n                const npmDep = plugin.npm[npmKey];\n                if (!dependencies[npmKey]) {\n                    logWarning(\n                        `Plugin ${chalk.white(\n                            k\n                        )} requires npm dependency ${chalk.white(\n                            npmKey\n                        )} .Adding missing npm dependency to you package.json`\n                    );\n                    dependencies[npmKey] = npmDep;\n                    hasPackageChanged = true;\n                } else if (dependencies[npmKey] !== npmDep) {\n                    logWarning(\n                        `Plugin ${chalk.white(\n                            k\n                        )} dependency mismatch (${chalk.red(\n                            dependencies[npmKey]\n                        )}) => (${chalk.green(\n                            npmDep\n                        )}) .updating npm dependency in your package.json`\n                    );\n                    dependencies[npmKey] = npmDep;\n                    hasPackageChanged = true;\n                }\n            });\n        }\n    });\n\n    logTask(`configurePlugins:${hasPackageChanged}`, chalk.grey);\n    versionCheck(c)\n        .then(() => {\n            if (hasPackageChanged && !c.runtime.skipPackageUpdate) {\n                writeFileSync(\n                    c.paths.project.package,\n                    c.files.project.package\n                );\n                c._requiresNpmInstall = true;\n            }\n            resolve();\n        })\n        .catch(e => reject(e));\n});\n\nconst parsePlugins = (c, platform, pluginCallback, ignorePlatformObjectCheck) => {\n    logTask(`parsePlugins:${platform}`);\n    if (c.buildConfig) {\n        const includedPlugins = getConfigProp(\n            c,\n            platform,\n            'includedPlugins',\n            []\n        );\n        const excludedPlugins = getConfigProp(\n            c,\n            platform,\n            'excludedPlugins',\n            []\n        );\n        if (includedPlugins) {\n            const { plugins } = c.buildConfig;\n            if (plugins) {\n                Object.keys(plugins).forEach((key) => {\n                    if (\n                        (includedPlugins.includes('*')\n                            || includedPlugins.includes(key))\n                        && !excludedPlugins.includes(key)\n                    ) {\n                        const plugin = getMergedPlugin(c, key, plugins);\n                        if (plugin) {\n                            const pluginPlat = plugin[platform];\n                            if (ignorePlatformObjectCheck) {\n                                pluginCallback(plugin, pluginPlat, key);\n                            } else if (pluginPlat) {\n                                if (\n                                    plugin['no-active'] !== true\n                                    && plugin.enabled !== false\n                                    && pluginPlat.enabled !== false\n                                ) {\n                                    if (plugin.deprecated) {\n                                        logWarning(plugin.deprecated);\n                                    }\n                                    if (pluginCallback) {\n                                        pluginCallback(plugin, pluginPlat, key);\n                                    }\n                                } else {\n                                    logWarning(\n                                        `Plugin ${key} is marked disabled. skipping.`\n                                    );\n                                }\n                            }\n                        }\n                    }\n                });\n            } else {\n                logError(\n                    `You have no plugins defined in ${chalk.white(\n                        c.paths.project.builds.config\n                    )}`\n                );\n            }\n        } else {\n            logWarning(\n                `You haven't included any ${chalk.white(\n                    '{ common: { includedPlugins: [] }}'\n                )} in your ${chalk.white(\n                    c.paths.appConfig.config\n                )}. Your app might not work correctly`\n            );\n        }\n    }\n};\n\nexport const loadPluginTemplates = (c) => {\n    logTask('loadPluginTemplates');\n    c.files.rnv.pluginTemplates.config = readObjectSync(\n        c.paths.rnv.pluginTemplates.config\n    );\n\n    c.files.rnv.pluginTemplates.configs = {\n        rnv: c.files.rnv.pluginTemplates.config\n    };\n\n    c.paths.rnv.pluginTemplates.dirs = { rnv: c.paths.rnv.pluginTemplates.dir };\n\n    const customPluginTemplates = c.files.project.config?.paths?.pluginTemplates;\n    if (customPluginTemplates) {\n        Object.keys(customPluginTemplates).forEach((k) => {\n            const val = customPluginTemplates[k];\n            if (val.npm) {\n                const npmDep = c.files.project.package?.dependencies[val.npm]\n                    || c.files.project.package?.devDependencies[val.npm];\n\n                if (npmDep) {\n                    let ptPath;\n                    if (npmDep.startsWith('file:')) {\n                        ptPath = path.join(\n                            c.paths.project.dir,\n                            npmDep.replace('file:', ''),\n                            val.path || ''\n                        );\n                    } else {\n                        // ptPath = path.join(c.paths.project.nodeModulesDir, val.npm, val.path || '');\n                        ptPath = `${doResolve(val.npm)}/${val.path}`;\n                    }\n\n                    const ptConfig = path.join(\n                        ptPath,\n                        RENATIVE_CONFIG_PLUGINS_NAME\n                    );\n                    c.paths.rnv.pluginTemplates.dirs[k] = ptPath;\n                    if (fs.existsSync(ptConfig)) {\n                        c.files.rnv.pluginTemplates.configs[k] = readObjectSync(\n                            ptConfig\n                        );\n                    }\n                }\n            }\n        });\n    }\n};\n\n// const overridePlugins = async (c, pluginsPath) => {\n//     logDebug(`overridePlugins:${pluginsPath}`, chalk.grey);\n//\n//     if (!fs.existsSync(pluginsPath)) {\n//         logInfo(\n//             `Your project plugin folder ${chalk.white(\n//                 pluginsPath\n//             )} does not exists. skipping plugin configuration`\n//         );\n//         return;\n//     }\n//\n//     fs.readdirSync(pluginsPath).forEach((dir) => {\n//         if (dir.startsWith('@')) {\n//             const pluginsPathNested = path.join(pluginsPath, dir);\n//             fs.readdirSync(pluginsPathNested).forEach((subDir) => {\n//                 _overridePlugin(c, pluginsPath, `${dir}/${subDir}`);\n//             });\n//         } else {\n//             _overridePlugin(c, pluginsPath, dir);\n//         }\n//     });\n// };\n\nconst _overridePlugin = (c, pluginsPath, dir) => {\n    const source = path.resolve(pluginsPath, dir, 'overrides');\n    const dest = doResolve(dir, false);\n    if (!dest) return;\n\n    const plugin = getMergedPlugin(c, dir, c.buildConfig.plugins);\n    let flavourSource;\n    if (plugin) {\n        flavourSource = path.resolve(\n            pluginsPath,\n            dir,\n            `overrides@${plugin.version}`\n        );\n    }\n\n    if (flavourSource && fs.existsSync(flavourSource)) {\n        copyFolderContentsRecursiveSync(flavourSource, dest, false);\n    } else if (fs.existsSync(source)) {\n        copyFolderContentsRecursiveSync(source, dest, false);\n        // fs.readdirSync(pp).forEach((dir) => {\n        //     copyFileSync(path.resolve(pp, file), path.resolve(c.paths.project.dir, 'node_modules', dir));\n        // });\n    } else {\n        logDebug(\n            `Your plugin configuration has no override path ${chalk.white(\n                source\n            )}. skipping folder override action`\n        );\n    }\n\n    const overridePath = path.resolve(pluginsPath, dir, 'overrides.json');\n    const overrideConfig = readObjectSync(\n        path.resolve(pluginsPath, dir, 'overrides.json')\n    );\n    if (overrideConfig?.overrides) {\n        Object.keys(overrideConfig.overrides).forEach((k) => {\n            const override = overrideConfig.overrides[k];\n            const ovDir = path.join(dest, k);\n            if (fs.existsSync(ovDir)) {\n                if (fs.lstatSync(ovDir).isDirectory()) {\n                    logWarning(\n                        'overrides.json: Directories not supported yet. specify path to actual file'\n                    );\n                } else {\n                    let fileToFix = fs.readFileSync(ovDir).toString();\n                    Object.keys(override).forEach((fk) => {\n                        const regEx = new RegExp(fk, 'g');\n                        const count = (fileToFix.match(regEx) || []).length;\n                        if (!count) {\n                            logWarning(`No Match found in ${chalk.red(\n                                ovDir\n                            )} for expression: ${chalk.red(fk)}.\nConsider update or removal of ${chalk.white(overridePath)}`);\n                        } else {\n                            fileToFix = fileToFix.replace(regEx, override[fk]);\n                        }\n                    });\n                    fsWriteFileSync(ovDir, fileToFix);\n                }\n            }\n        });\n    }\n};\n\n\nexport const overrideTemplatePlugins = async (c) => {\n    logTask('overrideTemplatePlugins');\n\n    const rnvPluginsDirs = c.paths.rnv.pluginTemplates.dirs;\n    const appPluginDirs = c.paths.appConfig.pluginDirs;\n    const appBasePluginDir = c.paths.project.projectConfig.pluginsDir;\n\n    parsePlugins(c, c.platform, (plugin, pluginPlat, key) => {\n        const pluginOverridePath = rnvPluginsDirs[plugin.source];\n        if (pluginOverridePath) {\n            _overridePlugin(c, pluginOverridePath, key);\n        }\n        if (appBasePluginDir) {\n            _overridePlugin(c, appBasePluginDir, key);\n        }\n        if (appPluginDirs) {\n            for (let k = 0; k < appPluginDirs.length; k++) {\n                _overridePlugin(c, appPluginDirs[k], key);\n            }\n        }\n    }, true);\n    return true;\n};\n\nexport const copyTemplatePluginsSync = (c, platform) => {\n    logTask(`copyTemplatePluginsSync:${platform}`);\n\n    const destPath = path.join(getAppFolder(c, platform));\n    parsePlugins(c, platform, (plugin, pluginPlat, key) => {\n        const objectInject = [...c.runtime.configPropsInject];\n        if (plugin.props) {\n            Object.keys(plugin.props).forEach((v) => {\n                objectInject.push({\n                    pattern: `{{props.${v}}}`,\n                    override: plugin.props[v]\n                });\n            });\n        }\n        // FOLDER MERGES FROM PROJECT CONFIG PLUGIN\n        const sourcePathRnvPlugin = getBuildsFolder(\n            c,\n            platform,\n            path.join(c.paths.rnv.pluginTemplates.dir, key)\n        );\n        copyFolderContentsRecursiveSync(sourcePathRnvPlugin, destPath, true, false, false, objectInject);\n\n        // FOLDER MERGES FROM PROJECT CONFIG PLUGIN\n        const sourcePath3 = getBuildsFolder(\n            c,\n            platform,\n            path.join(c.paths.project.projectConfig.dir, `plugins/${key}`)\n        );\n        copyFolderContentsRecursiveSync(sourcePath3, destPath, true, false, false, objectInject);\n\n        // FOLDER MERGES FROM PROJECT CONFIG PLUGIN (PRIVATE)\n        const sourcePath3sec = getBuildsFolder(\n            c,\n            platform,\n            path.join(\n                c.paths.workspace.project.projectConfig.dir,\n                `plugins/${key}`\n            )\n        );\n        copyFolderContentsRecursiveSync(sourcePath3sec, destPath, true, false, false, objectInject);\n\n        // FOLDER MERGES FROM APP CONFIG PLUGIN\n        const sourcePath2 = getBuildsFolder(\n            c,\n            platform,\n            path.join(c.paths.appConfig.dir, `plugins/${key}`)\n        );\n        copyFolderContentsRecursiveSync(sourcePath2, destPath, true, false, false, objectInject);\n\n        // FOLDER MERGES FROM APP CONFIG PLUGIN (PRIVATE)\n        const sourcePath2sec = getBuildsFolder(\n            c,\n            platform,\n            path.join(c.paths.workspace.appConfig.dir, `plugins/${key}`)\n        );\n        copyFolderContentsRecursiveSync(sourcePath2sec, destPath, true, false, false, objectInject);\n    });\n};\n\nconst getLocalRenativePlugin = () => ({\n    version: 'file:../packages/renative',\n    webpack: {\n        modulePaths: [],\n        moduleAliases: {\n            renative: {\n                projectPath: 'packages/renative'\n            }\n        }\n    }\n});\n\nexport { getMergedPlugin, parsePlugins, getLocalRenativePlugin };\n\nexport default { getMergedPlugin, parsePlugins, getLocalRenativePlugin };\n"],"file":"index.js"}