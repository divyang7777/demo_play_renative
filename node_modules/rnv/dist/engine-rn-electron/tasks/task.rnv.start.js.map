{"version":3,"sources":["../../../src/engine-rn-electron/tasks/task.rnv.start.js"],"names":["taskRnvStart","c","parentTask","originTask","platform","port","runtime","hosted","program","then","localhost","catch","logError","TASK_CONFIGURE","TASK_START","MACOS","WINDOWS","description","fn","task","params","PARAMS","withBase","withConfigure","platforms"],"mappings":"uQAAA;AACA;AACA;AACA;;;;;AAKA;AACA;;AAEO,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAOC,CAAP,CAAUC,UAAV,CAAsBC,UAAtB;AAChBC,QADgB,CACHH,CADG,CAChBG,QADgB;AAEhBC,IAFgB,CAEPJ,CAAC,CAACK,OAFK,CAEhBD,IAFgB;AAGhBE,MAHgB,CAGLN,CAAC,CAACO,OAHG,CAGhBD,MAHgB;;AAKxB,oBAAQ,cAAR,WAAkCL,UAAlC,UAAqDD,CAAC,CAACK,OAAF,CAAUD,IAA/D,YAA8E,CAAC,CAACE,MAAhF;;AAEA,GAAIA,MAAJ,CAAY;AACR,+BAAeN,CAAf;AACKQ,IADL,CACU,iBAAM,iCAAeR,CAAC,CAACK,OAAF,CAAUI,SAAzB,KAAsCL,IAAtC,KAAN,EADV;AAEKM,KAFL,CAEWC,gBAFX;AAGH,CAXuB;;AAanBV,UAbmB;AAcd,+BAAYD,CAAZ,CAAeY,yBAAf,CAA+BC,qBAA/B,CAA2CX,UAA3C,CAdc;;;AAiBhBC,QAjBgB;AAkBfW,gBAlBe;AAmBfC,kBAnBe;AAoBT,iCAAiBf,CAAjB,CApBS;;AAsBT,sCAAiBA,CAAjB,CAtBS,wEAArB,C;;;;AA0BQ;AACXgB,WAAW,CAAE,yBADF;AAEXC,EAAE,CAAElB,YAFO;AAGXmB,IAAI,CAAE,OAHK;AAIXC,MAAM,CAAEC,kBAAOC,QAAP,CAAgBD,kBAAOE,aAAP,EAAhB,CAJG;AAKXC,SAAS,CAAE;AACPT,gBADO;AAEPC,kBAFO,CALA,C","sourcesContent":["import open from 'better-opn';\nimport { logErrorPlatform } from '../../core/platformManager';\nimport { logTask, logError } from '../../core/systemManager/logger';\nimport { MACOS,\n    WINDOWS,\n    TASK_START,\n    TASK_CONFIGURE,\n    PARAMS } from '../../core/constants';\nimport { waitForWebpack, runWebpackServer } from '../../sdk-webpack';\nimport { executeTask } from '../../core/engineManager';\n\nexport const taskRnvStart = async (c, parentTask, originTask) => {\n    const { platform } = c;\n    const { port } = c.runtime;\n    const { hosted } = c.program;\n\n    logTask('taskRnvStart', `parent:${parentTask} port:${c.runtime.port} hosted:${!!hosted}`);\n\n    if (hosted) {\n        waitForWebpack(c)\n            .then(() => open(`http://${c.runtime.localhost}:${port}/`))\n            .catch(logError);\n    }\n\n    if (!parentTask) {\n        await executeTask(c, TASK_CONFIGURE, TASK_START, originTask);\n    }\n\n    switch (platform) {\n        case MACOS:\n        case WINDOWS:\n            return runWebpackServer(c);\n        default:\n            return logErrorPlatform(c);\n    }\n};\n\nexport default {\n    description: 'Starts bundler / server',\n    fn: taskRnvStart,\n    task: 'start',\n    params: PARAMS.withBase(PARAMS.withConfigure()),\n    platforms: [\n        MACOS,\n        WINDOWS,\n    ],\n};\n"],"file":"task.rnv.start.js"}