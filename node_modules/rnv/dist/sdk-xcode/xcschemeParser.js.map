{"version":3,"sources":["../../src/sdk-xcode/xcschemeParser.js"],"names":["parseXcscheme","c","platform","poisxSpawn","appFolder","appFolderName","appTemplateFolder","debuggerId","launcherId","schemePath","injects","pattern","override","path","join"],"mappings":";AACA;AACA;;;;;AAKA;AACA;AACA;;AAEO,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAOC,CAAP,CAAUC,QAAV;AACzB,oBAAQ,eAAR;;;;;;;;;;;;;;;;AAgBMC,UAjBmB,CAiBN,IAjBM;AAkBnBC,SAlBmB,CAkBP,yBAAaH,CAAb,CAlBO;AAmBnBI,aAnBmB,CAmBH,4BAAiBJ,CAAjB,CAAoBC,QAApB,CAnBG;AAoBnBI,iBApBmB,CAoBC,iCAAqBL,CAArB,CAAwBC,QAAxB,CApBD;;AAsBnBK,UAtBmB,CAsBNJ,UAAU;AACvB,EADuB;AAEvB,wCAxBmB;AAyBnBK,UAzBmB,CAyBNL,UAAU;AACvB,yCADuB;AAEvB,wCA3BmB;AA4BnBM,UA5BmB,CA4BHJ,aA5BG,sCA4B+CA,aA5B/C;;AA8BnBK,OA9BmB,CA8BT;AACZ,CAAEC,OAAO,CAAE,wBAAX,CAAqCC,QAAQ,CAAEL,UAA/C,CADY;AAEZ,CAAEI,OAAO,CAAE,wBAAX,CAAqCC,QAAQ,CAAEJ,UAA/C,CAFY,CA9BS;;;AAmCzB,6BAAiBP,CAAjB,CAAoBS,OAApB;;AAEA;AACIG,cAAKC,IAAL,CAAUR,iBAAV,CAA6BG,UAA7B,CADJ;AAEII,cAAKC,IAAL,CAAUV,SAAV,CAAqBK,UAArB,CAFJ;AAGIC,OAHJ,CAGa,IAHb,CAGmBT,CAHnB,EArCyB,sEAAtB,C","sourcesContent":["/* eslint-disable import/no-cycle */\nimport path from 'path';\nimport {\n    getAppFolder,\n    getAppTemplateFolder,\n    addSystemInjects\n} from '../core/common';\nimport { logTask } from '../core/systemManager/logger';\nimport { getAppFolderName } from './index';\nimport { writeCleanFile } from '../core/systemManager/fileutils';\n\nexport const parseXcscheme = async (c, platform) => {\n    logTask('parseXcscheme');\n    // XCSCHEME\n    // const allowProvisioningUpdates = getConfigProp(\n    //     c,\n    //     platform,\n    //     'allowProvisioningUpdates',\n    //     true\n    // );\n    // const provisioningStyle = getConfigProp(\n    //     c,\n    //     platform,\n    //     'provisioningStyle',\n    //     'Automatic'\n    // );\n    // const poisxSpawn = runScheme === 'Release' && !allowProvisioningUpdates && provisioningStyle === 'Manual';\n    // Since RN 61+ this must be set to true otherwise debug apps install but not launch\n    const poisxSpawn = true;\n    const appFolder = getAppFolder(c);\n    const appFolderName = getAppFolderName(c, platform);\n    const appTemplateFolder = getAppTemplateFolder(c, platform);\n\n    const debuggerId = poisxSpawn\n        ? ''\n        : 'Xcode.DebuggerFoundation.Debugger.LLDB';\n    const launcherId = poisxSpawn\n        ? 'Xcode.IDEFoundation.Launcher.PosixSpawn'\n        : 'Xcode.DebuggerFoundation.Launcher.LLDB';\n    const schemePath = `${appFolderName}.xcodeproj/xcshareddata/xcschemes/${appFolderName}.xcscheme`;\n\n    const injects = [\n        { pattern: '{{PLUGIN_DEBUGGER_ID}}', override: debuggerId },\n        { pattern: '{{PLUGIN_LAUNCHER_ID}}', override: launcherId }\n    ];\n\n    addSystemInjects(c, injects);\n\n    writeCleanFile(\n        path.join(appTemplateFolder, schemePath),\n        path.join(appFolder, schemePath),\n        injects, null, c\n    );\n};\n"],"file":"xcschemeParser.js"}