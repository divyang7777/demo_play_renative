{"version":3,"sources":["../../src/integration-fastlane/task.rnv.fastlane.js"],"names":["taskRnvFastlane","c","args","shift","setupInstance","askToInstallSDK","appFolder","platform","fastlaneArgs","program","rawArgs","slice","join","interactive","env","process","cwd","description","fn","task","params","PARAMS","withBase","platforms","IOS","TVOS","ANDROID","ANDROID_TV","ANDROID_WEAR"],"mappings":"8WAAA;AACA;AACA;;;;;;AAMA;;AAEO,GAAMA,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAOC,CAAP;AACrBC,IADqB,CACd,4BAAgBD,CAAhB,CADc;AAE3BC,IAAI,CAACC,KAAL,GAF2B;;AAItB,4BAAkB,UAAlB,CAJsB;AAKjBC,aALiB,CAKD,2BALC;AAMjBA,aAAa,CAACC,eAAd,CAA8B,UAA9B,CANiB;;;AASrBC,SATqB,CAST,yBAAaL,CAAb,CAAgBA,CAAC,CAACM,QAAlB,CATS;;AAWvBC,YAXuB,iCAWJP,CAAC,CAACQ,OAAF,CAAUC,OAXN;AAY3BF,YAAY,CAAGA,YAAY,CAACG,KAAb,CAAmB,CAAnB,CAAf,CAZ2B;;AAcpB,uBAAaV,CAAb,aAA4BO,YAAY,CAACI,IAAb,CAAkB,GAAlB,CAA5B,CAAsD;AACzDC,WAAW,CAAE,IAD4C;AAEzDC,GAAG,CAAEC,OAAO,CAACD,GAF4C;AAGzDE,GAAG,CAAEV,SAHoD,CAAtD,CAdoB,wEAAxB,C;;;;AAqBQ;AACXW,WAAW,CAAE,gCADF;AAEXC,EAAE,CAAElB,eAFO;AAGXmB,IAAI,CAAE,UAHK;AAIXC,MAAM,CAAEC,kBAAOC,QAAP,EAJG;AAKXC,SAAS,CAAE;AACPC,cADO;AAEPC,eAFO;AAGPC,kBAHO;AAIPC,qBAJO;AAKPC,uBALO,CALA,C","sourcesContent":["import { executeAsync, commandExistsSync } from '../core/systemManager/exec';\nimport { getAppFolder, getCliArguments } from '../core/common';\nimport { IOS,\n    TVOS,\n    ANDROID,\n    ANDROID_TV,\n    ANDROID_WEAR,\n    PARAMS } from '../core/constants';\nimport PlatformSetup from '../core/setupManager';\n\nexport const taskRnvFastlane = async (c) => {\n    const args = getCliArguments(c);\n    args.shift(); // we know the first one is fastlane, trash it\n\n    if (!commandExistsSync('fastlane')) {\n        const setupInstance = PlatformSetup();\n        await setupInstance.askToInstallSDK('fastlane');\n    }\n\n    const appFolder = getAppFolder(c, c.platform);\n\n    let fastlaneArgs = [...c.program.rawArgs];\n    fastlaneArgs = fastlaneArgs.slice(3);\n\n    return executeAsync(c, `fastlane ${fastlaneArgs.join(' ')}`, {\n        interactive: true,\n        env: process.env,\n        cwd: appFolder\n    });\n};\n\nexport default {\n    description: 'Run fstalane commands directly',\n    fn: taskRnvFastlane,\n    task: 'fastlane',\n    params: PARAMS.withBase(),\n    platforms: [\n        IOS,\n        TVOS,\n        ANDROID,\n        ANDROID_TV,\n        ANDROID_WEAR,\n    ],\n};\n"],"file":"task.rnv.fastlane.js"}