export declare class _Code {
    private readonly _str;
    constructor(s: string);
    toString(): string;
    emptyStr(): boolean;
}
export declare const IDENTIFIER: RegExp;
export declare class Name extends _Code {
    constructor(s: string);
    emptyStr(): boolean;
}
export declare type Code = _Code | Name;
export declare type SafeExpr = Code | number | boolean | null;
export declare const nil: _Code;
declare type TemplateArg = SafeExpr | string | undefined;
export declare function _(strs: TemplateStringsArray, ...args: TemplateArg[]): _Code;
export declare function str(strs: TemplateStringsArray, ...args: (TemplateArg | string[])[]): _Code;
export declare function strConcat(c1: Code, c2: Code): Code;
export declare function stringify(x: unknown): Code;
export declare function getProperty(key: Code | string | number): Code;
export {};
